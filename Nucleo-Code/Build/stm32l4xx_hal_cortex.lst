ARM GAS  /tmp/ccHm9UDT.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_cortex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c"
  20              		.section	.text.__NVIC_EnableIRQ,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__NVIC_EnableIRQ:
  27              	.LVL0:
  28              	.LFB106:
  29              		.file 2 "stm/stm32l4xx/CMSIS/Include/core_cm4.h"
   1:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * @version  V5.1.0
   5:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * @date     13. March 2019
   6:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*
   8:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  *
  10:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  *
  12:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  *
  16:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  *
  18:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
  24:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  25:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif
ARM GAS  /tmp/ccHm9UDT.s 			page 2


  30:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  31:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  34:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  36:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif
  39:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  40:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
  41:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  44:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  47:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  50:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
  53:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  54:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  55:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
  59:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
  61:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
  62:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  63:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  65:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  71:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  73:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** */
  76:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #else
  81:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #endif
  84:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #else
  85:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
ARM GAS  /tmp/ccHm9UDT.s 			page 3


  87:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
  88:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #else
  93:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #endif
  96:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #else
  97:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
  99:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 100:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #else
 105:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #endif
 108:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #else
 109:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
 111:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 112:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #else
 117:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #endif
 120:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #else
 121:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
 123:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 124:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #else
 129:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #endif
 132:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #else
 133:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
 135:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 136:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #else
 141:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #endif
ARM GAS  /tmp/ccHm9UDT.s 			page 4


 144:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #else
 145:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
 147:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 148:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #else
 153:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #endif
 156:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #else
 157:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
 159:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 160:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif
 161:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 162:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 164:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 165:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 167:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif
 168:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 169:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 171:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 173:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 176:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif
 179:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 180:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
 186:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 187:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
 191:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 192:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
 196:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 197:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
ARM GAS  /tmp/ccHm9UDT.s 			page 5


 201:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 202:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
 206:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif
 207:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 208:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 210:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 212:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** */
 216:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #else
 219:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif
 221:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 224:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 229:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 231:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 232:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 233:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   - Core Register
 237:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 240:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 243:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 245:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** */
 248:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 249:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 250:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
 254:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 255:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 256:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 257:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
ARM GAS  /tmp/ccHm9UDT.s 			page 6


 258:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 259:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef union
 260:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 261:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   struct
 262:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 263:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 275:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 276:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 279:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 282:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 285:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 288:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 291:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 294:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 295:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 296:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 298:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef union
 299:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 300:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   struct
 301:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 302:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 307:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 308:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 312:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 313:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 314:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
ARM GAS  /tmp/ccHm9UDT.s 			page 7


 315:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 316:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef union
 317:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 318:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   struct
 319:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 320:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 336:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 340:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 343:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 346:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 349:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 352:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 355:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 358:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 361:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 364:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 367:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 368:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 369:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 371:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef union
ARM GAS  /tmp/ccHm9UDT.s 			page 8


 372:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 373:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   struct
 374:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 375:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 383:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 387:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 390:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 393:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 395:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 396:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 397:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
 401:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 402:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 403:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 404:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 406:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef struct
 407:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 408:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 423:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 427:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 9


 429:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 430:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 431:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
 435:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 436:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 437:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 438:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 440:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef struct
 441:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 442:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 465:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 469:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 472:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 475:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 478:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 481:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 485:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
ARM GAS  /tmp/ccHm9UDT.s 			page 10


 486:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 488:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 491:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 494:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 497:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 500:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 503:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 506:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 509:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 512:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 516:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 520:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 523:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 526:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 529:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 532:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 535:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 538:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 542:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
ARM GAS  /tmp/ccHm9UDT.s 			page 11


 543:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 545:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 548:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 552:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 555:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 558:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 561:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 564:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 567:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 571:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 574:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 577:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 580:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 583:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 586:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 589:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 592:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 595:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 598:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
ARM GAS  /tmp/ccHm9UDT.s 			page 12


 600:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 601:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 604:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 607:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 610:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 614:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 617:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 620:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 624:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 627:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 630:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 633:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 636:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 639:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 643:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 646:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 649:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 652:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 655:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
ARM GAS  /tmp/ccHm9UDT.s 			page 13


 657:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 658:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 661:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 665:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 668:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 671:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 674:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 677:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 680:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 684:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 687:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 690:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 694:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 697:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 700:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 703:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 706:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 708:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 709:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 710:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
ARM GAS  /tmp/ccHm9UDT.s 			page 14


 714:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 715:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 716:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 717:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 719:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef struct
 720:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 721:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 726:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 730:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 734:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 737:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 740:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 743:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 746:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 748:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 749:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 750:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
 754:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 755:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 756:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 757:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 759:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef struct
 760:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 761:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 767:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 15


 771:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 774:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 777:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 780:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 784:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 788:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 792:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 795:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 798:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 800:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 801:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 802:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
 806:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 807:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 808:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 809:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 811:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef struct
 812:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 813:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __OM  union
 814:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 815:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
ARM GAS  /tmp/ccHm9UDT.s 			page 16


 828:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 830:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } ITM_Type;
 843:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 844:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 848:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 852:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 855:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 858:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 861:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 864:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 867:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 870:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 873:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 876:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 880:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 883:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
ARM GAS  /tmp/ccHm9UDT.s 			page 17


 885:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 886:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 888:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 889:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 890:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
 894:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 895:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 896:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
 897:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
 899:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef struct
 900:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 901:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 926:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 930:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 933:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 936:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 939:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 18


 942:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 945:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 948:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 951:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 954:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 957:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 960:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 963:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 966:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 969:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 972:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 975:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 978:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 981:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 985:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 989:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 993:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 997:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
ARM GAS  /tmp/ccHm9UDT.s 			page 19


 999:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1001:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1005:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1009:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1012:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1015:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1018:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1021:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1024:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1027:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1030:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1033:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1035:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1036:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1037:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
1041:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1042:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1043:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1044:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1046:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef struct
1047:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1048:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
ARM GAS  /tmp/ccHm9UDT.s 			page 20


1056:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1074:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1078:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1082:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1086:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1089:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1092:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1095:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1099:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1102:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1106:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1110:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 21


1113:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1116:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1119:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1122:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1125:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1128:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1132:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1135:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1139:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1142:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1145:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1148:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1151:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1154:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1157:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1161:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1164:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1168:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
ARM GAS  /tmp/ccHm9UDT.s 			page 22


1170:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1172:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1175:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1178:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1181:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1184:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1187:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1191:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1194:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1196:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1197:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1199:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
1203:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1204:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1205:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1206:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1208:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef struct
1209:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1210:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } MPU_Type;
1222:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1223:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1225:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1226:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
ARM GAS  /tmp/ccHm9UDT.s 			page 23


1227:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1229:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1232:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1235:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1236:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1239:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1242:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1245:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1249:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1253:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1256:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1259:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1263:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1266:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1269:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1272:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1275:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1278:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1281:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 24


1284:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1287:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1290:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1293:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1294:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1295:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
1299:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1300:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1301:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1302:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1304:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef struct
1305:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1306:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } FPU_Type;
1314:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1315:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1319:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1322:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1325:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1328:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1331:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1334:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1337:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1340:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
ARM GAS  /tmp/ccHm9UDT.s 			page 25


1341:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1343:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1347:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1351:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1354:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1357:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1360:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1364:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1367:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1370:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1373:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1376:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1379:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1382:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1385:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1389:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1392:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1395:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 26


1398:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1400:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1403:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1405:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1406:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1407:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
1411:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1412:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1413:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1414:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1416:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** typedef struct
1417:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1418:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1423:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1424:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1428:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1431:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1434:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1437:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1440:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1443:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1446:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1449:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1452:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 27


1455:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1458:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1461:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1465:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1468:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1472:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1475:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1478:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1481:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1484:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1487:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1490:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1493:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1496:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1499:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1502:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1505:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1508:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1510:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1511:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccHm9UDT.s 			page 28


1512:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
1516:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1517:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1518:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1519:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1523:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** */
1524:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1526:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1527:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** */
1532:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1534:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1536:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1537:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1538:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
1542:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1543:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1544:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1554:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1563:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif
1567:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1568:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
ARM GAS  /tmp/ccHm9UDT.s 			page 29


1569:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1571:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} */
1572:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1573:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1574:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1575:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1576:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1577:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1578:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1579:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1580:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1581:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1582:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1583:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1584:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** */
1586:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1587:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1588:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1589:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1591:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
1595:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1596:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1597:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
1601:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #else
1603:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1617:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #endif
1621:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #else
1623:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
ARM GAS  /tmp/ccHm9UDT.s 			page 30


1626:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1627:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1629:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1630:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1638:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1639:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1640:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1641:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1644:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1648:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1650:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1651:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1653:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
1660:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1661:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1662:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1663:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1664:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1667:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1669:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1670:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
1671:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1672:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1673:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1674:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1675:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1678:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1679:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
  30              		.loc 2 1680 1 view -0
  31              		.cfi_startproc
ARM GAS  /tmp/ccHm9UDT.s 			page 31


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
1681:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  35              		.loc 2 1681 3 view .LVU1
  36              		.loc 2 1681 6 is_stmt 0 view .LVU2
  37 0000 0028     		cmp	r0, #0
  38              	.LVL1:
  39              		.loc 2 1681 6 view .LVU3
  40 0002 07DB     		blt	.L1
1682:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1683:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
  41              		.loc 2 1683 5 is_stmt 1 view .LVU4
1684:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  42              		.loc 2 1684 5 view .LVU5
  43              		.loc 2 1684 81 is_stmt 0 view .LVU6
  44 0004 00F01F02 		and	r2, r0, #31
  45              		.loc 2 1684 34 view .LVU7
  46 0008 4009     		lsrs	r0, r0, #5
  47              		.loc 2 1684 45 view .LVU8
  48 000a 0123     		movs	r3, #1
  49 000c 9340     		lsls	r3, r3, r2
  50              		.loc 2 1684 43 view .LVU9
  51 000e 024A     		ldr	r2, .L3
  52 0010 42F82030 		str	r3, [r2, r0, lsl #2]
1685:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
  53              		.loc 2 1685 5 is_stmt 1 view .LVU10
  54              	.L1:
1686:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1687:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
  55              		.loc 2 1687 1 is_stmt 0 view .LVU11
  56 0014 7047     		bx	lr
  57              	.L4:
  58 0016 00BF     		.align	2
  59              	.L3:
  60 0018 00E100E0 		.word	-536813312
  61              		.cfi_endproc
  62              	.LFE106:
  64              		.section	.text.__NVIC_DisableIRQ,"ax",%progbits
  65              		.align	1
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	__NVIC_DisableIRQ:
  71              	.LVL2:
  72              	.LFB108:
1688:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1689:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1690:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1691:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1692:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1696:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1697:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1698:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/ccHm9UDT.s 			page 32


1699:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1700:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1702:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1704:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   else
1705:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1706:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     return(0U);
1707:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1708:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
1709:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1710:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1711:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1712:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1713:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1716:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1717:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
  73              		.loc 2 1718 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
1719:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  78              		.loc 2 1719 3 view .LVU13
  79              		.loc 2 1719 6 is_stmt 0 view .LVU14
  80 0000 0028     		cmp	r0, #0
  81              	.LVL3:
  82              		.loc 2 1719 6 view .LVU15
  83 0002 0CDB     		blt	.L5
1720:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1721:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  84              		.loc 2 1721 5 is_stmt 1 view .LVU16
  85              		.loc 2 1721 81 is_stmt 0 view .LVU17
  86 0004 00F01F02 		and	r2, r0, #31
  87              		.loc 2 1721 34 view .LVU18
  88 0008 4009     		lsrs	r0, r0, #5
  89              		.loc 2 1721 45 view .LVU19
  90 000a 0123     		movs	r3, #1
  91 000c 9340     		lsls	r3, r3, r2
  92              		.loc 2 1721 43 view .LVU20
  93 000e 2030     		adds	r0, r0, #32
  94 0010 034A     		ldr	r2, .L7
  95 0012 42F82030 		str	r3, [r2, r0, lsl #2]
1722:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     __DSB();
  96              		.loc 2 1722 5 is_stmt 1 view .LVU21
  97              	.LBB36:
  98              	.LBI36:
  99              		.file 3 "stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h"
   1:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
ARM GAS  /tmp/ccHm9UDT.s 			page 33


   7:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /*
   8:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  *
  10:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  *
  12:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  *
  16:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  *
  18:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
  24:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
  25:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
  28:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
  34:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  38:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
  39:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  43:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  46:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  49:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  55:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  58:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  61:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccHm9UDT.s 			page 34


  64:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  67:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  70:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  78:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  86:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
  94:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 102:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 110:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 113:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 116:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 119:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 120:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
ARM GAS  /tmp/ccHm9UDT.s 			page 35


 121:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 122:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 124:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 125:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   
 130:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 131:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 133:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   
 135:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   
 141:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   
 146:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 151:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     }
 155:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   }
 156:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  
 157:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     }
 161:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   }
 162:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  
 163:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 165:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   
 166:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 168:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 169:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 172:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 173:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 176:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 177:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
ARM GAS  /tmp/ccHm9UDT.s 			page 36


 178:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 180:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 181:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 184:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 185:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   @{
 189:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 190:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 191:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 192:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 196:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 198:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 200:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 201:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 202:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 203:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 207:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 209:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 211:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 212:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 213:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 214:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 218:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 220:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 222:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 225:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 226:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 227:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 229:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 233:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccHm9UDT.s 			page 37


 235:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 237:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 240:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 241:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 242:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 243:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 244:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 248:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 250:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 252:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 253:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 254:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 256:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 260:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 262:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 264:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 265:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 266:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 267:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 268:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 272:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 274:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 276:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 279:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 280:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 281:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 282:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 286:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 288:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 290:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccHm9UDT.s 			page 38


 292:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 293:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 294:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 295:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 296:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 300:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 302:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 304:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 307:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 308:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 309:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 310:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 314:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 316:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 318:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 321:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 322:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 323:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 325:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 329:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 331:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 333:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 336:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 337:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 338:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 339:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 340:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 344:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 346:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 348:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 39


 349:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 350:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 352:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 356:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 358:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 360:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 361:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 362:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 363:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 364:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 368:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 370:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 372:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 375:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 376:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 377:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 379:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 383:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 385:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 387:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 390:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 391:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 392:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 393:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 394:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 398:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 400:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 402:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 403:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 404:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccHm9UDT.s 			page 40


 406:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 410:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 412:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 414:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 415:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 416:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 417:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 419:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 423:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 425:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 427:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 430:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 431:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 432:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 433:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 437:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 439:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 441:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 442:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 443:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 444:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 445:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 449:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 451:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 453:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 456:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 457:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 458:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 460:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
ARM GAS  /tmp/ccHm9UDT.s 			page 41


 463:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 464:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 466:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 468:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 471:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 472:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 473:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 474:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 475:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 479:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 481:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 483:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 484:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 485:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 487:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 491:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 493:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 495:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 496:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 497:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 498:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 502:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 506:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 508:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 510:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 511:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 512:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 513:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 517:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 519:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
ARM GAS  /tmp/ccHm9UDT.s 			page 42


 520:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 521:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 522:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 523:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 524:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 528:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 530:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 532:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 535:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 536:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 537:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 539:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 543:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 545:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 547:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 550:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 551:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 552:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 553:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 554:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 558:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 560:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 562:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 563:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 564:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 566:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 570:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 572:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 574:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 575:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 576:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 43


 577:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 578:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 583:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 585:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 587:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 588:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 589:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 590:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 594:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 596:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 598:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 601:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 602:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 603:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 605:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 609:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 611:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 613:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 616:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 617:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 618:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 619:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 620:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 624:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 626:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 628:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 629:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 630:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 632:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
ARM GAS  /tmp/ccHm9UDT.s 			page 44


 634:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 636:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 638:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 640:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 641:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 642:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 646:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 647:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 650:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 651:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   
 656:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 659:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 661:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 666:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 670:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 671:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 672:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 674:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 678:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 681:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 683:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 687:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccHm9UDT.s 			page 45


 691:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 692:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 693:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 694:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 695:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 696:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   
 701:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 704:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 706:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 711:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 713:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 714:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 715:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 716:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 718:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 722:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 725:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 727:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 731:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 733:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 734:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 735:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 736:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 737:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 738:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 743:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 746:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccHm9UDT.s 			page 46


 748:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 753:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 757:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 758:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 759:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 760:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 762:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 766:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 769:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 771:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 775:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 779:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 780:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 781:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 782:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 783:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 784:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 789:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 792:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 794:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 799:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 801:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 802:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 803:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 804:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  /tmp/ccHm9UDT.s 			page 47


 805:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 806:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 810:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 813:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 815:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 819:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 821:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 822:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 823:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 824:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 827:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 828:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 829:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 833:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 835:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 843:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 845:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 848:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 849:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 851:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 852:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 853:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 854:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 855:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 859:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 861:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
ARM GAS  /tmp/ccHm9UDT.s 			page 48


 862:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 869:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 871:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 872:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 874:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 875:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 876:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 877:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 879:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 880:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   @{
 884:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** */
 885:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 886:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #else
 894:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #endif
 898:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 899:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 900:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 903:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 905:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 906:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 909:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 911:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 912:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 913:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 917:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 49


 919:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 920:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 921:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 924:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 926:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 927:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 928:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 933:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 935:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 937:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 938:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 939:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 940:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 944:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 100              		.loc 3 944 27 view .LVU22
 101              	.LBB37:
 945:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 946:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 102              		.loc 3 946 3 view .LVU23
 103              		.syntax unified
 104              	@ 946 "stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h" 1
 105 0016 BFF34F8F 		dsb 0xF
 106              	@ 0 "" 2
 107              		.thumb
 108              		.syntax unified
 109              	.LBE37:
 110              	.LBE36:
1723:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     __ISB();
 111              		.loc 2 1723 5 view .LVU24
 112              	.LBB38:
 113              	.LBI38:
 933:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 114              		.loc 3 933 27 view .LVU25
 115              	.LBB39:
 935:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 116              		.loc 3 935 3 view .LVU26
 117              		.syntax unified
 118              	@ 935 "stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h" 1
 119 001a BFF36F8F 		isb 0xF
 120              	@ 0 "" 2
 121              		.thumb
 122              		.syntax unified
 123              	.L5:
 124              	.LBE39:
 125              	.LBE38:
ARM GAS  /tmp/ccHm9UDT.s 			page 50


1724:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1725:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 126              		.loc 2 1725 1 is_stmt 0 view .LVU27
 127 001e 7047     		bx	lr
 128              	.L8:
 129              		.align	2
 130              	.L7:
 131 0020 00E100E0 		.word	-536813312
 132              		.cfi_endproc
 133              	.LFE108:
 135              		.section	.text.__NVIC_SetPriority,"ax",%progbits
 136              		.align	1
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	__NVIC_SetPriority:
 142              	.LVL4:
 143              	.LFB113:
1726:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1727:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1728:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1729:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1730:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1734:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1735:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1736:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1738:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1740:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1742:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   else
1743:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1744:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     return(0U);
1745:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1746:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
1747:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1748:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1749:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1750:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1751:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1754:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1755:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1757:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1759:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1761:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
1762:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1763:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1764:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccHm9UDT.s 			page 51


1765:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1766:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1769:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1770:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1772:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1774:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1776:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
1777:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1778:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1779:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1780:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1781:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1784:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1785:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1786:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1787:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1789:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1791:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1793:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   else
1794:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1795:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     return(0U);
1796:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1797:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
1798:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1799:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1800:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1801:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1802:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1805:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1807:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1809:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 144              		.loc 2 1810 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
1811:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 149              		.loc 2 1811 3 view .LVU29
 150              		.loc 2 1811 6 is_stmt 0 view .LVU30
 151 0000 0028     		cmp	r0, #0
 152              	.LVL5:
 153              		.loc 2 1811 6 view .LVU31
ARM GAS  /tmp/ccHm9UDT.s 			page 52


 154 0002 08DB     		blt	.L10
1812:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1813:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 155              		.loc 2 1813 5 is_stmt 1 view .LVU32
 156              		.loc 2 1813 48 is_stmt 0 view .LVU33
 157 0004 0901     		lsls	r1, r1, #4
 158              	.LVL6:
 159              		.loc 2 1813 48 view .LVU34
 160 0006 C9B2     		uxtb	r1, r1
 161              		.loc 2 1813 46 view .LVU35
 162 0008 00F16040 		add	r0, r0, #-536870912
 163 000c 00F56140 		add	r0, r0, #57600
 164 0010 80F80013 		strb	r1, [r0, #768]
 165 0014 7047     		bx	lr
 166              	.LVL7:
 167              	.L10:
1814:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1815:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   else
1816:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1817:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 168              		.loc 2 1817 5 is_stmt 1 view .LVU36
 169              		.loc 2 1817 32 is_stmt 0 view .LVU37
 170 0016 00F00F00 		and	r0, r0, #15
 171              		.loc 2 1817 48 view .LVU38
 172 001a 0901     		lsls	r1, r1, #4
 173              	.LVL8:
 174              		.loc 2 1817 48 view .LVU39
 175 001c C9B2     		uxtb	r1, r1
 176              		.loc 2 1817 46 view .LVU40
 177 001e 014B     		ldr	r3, .L12
 178 0020 1954     		strb	r1, [r3, r0]
1818:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1819:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 179              		.loc 2 1819 1 view .LVU41
 180 0022 7047     		bx	lr
 181              	.L13:
 182              		.align	2
 183              	.L12:
 184 0024 14ED00E0 		.word	-536810220
 185              		.cfi_endproc
 186              	.LFE113:
 188              		.section	.text.__NVIC_GetPriority,"ax",%progbits
 189              		.align	1
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	__NVIC_GetPriority:
 195              	.LVL9:
 196              	.LFB114:
1820:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1821:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1822:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1823:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1824:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1827:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
ARM GAS  /tmp/ccHm9UDT.s 			page 53


1828:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1829:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1831:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 197              		.loc 2 1832 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
1833:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1834:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 202              		.loc 2 1834 3 view .LVU43
 203              		.loc 2 1834 6 is_stmt 0 view .LVU44
 204 0000 0028     		cmp	r0, #0
 205              	.LVL10:
 206              		.loc 2 1834 6 view .LVU45
 207 0002 07DB     		blt	.L15
1835:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1836:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
 208              		.loc 2 1836 5 is_stmt 1 view .LVU46
 209              		.loc 2 1836 31 is_stmt 0 view .LVU47
 210 0004 00F16040 		add	r0, r0, #-536870912
 211 0008 00F56140 		add	r0, r0, #57600
 212 000c 90F80003 		ldrb	r0, [r0, #768]	@ zero_extendqisi2
 213              		.loc 2 1836 64 view .LVU48
 214 0010 0009     		lsrs	r0, r0, #4
 215 0012 7047     		bx	lr
 216              	.L15:
1837:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1838:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   else
1839:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1840:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
 217              		.loc 2 1840 5 is_stmt 1 view .LVU49
 218              		.loc 2 1840 50 is_stmt 0 view .LVU50
 219 0014 00F00F00 		and	r0, r0, #15
 220              		.loc 2 1840 31 view .LVU51
 221 0018 014B     		ldr	r3, .L17
 222 001a 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 223              		.loc 2 1840 64 view .LVU52
 224 001c 0009     		lsrs	r0, r0, #4
1841:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1842:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 225              		.loc 2 1842 1 view .LVU53
 226 001e 7047     		bx	lr
 227              	.L18:
 228              		.align	2
 229              	.L17:
 230 0020 14ED00E0 		.word	-536810220
 231              		.cfi_endproc
 232              	.LFE114:
 234              		.section	.text.NVIC_EncodePriority,"ax",%progbits
 235              		.align	1
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	NVIC_EncodePriority:
ARM GAS  /tmp/ccHm9UDT.s 			page 54


 241              	.LVL11:
 242              	.LFB115:
1843:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1844:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1845:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1846:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1847:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1849:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1850:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1856:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1857:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 243              		.loc 2 1857 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		.loc 2 1857 1 is_stmt 0 view .LVU55
 248 0000 00B5     		push	{lr}
 249              	.LCFI0:
 250              		.cfi_def_cfa_offset 4
 251              		.cfi_offset 14, -4
1858:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 252              		.loc 2 1858 3 is_stmt 1 view .LVU56
 253              		.loc 2 1858 12 is_stmt 0 view .LVU57
 254 0002 00F00700 		and	r0, r0, #7
 255              	.LVL12:
1859:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 256              		.loc 2 1859 3 is_stmt 1 view .LVU58
1860:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 257              		.loc 2 1860 3 view .LVU59
1861:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1862:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 258              		.loc 2 1862 3 view .LVU60
 259              		.loc 2 1862 31 is_stmt 0 view .LVU61
 260 0006 C0F1070C 		rsb	ip, r0, #7
 261              		.loc 2 1862 23 view .LVU62
 262 000a BCF1040F 		cmp	ip, #4
 263 000e 28BF     		it	cs
 264 0010 4FF0040C 		movcs	ip, #4
 265              	.LVL13:
1863:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 266              		.loc 2 1863 3 is_stmt 1 view .LVU63
 267              		.loc 2 1863 44 is_stmt 0 view .LVU64
 268 0014 031D     		adds	r3, r0, #4
 269              		.loc 2 1863 109 view .LVU65
 270 0016 062B     		cmp	r3, #6
 271 0018 0FD9     		bls	.L21
 272              		.loc 2 1863 109 discriminator 1 view .LVU66
 273 001a C31E     		subs	r3, r0, #3
 274              	.L20:
 275              	.LVL14:
1864:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 55


1865:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   return (
 276              		.loc 2 1865 3 is_stmt 1 discriminator 4 view .LVU67
1866:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 277              		.loc 2 1866 30 is_stmt 0 discriminator 4 view .LVU68
 278 001c 4FF0FF3E 		mov	lr, #-1
 279 0020 0EFA0CF0 		lsl	r0, lr, ip
 280              	.LVL15:
 281              		.loc 2 1866 30 discriminator 4 view .LVU69
 282 0024 21EA0001 		bic	r1, r1, r0
 283              	.LVL16:
 284              		.loc 2 1866 82 discriminator 4 view .LVU70
 285 0028 9940     		lsls	r1, r1, r3
1867:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 286              		.loc 2 1867 30 discriminator 4 view .LVU71
 287 002a 0EFA03FE 		lsl	lr, lr, r3
 288 002e 22EA0E02 		bic	r2, r2, lr
 289              	.LVL17:
1868:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****          );
1869:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 290              		.loc 2 1869 1 discriminator 4 view .LVU72
 291 0032 41EA0200 		orr	r0, r1, r2
 292 0036 5DF804FB 		ldr	pc, [sp], #4
 293              	.LVL18:
 294              	.L21:
1863:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 295              		.loc 2 1863 109 view .LVU73
 296 003a 0023     		movs	r3, #0
 297 003c EEE7     		b	.L20
 298              		.cfi_endproc
 299              	.LFE115:
 301              		.section	.text.NVIC_DecodePriority,"ax",%progbits
 302              		.align	1
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	NVIC_DecodePriority:
 308              	.LVL19:
 309              	.LFB116:
1870:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1871:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1872:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1873:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1874:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1875:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1876:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1877:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1878:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1879:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1880:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1881:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1882:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1883:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1884:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 310              		.loc 2 1884 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccHm9UDT.s 			page 56


 314              		.loc 2 1884 1 is_stmt 0 view .LVU75
 315 0000 10B5     		push	{r4, lr}
 316              	.LCFI1:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 4, -8
 319              		.cfi_offset 14, -4
1885:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 320              		.loc 2 1885 3 is_stmt 1 view .LVU76
 321              		.loc 2 1885 12 is_stmt 0 view .LVU77
 322 0002 01F00701 		and	r1, r1, #7
 323              	.LVL20:
1886:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 324              		.loc 2 1886 3 is_stmt 1 view .LVU78
1887:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 325              		.loc 2 1887 3 view .LVU79
1888:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1889:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 326              		.loc 2 1889 3 view .LVU80
 327              		.loc 2 1889 31 is_stmt 0 view .LVU81
 328 0006 C1F1070C 		rsb	ip, r1, #7
 329              		.loc 2 1889 23 view .LVU82
 330 000a BCF1040F 		cmp	ip, #4
 331 000e 28BF     		it	cs
 332 0010 4FF0040C 		movcs	ip, #4
 333              	.LVL21:
1890:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 334              		.loc 2 1890 3 is_stmt 1 view .LVU83
 335              		.loc 2 1890 44 is_stmt 0 view .LVU84
 336 0014 0C1D     		adds	r4, r1, #4
 337              		.loc 2 1890 109 view .LVU85
 338 0016 062C     		cmp	r4, #6
 339 0018 0FD9     		bls	.L25
 340              		.loc 2 1890 109 discriminator 1 view .LVU86
 341 001a 0339     		subs	r1, r1, #3
 342              	.LVL22:
 343              	.L24:
1891:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1892:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
 344              		.loc 2 1892 3 is_stmt 1 discriminator 4 view .LVU87
 345              		.loc 2 1892 33 is_stmt 0 discriminator 4 view .LVU88
 346 001c 20FA01F4 		lsr	r4, r0, r1
 347              	.LVL23:
 348              		.loc 2 1892 53 discriminator 4 view .LVU89
 349 0020 4FF0FF3E 		mov	lr, #-1
 350 0024 0EFA0CFC 		lsl	ip, lr, ip
 351              	.LVL24:
 352              		.loc 2 1892 53 discriminator 4 view .LVU90
 353 0028 24EA0C04 		bic	r4, r4, ip
 354              		.loc 2 1892 21 discriminator 4 view .LVU91
 355 002c 1460     		str	r4, [r2]
1893:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 356              		.loc 2 1893 3 is_stmt 1 discriminator 4 view .LVU92
 357              		.loc 2 1893 53 is_stmt 0 discriminator 4 view .LVU93
 358 002e 0EFA01FE 		lsl	lr, lr, r1
 359 0032 20EA0E00 		bic	r0, r0, lr
 360              	.LVL25:
 361              		.loc 2 1893 21 discriminator 4 view .LVU94
ARM GAS  /tmp/ccHm9UDT.s 			page 57


 362 0036 1860     		str	r0, [r3]
1894:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 363              		.loc 2 1894 1 discriminator 4 view .LVU95
 364 0038 10BD     		pop	{r4, pc}
 365              	.LVL26:
 366              	.L25:
1890:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 367              		.loc 2 1890 109 view .LVU96
 368 003a 0021     		movs	r1, #0
 369              	.LVL27:
1890:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 370              		.loc 2 1890 109 view .LVU97
 371 003c EEE7     		b	.L24
 372              		.cfi_endproc
 373              	.LFE116:
 375              		.section	.text.__NVIC_SystemReset,"ax",%progbits
 376              		.align	1
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 381              	__NVIC_SystemReset:
 382              	.LFB119:
1895:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1896:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1897:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1898:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1899:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1900:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1901:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1902:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1903:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1904:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1905:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1906:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1907:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1908:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1909:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
1910:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1911:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
1912:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1913:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1914:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1915:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1916:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1917:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1918:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1919:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1920:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1921:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1922:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1923:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1924:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1925:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
1926:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
1927:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1928:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1929:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccHm9UDT.s 			page 58


1930:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1931:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1932:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1933:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1934:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 383              		.loc 2 1934 1 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ Volatile: function does not return.
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              		@ link register save eliminated.
1935:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
 389              		.loc 2 1935 3 view .LVU99
 390              	.LBB40:
 391              	.LBI40:
 944:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 392              		.loc 3 944 27 view .LVU100
 393              	.LBB41:
 394              		.loc 3 946 3 view .LVU101
 395              		.syntax unified
 396              	@ 946 "stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h" 1
 397 0000 BFF34F8F 		dsb 0xF
 398              	@ 0 "" 2
 399              		.thumb
 400              		.syntax unified
 401              	.LBE41:
 402              	.LBE40:
1936:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1937:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 403              		.loc 2 1937 3 view .LVU102
1938:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 404              		.loc 2 1938 32 is_stmt 0 view .LVU103
 405 0004 0549     		ldr	r1, .L29
 406 0006 CA68     		ldr	r2, [r1, #12]
 407              		.loc 2 1938 40 view .LVU104
 408 0008 02F4E062 		and	r2, r2, #1792
1937:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 409              		.loc 2 1937 17 view .LVU105
 410 000c 044B     		ldr	r3, .L29+4
 411 000e 1343     		orrs	r3, r3, r2
1937:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 412              		.loc 2 1937 15 view .LVU106
 413 0010 CB60     		str	r3, [r1, #12]
1939:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1940:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
 414              		.loc 2 1940 3 is_stmt 1 view .LVU107
 415              	.LBB42:
 416              	.LBI42:
 944:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 417              		.loc 3 944 27 view .LVU108
 418              	.LBB43:
 419              		.loc 3 946 3 view .LVU109
 420              		.syntax unified
 421              	@ 946 "stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h" 1
 422 0012 BFF34F8F 		dsb 0xF
 423              	@ 0 "" 2
 424              		.thumb
ARM GAS  /tmp/ccHm9UDT.s 			page 59


 425              		.syntax unified
 426              	.L28:
 427              	.LBE43:
 428              	.LBE42:
1941:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1942:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
 429              		.loc 2 1942 3 discriminator 1 view .LVU110
1943:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1944:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     __NOP();
 430              		.loc 2 1944 5 discriminator 1 view .LVU111
 431              		.syntax unified
 432              	@ 1944 "stm/stm32l4xx/CMSIS/Include/core_cm4.h" 1
 433 0016 00BF     		nop
 434              	@ 0 "" 2
1942:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 435              		.loc 2 1942 3 discriminator 1 view .LVU112
 436              		.thumb
 437              		.syntax unified
 438 0018 FDE7     		b	.L28
 439              	.L30:
 440 001a 00BF     		.align	2
 441              	.L29:
 442 001c 00ED00E0 		.word	-536810240
 443 0020 0400FA05 		.word	100270084
 444              		.cfi_endproc
 445              	.LFE119:
 447              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
 448              		.align	1
 449              		.global	HAL_NVIC_SetPriorityGrouping
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 454              	HAL_NVIC_SetPriorityGrouping:
 455              	.LVL28:
 456              	.LFB288:
   1:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
   2:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
   3:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @file    stm32l4xx_hal_cortex.c
   4:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @author  MCD Application Team
   5:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   7:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           + Initialization and Configuration functions
   9:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           + Peripheral Control functions
  10:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  11:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   @verbatim
  12:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  13:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  15:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  16:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  17:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===========================================================
  19:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  20:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  22:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 60


  23:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping() function.
  24:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority().
  25:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  26:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  27:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible.
  28:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  29:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  30:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  31:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest pre-emption priority
  32:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest sub priority
  33:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  34:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  35:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  36:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     *** How to configure SysTick using CORTEX HAL driver ***
  37:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ========================================================
  38:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  39:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  40:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  41:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  42:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        is a CMSIS function that:
  43:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  44:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  45:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  46:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  47:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  48:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  49:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  50:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  51:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  52:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  53:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        inside the stm32l4xx_hal_cortex.h file.
  54:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  55:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  56:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  57:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  58:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  59:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  60:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  61:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  62:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  63:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  64:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  65:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   @endverbatim
  66:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
  67:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  68:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   The table below gives the allowed values of the pre-emption priority and subpriority according
  69:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   to the Priority Grouping configuration performed by HAL_NVIC_SetPriorityGrouping() function.
  70:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
  71:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  72:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |     
  73:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  74:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_0  |                0                  |            0-15             | 0 bi
  75:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 4 bi
  76:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  77:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_1  |                0-1                |            0-7              | 1 bi
  78:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 3 bi
  79:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
ARM GAS  /tmp/ccHm9UDT.s 			page 61


  80:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_2  |                0-3                |            0-3              | 2 bi
  81:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 2 bi
  82:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  83:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_3  |                0-7                |            0-1              | 3 bi
  84:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 1 bi
  85:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  86:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_4  |                0-15               |            0                | 4 bi
  87:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 0 bi
  88:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  89:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  90:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
  91:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @attention
  92:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  93:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * Copyright (c) 2017 STMicroelectronics.
  94:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * All rights reserved.
  95:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  96:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  97:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * the root directory of this software component.
  98:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  99:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
 100:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
 101:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 102:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 103:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 104:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #include "stm32l4xx_hal.h"
 105:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 106:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup STM32L4xx_HAL_Driver
 107:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 108:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 109:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 110:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX
 111:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 112:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 113:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 114:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 115:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 116:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
 117:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 118:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
 119:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 120:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 121:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 122:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 123:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions
 124:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 125:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 126:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 127:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 128:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group1
 129:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 130:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *
 131:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @verbatim
 132:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 133:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ##### Initialization and Configuration functions #####
 134:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 135:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
 136:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
ARM GAS  /tmp/ccHm9UDT.s 			page 62


 137:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       SysTick functionalities
 138:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 139:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 140:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 141:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 142:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 143:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 144:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 145:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority grouping field (pre-emption priority and subpriority)
 146:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         using the required unlock sequence.
 147:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  PriorityGroup: The priority grouping bits length.
 148:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 149:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bit  for pre-emption priority,
 150:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    4 bits for subpriority
 151:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bit  for pre-emption priority,
 152:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    3 bits for subpriority
 153:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 154:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    2 bits for subpriority
 155:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 156:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    1 bit  for subpriority
 157:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 158:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    0 bit  for subpriority
 159:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
 160:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 161:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 162:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 163:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 164:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 457              		.loc 1 164 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 165:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 166:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 462              		.loc 1 166 3 view .LVU114
 167:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 168:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 169:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 463              		.loc 1 169 3 view .LVU115
 464              	.LBB44:
 465              	.LBI44:
1648:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 466              		.loc 2 1648 22 view .LVU116
 467              	.LBB45:
1650:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
 468              		.loc 2 1650 3 view .LVU117
1651:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
 469              		.loc 2 1651 3 view .LVU118
1653:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
 470              		.loc 2 1653 3 view .LVU119
1653:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
 471              		.loc 2 1653 14 is_stmt 0 view .LVU120
 472 0000 074A     		ldr	r2, .L32
 473 0002 D368     		ldr	r3, [r2, #12]
 474              	.LVL29:
1654:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
ARM GAS  /tmp/ccHm9UDT.s 			page 63


 475              		.loc 2 1654 3 is_stmt 1 view .LVU121
1654:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
 476              		.loc 2 1654 13 is_stmt 0 view .LVU122
 477 0004 23F4E063 		bic	r3, r3, #1792
 478              	.LVL30:
1654:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
 479              		.loc 2 1654 13 view .LVU123
 480 0008 1B04     		lsls	r3, r3, #16
 481 000a 1B0C     		lsrs	r3, r3, #16
 482              	.LVL31:
1655:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 483              		.loc 2 1655 3 is_stmt 1 view .LVU124
1657:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
 484              		.loc 2 1657 35 is_stmt 0 view .LVU125
 485 000c 0002     		lsls	r0, r0, #8
 486              	.LVL32:
1657:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
 487              		.loc 2 1657 35 view .LVU126
 488 000e 00F4E060 		and	r0, r0, #1792
1656:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
 489              		.loc 2 1656 62 view .LVU127
 490 0012 0343     		orrs	r3, r3, r0
 491              	.LVL33:
1655:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 492              		.loc 2 1655 14 view .LVU128
 493 0014 43F0BF63 		orr	r3, r3, #100139008
 494 0018 43F40033 		orr	r3, r3, #131072
 495              	.LVL34:
1658:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 496              		.loc 2 1658 3 is_stmt 1 view .LVU129
1658:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 497              		.loc 2 1658 14 is_stmt 0 view .LVU130
 498 001c D360     		str	r3, [r2, #12]
 499              	.LVL35:
1658:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 500              		.loc 2 1658 14 view .LVU131
 501              	.LBE45:
 502              	.LBE44:
 170:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 503              		.loc 1 170 1 view .LVU132
 504 001e 7047     		bx	lr
 505              	.L33:
 506              		.align	2
 507              	.L32:
 508 0020 00ED00E0 		.word	-536810240
 509              		.cfi_endproc
 510              	.LFE288:
 512              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
 513              		.align	1
 514              		.global	HAL_NVIC_SetPriority
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 519              	HAL_NVIC_SetPriority:
 520              	.LVL36:
 521              	.LFB289:
 171:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 64


 172:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 173:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority of an interrupt.
 174:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 175:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 176:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 177:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  PreemptPriority: The pre-emption priority for the IRQn channel.
 178:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 179:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 180:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  SubPriority: the subpriority level for the IRQ channel.
 181:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 182:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 183:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 184:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 185:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 186:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 522              		.loc 1 186 1 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		.loc 1 186 1 is_stmt 0 view .LVU134
 527 0000 10B5     		push	{r4, lr}
 528              	.LCFI2:
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 4, -8
 531              		.cfi_offset 14, -4
 532 0002 0446     		mov	r4, r0
 187:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 533              		.loc 1 187 3 is_stmt 1 view .LVU135
 534              	.LVL37:
 188:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 189:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 190:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 535              		.loc 1 190 3 view .LVU136
 191:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 536              		.loc 1 191 3 view .LVU137
 192:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 193:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 537              		.loc 1 193 3 view .LVU138
 538              	.LBB46:
 539              	.LBI46:
1667:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 540              		.loc 2 1667 26 view .LVU139
 541              	.LBB47:
1669:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 542              		.loc 2 1669 3 view .LVU140
1669:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 543              		.loc 2 1669 26 is_stmt 0 view .LVU141
 544 0004 054B     		ldr	r3, .L36
 545 0006 D868     		ldr	r0, [r3, #12]
 546              	.LVL38:
1669:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 547              		.loc 2 1669 26 view .LVU142
 548              	.LBE47:
 549              	.LBE46:
 194:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 195:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 550              		.loc 1 195 3 is_stmt 1 view .LVU143
ARM GAS  /tmp/ccHm9UDT.s 			page 65


 551 0008 C0F30220 		ubfx	r0, r0, #8, #3
 552              	.LVL39:
 553              		.loc 1 195 3 is_stmt 0 view .LVU144
 554 000c FFF7FEFF 		bl	NVIC_EncodePriority
 555              	.LVL40:
 556              		.loc 1 195 3 view .LVU145
 557 0010 0146     		mov	r1, r0
 558 0012 2046     		mov	r0, r4
 559 0014 FFF7FEFF 		bl	__NVIC_SetPriority
 560              	.LVL41:
 196:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 561              		.loc 1 196 1 view .LVU146
 562 0018 10BD     		pop	{r4, pc}
 563              	.L37:
 564 001a 00BF     		.align	2
 565              	.L36:
 566 001c 00ED00E0 		.word	-536810240
 567              		.cfi_endproc
 568              	.LFE289:
 570              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 571              		.align	1
 572              		.global	HAL_NVIC_EnableIRQ
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 577              	HAL_NVIC_EnableIRQ:
 578              	.LVL42:
 579              	.LFB290:
 197:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 198:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 199:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Enable a device specific interrupt in the NVIC interrupt controller.
 200:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 201:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         function should be called before.
 202:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 203:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 204:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 205:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 206:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 207:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 208:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 580              		.loc 1 208 1 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		.loc 1 208 1 is_stmt 0 view .LVU148
 585 0000 08B5     		push	{r3, lr}
 586              	.LCFI3:
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 3, -8
 589              		.cfi_offset 14, -4
 209:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 210:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 590              		.loc 1 210 3 is_stmt 1 view .LVU149
 211:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 212:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Enable interrupt */
 213:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 591              		.loc 1 213 3 view .LVU150
ARM GAS  /tmp/ccHm9UDT.s 			page 66


 592 0002 FFF7FEFF 		bl	__NVIC_EnableIRQ
 593              	.LVL43:
 214:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 594              		.loc 1 214 1 is_stmt 0 view .LVU151
 595 0006 08BD     		pop	{r3, pc}
 596              		.cfi_endproc
 597              	.LFE290:
 599              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 600              		.align	1
 601              		.global	HAL_NVIC_DisableIRQ
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 606              	HAL_NVIC_DisableIRQ:
 607              	.LVL44:
 608              	.LFB291:
 215:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 216:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 217:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Disable a device specific interrupt in the NVIC interrupt controller.
 218:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 219:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 220:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 221:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 222:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 223:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 224:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 609              		.loc 1 224 1 is_stmt 1 view -0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		.loc 1 224 1 is_stmt 0 view .LVU153
 614 0000 08B5     		push	{r3, lr}
 615              	.LCFI4:
 616              		.cfi_def_cfa_offset 8
 617              		.cfi_offset 3, -8
 618              		.cfi_offset 14, -4
 225:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 226:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 619              		.loc 1 226 3 is_stmt 1 view .LVU154
 227:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 228:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Disable interrupt */
 229:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 620              		.loc 1 229 3 view .LVU155
 621 0002 FFF7FEFF 		bl	__NVIC_DisableIRQ
 622              	.LVL45:
 230:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 623              		.loc 1 230 1 is_stmt 0 view .LVU156
 624 0006 08BD     		pop	{r3, pc}
 625              		.cfi_endproc
 626              	.LFE291:
 628              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 629              		.align	1
 630              		.global	HAL_NVIC_SystemReset
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 635              	HAL_NVIC_SystemReset:
ARM GAS  /tmp/ccHm9UDT.s 			page 67


 636              	.LFB292:
 231:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 232:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 233:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initiate a system reset request to reset the MCU.
 234:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 235:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 236:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 237:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 637              		.loc 1 237 1 is_stmt 1 view -0
 638              		.cfi_startproc
 639              		@ Volatile: function does not return.
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642 0000 08B5     		push	{r3, lr}
 643              	.LCFI5:
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 3, -8
 646              		.cfi_offset 14, -4
 238:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* System Reset */
 239:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SystemReset();
 647              		.loc 1 239 3 view .LVU158
 648 0002 FFF7FEFF 		bl	__NVIC_SystemReset
 649              	.LVL46:
 650              		.cfi_endproc
 651              	.LFE292:
 653              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 654              		.align	1
 655              		.global	HAL_SYSTICK_Config
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 660              	HAL_SYSTICK_Config:
 661              	.LVL47:
 662              	.LFB293:
 240:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 241:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 242:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 243:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize the System Timer with interrupt enabled and start the System Tick Timer (Sys
 244:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 245:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
 246:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 247:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                  - 1  Function failed.
 248:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 249:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 250:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 663              		.loc 1 250 1 view -0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              		@ link register save eliminated.
 251:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 668              		.loc 1 251 4 view .LVU160
 669              	.LBB48:
 670              	.LBI48:
1945:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1946:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
1947:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 68


1948:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1949:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1950:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1951:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* ##########################  MPU functions  #################################### */
1952:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1953:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1954:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1955:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #include "mpu_armv7.h"
1956:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1957:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #endif
1958:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1959:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1960:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* ##########################  FPU functions  #################################### */
1961:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1962:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1963:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
1964:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Function that provides FPU type.
1965:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
1966:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1967:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1968:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1969:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   get FPU type
1970:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details returns the FPU type
1971:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \returns
1972:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****    - \b  0: No FPU
1973:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****    - \b  1: Single precision FPU
1974:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****    - \b  2: Double + Single precision FPU
1975:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
1976:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1977:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
1978:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   uint32_t mvfr0;
1979:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1980:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   mvfr0 = FPU->MVFR0;
1981:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1982:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1983:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     return 1U;           /* Single precision FPU */
1984:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1985:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   else
1986:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
1987:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     return 0U;           /* No FPU */
1988:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
1989:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
1990:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1991:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1992:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_FpuFunctions */
1993:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1994:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1995:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
1996:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1997:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
1998:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1999:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2000:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief    Functions that configure the System.
2001:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   @{
2002:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
2003:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
2004:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
ARM GAS  /tmp/ccHm9UDT.s 			page 69


2005:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
2006:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** /**
2007:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \brief   System Tick Configuration
2008:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2009:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
2010:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2011:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return          0  Function succeeded.
2012:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \return          1  Function failed.
2013:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2014:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2015:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
2016:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****  */
2017:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 671              		.loc 2 2017 26 view .LVU161
 672              	.LBB49:
2018:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
2019:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 673              		.loc 2 2019 3 view .LVU162
 674              		.loc 2 2019 14 is_stmt 0 view .LVU163
 675 0000 0138     		subs	r0, r0, #1
 676              	.LVL48:
 677              		.loc 2 2019 6 view .LVU164
 678 0002 B0F1807F 		cmp	r0, #16777216
 679 0006 0BD2     		bcs	.L46
2020:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
2021:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
2022:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
2023:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** 
2024:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 680              		.loc 2 2024 3 is_stmt 1 view .LVU165
 681              		.loc 2 2024 18 is_stmt 0 view .LVU166
 682 0008 4FF0E023 		mov	r3, #-536813568
 683 000c 5861     		str	r0, [r3, #20]
2025:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 684              		.loc 2 2025 3 is_stmt 1 view .LVU167
 685              	.LVL49:
 686              	.LBB50:
 687              	.LBI50:
1809:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 688              		.loc 2 1809 22 view .LVU168
 689              	.LBB51:
1811:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 690              		.loc 2 1811 3 view .LVU169
1817:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 691              		.loc 2 1817 5 view .LVU170
1817:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 692              		.loc 2 1817 46 is_stmt 0 view .LVU171
 693 000e 054A     		ldr	r2, .L47
 694 0010 F021     		movs	r1, #240
 695 0012 82F82310 		strb	r1, [r2, #35]
 696              	.LVL50:
1817:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 697              		.loc 2 1817 46 view .LVU172
 698              	.LBE51:
 699              	.LBE50:
2026:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 700              		.loc 2 2026 3 is_stmt 1 view .LVU173
ARM GAS  /tmp/ccHm9UDT.s 			page 70


 701              		.loc 2 2026 18 is_stmt 0 view .LVU174
 702 0016 0020     		movs	r0, #0
 703              	.LVL51:
 704              		.loc 2 2026 18 view .LVU175
 705 0018 9861     		str	r0, [r3, #24]
2027:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 706              		.loc 2 2027 3 is_stmt 1 view .LVU176
 707              		.loc 2 2027 18 is_stmt 0 view .LVU177
 708 001a 0722     		movs	r2, #7
 709 001c 1A61     		str	r2, [r3, #16]
2028:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
2029:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2030:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 710              		.loc 2 2030 3 is_stmt 1 view .LVU178
 711              		.loc 2 2030 10 is_stmt 0 view .LVU179
 712 001e 7047     		bx	lr
 713              	.L46:
2021:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 714              		.loc 2 2021 12 view .LVU180
 715 0020 0120     		movs	r0, #1
 716              	.LVL52:
2021:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 717              		.loc 2 2021 12 view .LVU181
 718              	.LBE49:
 719              	.LBE48:
 252:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 720              		.loc 1 252 1 view .LVU182
 721 0022 7047     		bx	lr
 722              	.L48:
 723              		.align	2
 724              	.L47:
 725 0024 00ED00E0 		.word	-536810240
 726              		.cfi_endproc
 727              	.LFE293:
 729              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 730              		.align	1
 731              		.global	HAL_NVIC_GetPriorityGrouping
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 736              	HAL_NVIC_GetPriorityGrouping:
 737              	.LFB294:
 253:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 254:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @}
 255:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 256:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 257:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group2
 258:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *  @brief   Cortex control functions
 259:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *
 260:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @verbatim
 261:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 262:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 263:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 264:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
 265:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 266:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities.
 267:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
ARM GAS  /tmp/ccHm9UDT.s 			page 71


 268:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 269:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 270:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 271:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 272:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 273:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 274:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority grouping field from the NVIC Interrupt Controller.
 275:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 276:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 277:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 278:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 738              		.loc 1 278 1 is_stmt 1 view -0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 279:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 280:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 743              		.loc 1 280 3 view .LVU184
 744              	.LBB52:
 745              	.LBI52:
1667:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 746              		.loc 2 1667 26 view .LVU185
 747              	.LBB53:
1669:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 748              		.loc 2 1669 3 view .LVU186
1669:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** }
 749              		.loc 2 1669 26 is_stmt 0 view .LVU187
 750 0000 024B     		ldr	r3, .L50
 751 0002 D868     		ldr	r0, [r3, #12]
 752              	.LBE53:
 753              	.LBE52:
 281:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 754              		.loc 1 281 1 view .LVU188
 755 0004 C0F30220 		ubfx	r0, r0, #8, #3
 756 0008 7047     		bx	lr
 757              	.L51:
 758 000a 00BF     		.align	2
 759              	.L50:
 760 000c 00ED00E0 		.word	-536810240
 761              		.cfi_endproc
 762              	.LFE294:
 764              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 765              		.align	1
 766              		.global	HAL_NVIC_GetPriority
 767              		.syntax unified
 768              		.thumb
 769              		.thumb_func
 771              	HAL_NVIC_GetPriority:
 772              	.LVL53:
 773              	.LFB295:
 282:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 283:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 284:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority of an interrupt.
 285:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 286:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 287:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
ARM GAS  /tmp/ccHm9UDT.s 			page 72


 288:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param   PriorityGroup: the priority grouping bits length.
 289:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 290:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bit for pre-emption priority,
 291:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      4 bits for subpriority
 292:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bit for pre-emption priority,
 293:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      3 bits for subpriority
 294:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 295:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      2 bits for subpriority
 296:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 297:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      1 bit for subpriority
 298:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 299:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      0 bit for subpriority
 300:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  pPreemptPriority: Pointer on the Preemptive priority value (starting from 0).
 301:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  pSubPriority: Pointer on the Subpriority value (starting from 0).
 302:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 303:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 304:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 305:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 774              		.loc 1 305 1 is_stmt 1 view -0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		.loc 1 305 1 is_stmt 0 view .LVU190
 779 0000 70B5     		push	{r4, r5, r6, lr}
 780              	.LCFI6:
 781              		.cfi_def_cfa_offset 16
 782              		.cfi_offset 4, -16
 783              		.cfi_offset 5, -12
 784              		.cfi_offset 6, -8
 785              		.cfi_offset 14, -4
 786 0002 0C46     		mov	r4, r1
 787 0004 1546     		mov	r5, r2
 788 0006 1E46     		mov	r6, r3
 306:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 307:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 789              		.loc 1 307 3 is_stmt 1 view .LVU191
 308:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 309:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 790              		.loc 1 309 3 view .LVU192
 791 0008 FFF7FEFF 		bl	__NVIC_GetPriority
 792              	.LVL54:
 793              		.loc 1 309 3 is_stmt 0 view .LVU193
 794 000c 3346     		mov	r3, r6
 795 000e 2A46     		mov	r2, r5
 796 0010 2146     		mov	r1, r4
 797 0012 FFF7FEFF 		bl	NVIC_DecodePriority
 798              	.LVL55:
 310:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 799              		.loc 1 310 1 view .LVU194
 800 0016 70BD     		pop	{r4, r5, r6, pc}
 801              		.loc 1 310 1 view .LVU195
 802              		.cfi_endproc
 803              	.LFE295:
 805              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 806              		.align	1
 807              		.global	HAL_NVIC_SetPendingIRQ
 808              		.syntax unified
ARM GAS  /tmp/ccHm9UDT.s 			page 73


 809              		.thumb
 810              		.thumb_func
 812              	HAL_NVIC_SetPendingIRQ:
 813              	.LVL56:
 814              	.LFB296:
 311:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 312:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 313:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set Pending bit of an external interrupt.
 314:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 315:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 316:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 317:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 318:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 319:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 320:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 815              		.loc 1 320 1 is_stmt 1 view -0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819              		@ link register save eliminated.
 321:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 322:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 820              		.loc 1 322 3 view .LVU197
 323:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 324:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set interrupt pending */
 325:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 821              		.loc 1 325 3 view .LVU198
 822              	.LBB54:
 823              	.LBI54:
1755:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 824              		.loc 2 1755 22 view .LVU199
 825              	.LBB55:
1757:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 826              		.loc 2 1757 3 view .LVU200
1757:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 827              		.loc 2 1757 6 is_stmt 0 view .LVU201
 828 0000 0028     		cmp	r0, #0
 829              	.LVL57:
1757:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 830              		.loc 2 1757 6 view .LVU202
 831 0002 08DB     		blt	.L54
1759:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 832              		.loc 2 1759 5 is_stmt 1 view .LVU203
1759:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 833              		.loc 2 1759 81 is_stmt 0 view .LVU204
 834 0004 00F01F02 		and	r2, r0, #31
1759:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 835              		.loc 2 1759 34 view .LVU205
 836 0008 4009     		lsrs	r0, r0, #5
1759:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 837              		.loc 2 1759 45 view .LVU206
 838 000a 0123     		movs	r3, #1
 839 000c 9340     		lsls	r3, r3, r2
1759:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 840              		.loc 2 1759 43 view .LVU207
 841 000e 4030     		adds	r0, r0, #64
 842 0010 014A     		ldr	r2, .L56
ARM GAS  /tmp/ccHm9UDT.s 			page 74


 843 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 844              	.LVL58:
 845              	.L54:
1759:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 846              		.loc 2 1759 43 view .LVU208
 847              	.LBE55:
 848              	.LBE54:
 326:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 849              		.loc 1 326 1 view .LVU209
 850 0016 7047     		bx	lr
 851              	.L57:
 852              		.align	2
 853              	.L56:
 854 0018 00E100E0 		.word	-536813312
 855              		.cfi_endproc
 856              	.LFE296:
 858              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 859              		.align	1
 860              		.global	HAL_NVIC_GetPendingIRQ
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 865              	HAL_NVIC_GetPendingIRQ:
 866              	.LVL59:
 867              	.LFB297:
 327:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 328:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 329:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get Pending Interrupt (read the pending register in the NVIC
 330:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         and return the pending bit for the specified interrupt).
 331:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 332:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 333:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 334:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 335:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 336:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 337:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 338:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 868              		.loc 1 338 1 is_stmt 1 view -0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
 871              		@ frame_needed = 0, uses_anonymous_args = 0
 872              		@ link register save eliminated.
 339:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 340:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 873              		.loc 1 340 3 view .LVU211
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 342:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 343:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 874              		.loc 1 343 3 view .LVU212
 875              	.LBB56:
 876              	.LBI56:
1736:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 877              		.loc 2 1736 26 view .LVU213
 878              	.LBB57:
1738:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 879              		.loc 2 1738 3 view .LVU214
1738:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
ARM GAS  /tmp/ccHm9UDT.s 			page 75


 880              		.loc 2 1738 6 is_stmt 0 view .LVU215
 881 0000 0028     		cmp	r0, #0
 882              	.LVL60:
1738:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 883              		.loc 2 1738 6 view .LVU216
 884 0002 0BDB     		blt	.L60
1740:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 885              		.loc 2 1740 5 is_stmt 1 view .LVU217
1740:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 886              		.loc 2 1740 54 is_stmt 0 view .LVU218
 887 0004 4309     		lsrs	r3, r0, #5
1740:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 888              		.loc 2 1740 35 view .LVU219
 889 0006 4033     		adds	r3, r3, #64
 890 0008 054A     		ldr	r2, .L61
 891 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1740:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 892              		.loc 2 1740 91 view .LVU220
 893 000e 00F01F00 		and	r0, r0, #31
1740:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 894              		.loc 2 1740 103 view .LVU221
 895 0012 23FA00F0 		lsr	r0, r3, r0
1740:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 896              		.loc 2 1740 12 view .LVU222
 897 0016 00F00100 		and	r0, r0, #1
 898 001a 7047     		bx	lr
 899              	.L60:
1744:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 900              		.loc 2 1744 11 view .LVU223
 901 001c 0020     		movs	r0, #0
 902              	.LVL61:
1744:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 903              		.loc 2 1744 11 view .LVU224
 904              	.LBE57:
 905              	.LBE56:
 344:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 906              		.loc 1 344 1 view .LVU225
 907 001e 7047     		bx	lr
 908              	.L62:
 909              		.align	2
 910              	.L61:
 911 0020 00E100E0 		.word	-536813312
 912              		.cfi_endproc
 913              	.LFE297:
 915              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 916              		.align	1
 917              		.global	HAL_NVIC_ClearPendingIRQ
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 922              	HAL_NVIC_ClearPendingIRQ:
 923              	.LVL62:
 924              	.LFB298:
 345:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 346:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 347:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Clear the pending bit of an external interrupt.
 348:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
ARM GAS  /tmp/ccHm9UDT.s 			page 76


 349:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 350:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 351:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 352:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 353:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 354:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 925              		.loc 1 354 1 is_stmt 1 view -0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 355:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 356:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 930              		.loc 1 356 3 view .LVU227
 357:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 358:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Clear pending interrupt */
 359:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 931              		.loc 1 359 3 view .LVU228
 932              	.LBB58:
 933              	.LBI58:
1770:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 934              		.loc 2 1770 22 view .LVU229
 935              	.LBB59:
1772:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 936              		.loc 2 1772 3 view .LVU230
1772:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 937              		.loc 2 1772 6 is_stmt 0 view .LVU231
 938 0000 0028     		cmp	r0, #0
 939              	.LVL63:
1772:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 940              		.loc 2 1772 6 view .LVU232
 941 0002 08DB     		blt	.L63
1774:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 942              		.loc 2 1774 5 is_stmt 1 view .LVU233
1774:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 943              		.loc 2 1774 81 is_stmt 0 view .LVU234
 944 0004 00F01F02 		and	r2, r0, #31
1774:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 945              		.loc 2 1774 34 view .LVU235
 946 0008 4009     		lsrs	r0, r0, #5
1774:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 947              		.loc 2 1774 45 view .LVU236
 948 000a 0123     		movs	r3, #1
 949 000c 9340     		lsls	r3, r3, r2
1774:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 950              		.loc 2 1774 43 view .LVU237
 951 000e 6030     		adds	r0, r0, #96
 952 0010 014A     		ldr	r2, .L65
 953 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 954              	.LVL64:
 955              	.L63:
1774:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 956              		.loc 2 1774 43 view .LVU238
 957              	.LBE59:
 958              	.LBE58:
 360:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 959              		.loc 1 360 1 view .LVU239
ARM GAS  /tmp/ccHm9UDT.s 			page 77


 960 0016 7047     		bx	lr
 961              	.L66:
 962              		.align	2
 963              	.L65:
 964 0018 00E100E0 		.word	-536813312
 965              		.cfi_endproc
 966              	.LFE298:
 968              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 969              		.align	1
 970              		.global	HAL_NVIC_GetActive
 971              		.syntax unified
 972              		.thumb
 973              		.thumb_func
 975              	HAL_NVIC_GetActive:
 976              	.LVL65:
 977              	.LFB299:
 361:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 362:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 363:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief Get active interrupt (read the active register in NVIC and return the active bit).
 364:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param IRQn External interrupt number
 365:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 366:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 367:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 368:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 369:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 370:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 371:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 978              		.loc 1 371 1 is_stmt 1 view -0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 372:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 373:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 983              		.loc 1 373 3 view .LVU241
 984              	.LBB60:
 985              	.LBI60:
1787:stm/stm32l4xx/CMSIS/Include/core_cm4.h **** {
 986              		.loc 2 1787 26 view .LVU242
 987              	.LBB61:
1789:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 988              		.loc 2 1789 3 view .LVU243
1789:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 989              		.loc 2 1789 6 is_stmt 0 view .LVU244
 990 0000 0028     		cmp	r0, #0
 991              	.LVL66:
1789:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   {
 992              		.loc 2 1789 6 view .LVU245
 993 0002 0BDB     		blt	.L69
1791:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 994              		.loc 2 1791 5 is_stmt 1 view .LVU246
1791:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 995              		.loc 2 1791 54 is_stmt 0 view .LVU247
 996 0004 4309     		lsrs	r3, r0, #5
1791:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 997              		.loc 2 1791 35 view .LVU248
 998 0006 8033     		adds	r3, r3, #128
ARM GAS  /tmp/ccHm9UDT.s 			page 78


 999 0008 054A     		ldr	r2, .L70
 1000 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1791:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 1001              		.loc 2 1791 91 view .LVU249
 1002 000e 00F01F00 		and	r0, r0, #31
1791:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 1003              		.loc 2 1791 103 view .LVU250
 1004 0012 23FA00F0 		lsr	r0, r3, r0
1791:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 1005              		.loc 2 1791 12 view .LVU251
 1006 0016 00F00100 		and	r0, r0, #1
 1007 001a 7047     		bx	lr
 1008              	.L69:
1795:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 1009              		.loc 2 1795 11 view .LVU252
 1010 001c 0020     		movs	r0, #0
 1011              	.LVL67:
1795:stm/stm32l4xx/CMSIS/Include/core_cm4.h ****   }
 1012              		.loc 2 1795 11 view .LVU253
 1013              	.LBE61:
 1014              	.LBE60:
 374:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1015              		.loc 1 374 1 view .LVU254
 1016 001e 7047     		bx	lr
 1017              	.L71:
 1018              		.align	2
 1019              	.L70:
 1020 0020 00E100E0 		.word	-536813312
 1021              		.cfi_endproc
 1022              	.LFE299:
 1024              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1025              		.align	1
 1026              		.global	HAL_SYSTICK_CLKSourceConfig
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1031              	HAL_SYSTICK_CLKSourceConfig:
 1032              	.LVL68:
 1033              	.LFB300:
 375:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 376:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 377:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Configure the SysTick clock source.
 378:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  CLKSource: specifies the SysTick clock source.
 379:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 380:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 381:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 382:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 383:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 384:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 385:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1034              		.loc 1 385 1 is_stmt 1 view -0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038              		@ link register save eliminated.
 386:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 387:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
ARM GAS  /tmp/ccHm9UDT.s 			page 79


 1039              		.loc 1 387 3 view .LVU256
 388:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1040              		.loc 1 388 3 view .LVU257
 1041              		.loc 1 388 6 is_stmt 0 view .LVU258
 1042 0000 0428     		cmp	r0, #4
 1043 0002 06D0     		beq	.L75
 389:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 390:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 391:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 392:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   else
 393:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 394:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 1044              		.loc 1 394 5 is_stmt 1 view .LVU259
 1045              		.loc 1 394 12 is_stmt 0 view .LVU260
 1046 0004 4FF0E022 		mov	r2, #-536813568
 1047 0008 1369     		ldr	r3, [r2, #16]
 1048              		.loc 1 394 19 view .LVU261
 1049 000a 23F00403 		bic	r3, r3, #4
 1050 000e 1361     		str	r3, [r2, #16]
 395:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 396:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1051              		.loc 1 396 1 view .LVU262
 1052 0010 7047     		bx	lr
 1053              	.L75:
 390:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 1054              		.loc 1 390 5 is_stmt 1 view .LVU263
 390:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 1055              		.loc 1 390 12 is_stmt 0 view .LVU264
 1056 0012 4FF0E022 		mov	r2, #-536813568
 1057 0016 1369     		ldr	r3, [r2, #16]
 390:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 1058              		.loc 1 390 19 view .LVU265
 1059 0018 43F00403 		orr	r3, r3, #4
 1060 001c 1361     		str	r3, [r2, #16]
 1061 001e 7047     		bx	lr
 1062              		.cfi_endproc
 1063              	.LFE300:
 1065              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1066              		.align	1
 1067              		.weak	HAL_SYSTICK_Callback
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1072              	HAL_SYSTICK_Callback:
 1073              	.LFB302:
 397:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 398:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 399:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Handle SYSTICK interrupt request.
 400:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 401:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 402:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 403:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 404:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 406:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 407:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 408:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  SYSTICK callback.
ARM GAS  /tmp/ccHm9UDT.s 			page 80


 409:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 410:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 411:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 412:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1074              		.loc 1 412 1 is_stmt 1 view -0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078              		@ link register save eliminated.
 413:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 414:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 415:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    */
 416:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1079              		.loc 1 416 1 view .LVU267
 1080 0000 7047     		bx	lr
 1081              		.cfi_endproc
 1082              	.LFE302:
 1084              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1085              		.align	1
 1086              		.global	HAL_SYSTICK_IRQHandler
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1091              	HAL_SYSTICK_IRQHandler:
 1092              	.LFB301:
 403:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1093              		.loc 1 403 1 view -0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097 0000 08B5     		push	{r3, lr}
 1098              	.LCFI7:
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 3, -8
 1101              		.cfi_offset 14, -4
 404:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1102              		.loc 1 404 3 view .LVU269
 1103 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 1104              	.LVL69:
 405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 1105              		.loc 1 405 1 is_stmt 0 view .LVU270
 1106 0006 08BD     		pop	{r3, pc}
 1107              		.cfi_endproc
 1108              	.LFE301:
 1110              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 1111              		.align	1
 1112              		.global	HAL_MPU_Enable
 1113              		.syntax unified
 1114              		.thumb
 1115              		.thumb_func
 1117              	HAL_MPU_Enable:
 1118              	.LVL70:
 1119              	.LFB303:
 417:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 418:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 419:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 420:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Enable the MPU.
ARM GAS  /tmp/ccHm9UDT.s 			page 81


 421:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  MPU_Control: Specifies the control mode of the MPU during hard fault, 
 422:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged accessto the default memory 
 423:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 424:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 425:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 426:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 427:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 428:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 429:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 430:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 431:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1120              		.loc 1 431 1 is_stmt 1 view -0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 1124              		@ link register save eliminated.
 432:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Enable the MPU */
 433:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->CTRL = (MPU_Control | MPU_CTRL_ENABLE_Msk);
 1125              		.loc 1 433 3 view .LVU272
 1126              		.loc 1 433 28 is_stmt 0 view .LVU273
 1127 0000 40F00100 		orr	r0, r0, #1
 1128              	.LVL71:
 1129              		.loc 1 433 13 view .LVU274
 1130 0004 034B     		ldr	r3, .L80
 1131 0006 C3F89400 		str	r0, [r3, #148]
 434:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 435:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 436:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   __DSB();
 1132              		.loc 1 436 3 is_stmt 1 view .LVU275
 1133              	.LBB62:
 1134              	.LBI62:
 944:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 1135              		.loc 3 944 27 view .LVU276
 1136              	.LBB63:
 1137              		.loc 3 946 3 view .LVU277
 1138              		.syntax unified
 1139              	@ 946 "stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h" 1
 1140 000a BFF34F8F 		dsb 0xF
 1141              	@ 0 "" 2
 1142              		.thumb
 1143              		.syntax unified
 1144              	.LBE63:
 1145              	.LBE62:
 437:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   __ISB();
 1146              		.loc 1 437 3 view .LVU278
 1147              	.LBB64:
 1148              	.LBI64:
 933:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 1149              		.loc 3 933 27 view .LVU279
 1150              	.LBB65:
 935:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 1151              		.loc 3 935 3 view .LVU280
 1152              		.syntax unified
 1153              	@ 935 "stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h" 1
 1154 000e BFF36F8F 		isb 0xF
 1155              	@ 0 "" 2
 1156              		.thumb
ARM GAS  /tmp/ccHm9UDT.s 			page 82


 1157              		.syntax unified
 1158              	.LBE65:
 1159              	.LBE64:
 438:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1160              		.loc 1 438 1 is_stmt 0 view .LVU281
 1161 0012 7047     		bx	lr
 1162              	.L81:
 1163              		.align	2
 1164              	.L80:
 1165 0014 00ED00E0 		.word	-536810240
 1166              		.cfi_endproc
 1167              	.LFE303:
 1169              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 1170              		.align	1
 1171              		.global	HAL_MPU_Disable
 1172              		.syntax unified
 1173              		.thumb
 1174              		.thumb_func
 1176              	HAL_MPU_Disable:
 1177              	.LFB304:
 439:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 440:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 441:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 442:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Disable the MPU.
 443:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 444:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 445:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 446:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1178              		.loc 1 446 1 is_stmt 1 view -0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 0
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 1182              		@ link register save eliminated.
 447:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 448:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   __DMB();
 1183              		.loc 1 448 3 view .LVU283
 1184              	.LBB66:
 1185              	.LBI66:
 947:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** }
 948:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 949:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** 
 950:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** /**
 951:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****  */
 955:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 1186              		.loc 3 955 27 view .LVU284
 1187              	.LBB67:
 956:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h **** {
 957:stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 1188              		.loc 3 957 3 view .LVU285
 1189              		.syntax unified
 1190              	@ 957 "stm/stm32l4xx/CMSIS/Include/cmsis_gcc.h" 1
 1191 0000 BFF35F8F 		dmb 0xF
 1192              	@ 0 "" 2
 1193              		.thumb
ARM GAS  /tmp/ccHm9UDT.s 			page 83


 1194              		.syntax unified
 1195              	.LBE67:
 1196              	.LBE66:
 449:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 450:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 451:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->CTRL  = 0;
 1197              		.loc 1 451 3 view .LVU286
 1198              		.loc 1 451 14 is_stmt 0 view .LVU287
 1199 0004 024B     		ldr	r3, .L83
 1200 0006 0022     		movs	r2, #0
 1201 0008 C3F89420 		str	r2, [r3, #148]
 452:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1202              		.loc 1 452 1 view .LVU288
 1203 000c 7047     		bx	lr
 1204              	.L84:
 1205 000e 00BF     		.align	2
 1206              	.L83:
 1207 0010 00ED00E0 		.word	-536810240
 1208              		.cfi_endproc
 1209              	.LFE304:
 1211              		.section	.text.HAL_MPU_EnableRegion,"ax",%progbits
 1212              		.align	1
 1213              		.global	HAL_MPU_EnableRegion
 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1218              	HAL_MPU_EnableRegion:
 1219              	.LVL72:
 1220              	.LFB305:
 453:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 454:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 455:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Enable the MPU Region.
 456:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 457:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 458:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_EnableRegion(uint32_t RegionNumber)
 459:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1221              		.loc 1 459 1 is_stmt 1 view -0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225              		@ link register save eliminated.
 460:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 461:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(RegionNumber));
 1226              		.loc 1 461 3 view .LVU290
 462:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 463:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the Region number */
 464:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->RNR = RegionNumber;
 1227              		.loc 1 464 3 view .LVU291
 1228              		.loc 1 464 12 is_stmt 0 view .LVU292
 1229 0000 044B     		ldr	r3, .L86
 1230 0002 C3F89800 		str	r0, [r3, #152]
 465:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 466:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Enable the Region */
 467:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   SET_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
 1231              		.loc 1 467 3 is_stmt 1 view .LVU293
 1232 0006 D3F8A020 		ldr	r2, [r3, #160]
 1233 000a 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccHm9UDT.s 			page 84


 1234 000e C3F8A020 		str	r2, [r3, #160]
 468:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1235              		.loc 1 468 1 is_stmt 0 view .LVU294
 1236 0012 7047     		bx	lr
 1237              	.L87:
 1238              		.align	2
 1239              	.L86:
 1240 0014 00ED00E0 		.word	-536810240
 1241              		.cfi_endproc
 1242              	.LFE305:
 1244              		.section	.text.HAL_MPU_DisableRegion,"ax",%progbits
 1245              		.align	1
 1246              		.global	HAL_MPU_DisableRegion
 1247              		.syntax unified
 1248              		.thumb
 1249              		.thumb_func
 1251              	HAL_MPU_DisableRegion:
 1252              	.LVL73:
 1253              	.LFB306:
 469:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 470:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 471:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Disable the MPU Region.
 472:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 473:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 474:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_DisableRegion(uint32_t RegionNumber)
 475:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1254              		.loc 1 475 1 is_stmt 1 view -0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 0
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 1258              		@ link register save eliminated.
 476:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 477:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(RegionNumber));
 1259              		.loc 1 477 3 view .LVU296
 478:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 479:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the Region number */
 480:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->RNR = RegionNumber;
 1260              		.loc 1 480 3 view .LVU297
 1261              		.loc 1 480 12 is_stmt 0 view .LVU298
 1262 0000 044B     		ldr	r3, .L89
 1263 0002 C3F89800 		str	r0, [r3, #152]
 481:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 482:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Disable the Region */
 483:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
 1264              		.loc 1 483 3 is_stmt 1 view .LVU299
 1265 0006 D3F8A020 		ldr	r2, [r3, #160]
 1266 000a 22F00102 		bic	r2, r2, #1
 1267 000e C3F8A020 		str	r2, [r3, #160]
 484:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1268              		.loc 1 484 1 is_stmt 0 view .LVU300
 1269 0012 7047     		bx	lr
 1270              	.L90:
 1271              		.align	2
 1272              	.L89:
 1273 0014 00ED00E0 		.word	-536810240
 1274              		.cfi_endproc
 1275              	.LFE306:
ARM GAS  /tmp/ccHm9UDT.s 			page 85


 1277              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 1278              		.align	1
 1279              		.global	HAL_MPU_ConfigRegion
 1280              		.syntax unified
 1281              		.thumb
 1282              		.thumb_func
 1284              	HAL_MPU_ConfigRegion:
 1285              	.LVL74:
 1286              	.LFB307:
 485:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 486:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 487:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize and configure the Region and the memory to be protected.
 488:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  MPU_Init: Pointer to a MPU_Region_InitTypeDef structure that contains
 489:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                the initialization and configuration information.
 490:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 491:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 492:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 493:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1287              		.loc 1 493 1 is_stmt 1 view -0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 0, uses_anonymous_args = 0
 1291              		@ link register save eliminated.
 494:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 495:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 1292              		.loc 1 495 3 view .LVU302
 496:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 1293              		.loc 1 496 3 view .LVU303
 497:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 1294              		.loc 1 497 3 view .LVU304
 498:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 1295              		.loc 1 498 3 view .LVU305
 499:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 1296              		.loc 1 499 3 view .LVU306
 500:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 1297              		.loc 1 500 3 view .LVU307
 501:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 1298              		.loc 1 501 3 view .LVU308
 502:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 1299              		.loc 1 502 3 view .LVU309
 503:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 1300              		.loc 1 503 3 view .LVU310
 504:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 1301              		.loc 1 504 3 view .LVU311
 505:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the Region number */
 506:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 1302              		.loc 1 506 3 view .LVU312
 1303              		.loc 1 506 22 is_stmt 0 view .LVU313
 1304 0000 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1305              		.loc 1 506 12 view .LVU314
 1306 0002 144A     		ldr	r2, .L92
 1307 0004 C2F89830 		str	r3, [r2, #152]
 507:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 508:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Disable the Region */
 509:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
 1308              		.loc 1 509 3 is_stmt 1 view .LVU315
 1309 0008 D2F8A030 		ldr	r3, [r2, #160]
ARM GAS  /tmp/ccHm9UDT.s 			page 86


 1310 000c 23F00103 		bic	r3, r3, #1
 1311 0010 C2F8A030 		str	r3, [r2, #160]
 510:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 511:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Apply configuration */
 512:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->RBAR = MPU_Init->BaseAddress;
 1312              		.loc 1 512 3 view .LVU316
 1313              		.loc 1 512 23 is_stmt 0 view .LVU317
 1314 0014 4368     		ldr	r3, [r0, #4]
 1315              		.loc 1 512 13 view .LVU318
 1316 0016 C2F89C30 		str	r3, [r2, #156]
 513:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 1317              		.loc 1 513 3 is_stmt 1 view .LVU319
 1318              		.loc 1 513 34 is_stmt 0 view .LVU320
 1319 001a 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 514:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1320              		.loc 1 514 34 view .LVU321
 1321 001c C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1322              		.loc 1 514 60 view .LVU322
 1323 001e 1B06     		lsls	r3, r3, #24
 513:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 1324              		.loc 1 513 82 view .LVU323
 1325 0020 43EA0173 		orr	r3, r3, r1, lsl #28
 515:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 1326              		.loc 1 515 34 view .LVU324
 1327 0024 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 514:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1328              		.loc 1 514 82 view .LVU325
 1329 0026 43EAC143 		orr	r3, r3, r1, lsl #19
 516:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 1330              		.loc 1 516 34 view .LVU326
 1331 002a 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 515:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 1332              		.loc 1 515 82 view .LVU327
 1333 002c 43EA8143 		orr	r3, r3, r1, lsl #18
 517:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 1334              		.loc 1 517 34 view .LVU328
 1335 0030 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 516:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 1336              		.loc 1 516 82 view .LVU329
 1337 0032 43EA4143 		orr	r3, r3, r1, lsl #17
 518:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 1338              		.loc 1 518 34 view .LVU330
 1339 0036 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 517:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 1340              		.loc 1 517 82 view .LVU331
 1341 0038 43EA0143 		orr	r3, r3, r1, lsl #16
 519:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 1342              		.loc 1 519 34 view .LVU332
 1343 003c 417A     		ldrb	r1, [r0, #9]	@ zero_extendqisi2
 518:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 1344              		.loc 1 518 82 view .LVU333
 1345 003e 43EA0123 		orr	r3, r3, r1, lsl #8
 520:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 1346              		.loc 1 520 34 view .LVU334
 1347 0042 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 519:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 1348              		.loc 1 519 82 view .LVU335
ARM GAS  /tmp/ccHm9UDT.s 			page 87


 1349 0044 43EA4103 		orr	r3, r3, r1, lsl #1
 521:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 1350              		.loc 1 521 34 view .LVU336
 1351 0048 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 520:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 1352              		.loc 1 520 82 view .LVU337
 1353 004a 0B43     		orrs	r3, r3, r1
 513:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1354              		.loc 1 513 13 view .LVU338
 1355 004c C2F8A030 		str	r3, [r2, #160]
 522:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1356              		.loc 1 522 1 view .LVU339
 1357 0050 7047     		bx	lr
 1358              	.L93:
 1359 0052 00BF     		.align	2
 1360              	.L92:
 1361 0054 00ED00E0 		.word	-536810240
 1362              		.cfi_endproc
 1363              	.LFE307:
 1365              		.text
 1366              	.Letext0:
 1367              		.file 4 "stm/stm32l4xx/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 1368              		.file 5 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/machine/_default_types.h"
 1369              		.file 6 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/sys/_stdint.h"
 1370              		.file 7 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
ARM GAS  /tmp/ccHm9UDT.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_cortex.c
     /tmp/ccHm9UDT.s:21     .text.__NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccHm9UDT.s:26     .text.__NVIC_EnableIRQ:0000000000000000 __NVIC_EnableIRQ
     /tmp/ccHm9UDT.s:60     .text.__NVIC_EnableIRQ:0000000000000018 $d
     /tmp/ccHm9UDT.s:65     .text.__NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccHm9UDT.s:70     .text.__NVIC_DisableIRQ:0000000000000000 __NVIC_DisableIRQ
     /tmp/ccHm9UDT.s:131    .text.__NVIC_DisableIRQ:0000000000000020 $d
     /tmp/ccHm9UDT.s:136    .text.__NVIC_SetPriority:0000000000000000 $t
     /tmp/ccHm9UDT.s:141    .text.__NVIC_SetPriority:0000000000000000 __NVIC_SetPriority
     /tmp/ccHm9UDT.s:184    .text.__NVIC_SetPriority:0000000000000024 $d
     /tmp/ccHm9UDT.s:189    .text.__NVIC_GetPriority:0000000000000000 $t
     /tmp/ccHm9UDT.s:194    .text.__NVIC_GetPriority:0000000000000000 __NVIC_GetPriority
     /tmp/ccHm9UDT.s:230    .text.__NVIC_GetPriority:0000000000000020 $d
     /tmp/ccHm9UDT.s:235    .text.NVIC_EncodePriority:0000000000000000 $t
     /tmp/ccHm9UDT.s:240    .text.NVIC_EncodePriority:0000000000000000 NVIC_EncodePriority
     /tmp/ccHm9UDT.s:302    .text.NVIC_DecodePriority:0000000000000000 $t
     /tmp/ccHm9UDT.s:307    .text.NVIC_DecodePriority:0000000000000000 NVIC_DecodePriority
     /tmp/ccHm9UDT.s:376    .text.__NVIC_SystemReset:0000000000000000 $t
     /tmp/ccHm9UDT.s:381    .text.__NVIC_SystemReset:0000000000000000 __NVIC_SystemReset
     /tmp/ccHm9UDT.s:442    .text.__NVIC_SystemReset:000000000000001c $d
     /tmp/ccHm9UDT.s:448    .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccHm9UDT.s:454    .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/ccHm9UDT.s:508    .text.HAL_NVIC_SetPriorityGrouping:0000000000000020 $d
     /tmp/ccHm9UDT.s:513    .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/ccHm9UDT.s:519    .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/ccHm9UDT.s:566    .text.HAL_NVIC_SetPriority:000000000000001c $d
     /tmp/ccHm9UDT.s:571    .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccHm9UDT.s:577    .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/ccHm9UDT.s:600    .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccHm9UDT.s:606    .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/ccHm9UDT.s:629    .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/ccHm9UDT.s:635    .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/ccHm9UDT.s:654    .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/ccHm9UDT.s:660    .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/ccHm9UDT.s:725    .text.HAL_SYSTICK_Config:0000000000000024 $d
     /tmp/ccHm9UDT.s:730    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccHm9UDT.s:736    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/ccHm9UDT.s:760    .text.HAL_NVIC_GetPriorityGrouping:000000000000000c $d
     /tmp/ccHm9UDT.s:765    .text.HAL_NVIC_GetPriority:0000000000000000 $t
     /tmp/ccHm9UDT.s:771    .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/ccHm9UDT.s:806    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccHm9UDT.s:812    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/ccHm9UDT.s:854    .text.HAL_NVIC_SetPendingIRQ:0000000000000018 $d
     /tmp/ccHm9UDT.s:859    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccHm9UDT.s:865    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/ccHm9UDT.s:911    .text.HAL_NVIC_GetPendingIRQ:0000000000000020 $d
     /tmp/ccHm9UDT.s:916    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccHm9UDT.s:922    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/ccHm9UDT.s:964    .text.HAL_NVIC_ClearPendingIRQ:0000000000000018 $d
     /tmp/ccHm9UDT.s:969    .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/ccHm9UDT.s:975    .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/ccHm9UDT.s:1020   .text.HAL_NVIC_GetActive:0000000000000020 $d
     /tmp/ccHm9UDT.s:1025   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/ccHm9UDT.s:1031   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/ccHm9UDT.s:1066   .text.HAL_SYSTICK_Callback:0000000000000000 $t
     /tmp/ccHm9UDT.s:1072   .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
ARM GAS  /tmp/ccHm9UDT.s 			page 89


     /tmp/ccHm9UDT.s:1085   .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/ccHm9UDT.s:1091   .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
     /tmp/ccHm9UDT.s:1111   .text.HAL_MPU_Enable:0000000000000000 $t
     /tmp/ccHm9UDT.s:1117   .text.HAL_MPU_Enable:0000000000000000 HAL_MPU_Enable
     /tmp/ccHm9UDT.s:1165   .text.HAL_MPU_Enable:0000000000000014 $d
     /tmp/ccHm9UDT.s:1170   .text.HAL_MPU_Disable:0000000000000000 $t
     /tmp/ccHm9UDT.s:1176   .text.HAL_MPU_Disable:0000000000000000 HAL_MPU_Disable
     /tmp/ccHm9UDT.s:1207   .text.HAL_MPU_Disable:0000000000000010 $d
     /tmp/ccHm9UDT.s:1212   .text.HAL_MPU_EnableRegion:0000000000000000 $t
     /tmp/ccHm9UDT.s:1218   .text.HAL_MPU_EnableRegion:0000000000000000 HAL_MPU_EnableRegion
     /tmp/ccHm9UDT.s:1240   .text.HAL_MPU_EnableRegion:0000000000000014 $d
     /tmp/ccHm9UDT.s:1245   .text.HAL_MPU_DisableRegion:0000000000000000 $t
     /tmp/ccHm9UDT.s:1251   .text.HAL_MPU_DisableRegion:0000000000000000 HAL_MPU_DisableRegion
     /tmp/ccHm9UDT.s:1273   .text.HAL_MPU_DisableRegion:0000000000000014 $d
     /tmp/ccHm9UDT.s:1278   .text.HAL_MPU_ConfigRegion:0000000000000000 $t
     /tmp/ccHm9UDT.s:1284   .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
     /tmp/ccHm9UDT.s:1361   .text.HAL_MPU_ConfigRegion:0000000000000054 $d

NO UNDEFINED SYMBOLS
