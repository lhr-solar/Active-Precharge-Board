ARM GAS  /tmp/ccCPCSLN.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_rng.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c"
  20              		.section	.text.HAL_RNG_MspInit,"ax",%progbits
  21              		.align	1
  22              		.weak	HAL_RNG_MspInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_RNG_MspInit:
  28              	.LVL0:
  29              	.LFB290:
   1:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
   2:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   ******************************************************************************
   3:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @file    stm32l4xx_hal_rng.c
   4:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @author  MCD Application Team
   5:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief   RNG HAL module driver.
   6:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *          This file provides firmware functions to manage the following
   7:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *          functionalities of the Random Number Generator (RNG) peripheral:
   8:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *           + Initialization and configuration functions
   9:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *           + Peripheral Control functions
  10:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *           + Peripheral State functions
  11:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *
  12:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   ******************************************************************************
  13:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @attention
  14:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *
  15:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * Copyright (c) 2017 STMicroelectronics.
  16:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * All rights reserved.
  17:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *
  18:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * in the root directory of this software component.
  20:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *
  22:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   ******************************************************************************
  23:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   @verbatim
  24:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   ==============================================================================
  25:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****                      ##### How to use this driver #####
  26:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   ==============================================================================
  27:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   [..]
  28:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       The RNG HAL driver can be used as follows:
  29:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
ARM GAS  /tmp/ccCPCSLN.s 			page 2


  30:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       (#) Enable the RNG controller clock using __HAL_RCC_RNG_CLK_ENABLE() macro
  31:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           in HAL_RNG_MspInit().
  32:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       (#) Activate the RNG peripheral using HAL_RNG_Init() function.
  33:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       (#) Wait until the 32 bit Random Number Generator contains a valid
  34:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           random data using (polling/interrupt) mode.
  35:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       (#) Get the 32 bit random number using HAL_RNG_GenerateRandomNumber() function.
  36:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  37:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     ##### Callback registration #####
  38:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     ==================================
  39:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  40:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     [..]
  41:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     The compilation define USE_HAL_RNG_REGISTER_CALLBACKS when set to 1
  42:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     allows the user to configure dynamically the driver callbacks.
  43:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  44:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     [..]
  45:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     Use Function HAL_RNG_RegisterCallback() to register a user callback.
  46:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     Function HAL_RNG_RegisterCallback() allows to register following callbacks:
  47:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     (+) ErrorCallback             : RNG Error Callback.
  48:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     (+) MspInitCallback           : RNG MspInit.
  49:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     (+) MspDeInitCallback         : RNG MspDeInit.
  50:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  51:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     and a pointer to the user callback function.
  52:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  53:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     [..]
  54:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     Use function HAL_RNG_UnRegisterCallback() to reset a callback to the default
  55:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     weak (overridden) function.
  56:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     HAL_RNG_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  57:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     and the Callback ID.
  58:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     This function allows to reset following callbacks:
  59:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     (+) ErrorCallback             : RNG Error Callback.
  60:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     (+) MspInitCallback           : RNG MspInit.
  61:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     (+) MspDeInitCallback         : RNG MspDeInit.
  62:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  63:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     [..]
  64:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     For specific callback ReadyDataCallback, use dedicated register callbacks:
  65:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     respectively HAL_RNG_RegisterReadyDataCallback() , HAL_RNG_UnRegisterReadyDataCallback().
  66:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  67:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     [..]
  68:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     By default, after the HAL_RNG_Init() and when the state is HAL_RNG_STATE_RESET
  69:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     all callbacks are set to the corresponding weak (overridden) functions:
  70:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     example HAL_RNG_ErrorCallback().
  71:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     Exception done for MspInit and MspDeInit functions that are respectively
  72:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     reset to the legacy weak (overridden) functions in the HAL_RNG_Init()
  73:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     and HAL_RNG_DeInit() only when these callbacks are null (not registered beforehand).
  74:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     If not, MspInit or MspDeInit are not null, the HAL_RNG_Init() and HAL_RNG_DeInit()
  75:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
  76:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  77:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     [..]
  78:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     Callbacks can be registered/unregistered in HAL_RNG_STATE_READY state only.
  79:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
  80:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     in HAL_RNG_STATE_READY or HAL_RNG_STATE_RESET state, thus registered (user)
  81:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
  82:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     In that case first register the MspInit/MspDeInit user callbacks
  83:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     using HAL_RNG_RegisterCallback() before calling HAL_RNG_DeInit()
  84:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     or HAL_RNG_Init() function.
  85:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  86:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     [..]
ARM GAS  /tmp/ccCPCSLN.s 			page 3


  87:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     When The compilation define USE_HAL_RNG_REGISTER_CALLBACKS is set to 0 or
  88:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     not defined, the callback registration feature is not available
  89:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     and weak (overridden) callbacks are used.
  90:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  91:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   @endverbatim
  92:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   ******************************************************************************
  93:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
  94:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  95:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /* Includes ------------------------------------------------------------------*/
  96:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #include "stm32l4xx_hal.h"
  97:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  98:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /** @addtogroup STM32L4xx_HAL_Driver
  99:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @{
 100:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 101:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 102:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined (RNG)
 103:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 104:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /** @addtogroup RNG
 105:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief RNG HAL module driver.
 106:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @{
 107:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 108:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 109:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #ifdef HAL_RNG_MODULE_ENABLED
 110:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 111:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /* Private types -------------------------------------------------------------*/
 112:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /* Private defines -----------------------------------------------------------*/
 113:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /** @defgroup RNG_Private_Defines RNG Private Defines
 114:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @{
 115:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 116:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /*  Health test control register information to use in CCM algorithm */
 117:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #define RNG_HTCFG_1   0x17590ABCU /*!< Magic number */
 118:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_VER_3_1) || defined(RNG_VER_3_0)
 119:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #define RNG_HTCFG     0x000CAA74U /*!< Recommended value for NIST compliance, refer to application 
 120:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #else /* RNG_VER_3_2 */
 121:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #define RNG_HTCFG     0x00007274U /*!< Recommended value for NIST compliance, refer to application 
 122:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* RNG_VER_3_1 || RNG_VER_3_0 */
 123:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 124:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @}
 125:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 126:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /* Private variables ---------------------------------------------------------*/
 127:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /* Private constants ---------------------------------------------------------*/
 128:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /** @defgroup RNG_Private_Constants RNG Private Constants
 129:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @{
 130:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 131:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #define RNG_TIMEOUT_VALUE     2U
 132:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 133:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @}
 134:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 135:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /* Private macros ------------------------------------------------------------*/
 136:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /* Private functions prototypes ----------------------------------------------*/
 137:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /* Exported functions --------------------------------------------------------*/
 138:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 139:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /** @addtogroup RNG_Exported_Functions
 140:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @{
 141:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 142:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 143:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /** @addtogroup RNG_Exported_Functions_Group1
ARM GAS  /tmp/ccCPCSLN.s 			page 4


 144:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *  @brief   Initialization and configuration functions
 145:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *
 146:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** @verbatim
 147:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****  ===============================================================================
 148:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           ##### Initialization and configuration functions #####
 149:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****  ===============================================================================
 150:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     [..]  This section provides functions allowing to:
 151:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       (+) Initialize the RNG according to the specified parameters
 152:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           in the RNG_InitTypeDef and create the associated handle
 153:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       (+) DeInitialize the RNG peripheral
 154:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       (+) Initialize the RNG MSP
 155:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       (+) DeInitialize RNG MSP
 156:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 157:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** @endverbatim
 158:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @{
 159:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 160:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 161:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 162:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Initializes the RNG peripheral and creates the associated handle.
 163:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 164:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 165:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval HAL status
 166:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 167:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_Init(RNG_HandleTypeDef *hrng)
 168:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 169:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t tickstart;
 170:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 171:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t cr_value;
 172:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif  /* RNG_CR_CONDRST */
 173:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Check the RNG handle allocation */
 174:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (hrng == NULL)
 175:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 176:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     return HAL_ERROR;
 177:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 178:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Check the parameters */
 179:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   assert_param(IS_RNG_ALL_INSTANCE(hrng->Instance));
 180:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CED)
 181:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   assert_param(IS_RNG_CED(hrng->Init.ClockErrorDetection));
 182:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* RNG_CR_CED */
 183:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 184:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if (USE_HAL_RNG_REGISTER_CALLBACKS == 1)
 185:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (hrng->State == HAL_RNG_STATE_RESET)
 186:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 187:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Allocate lock resource and initialize it */
 188:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->Lock = HAL_UNLOCKED;
 189:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 190:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ReadyDataCallback  = HAL_RNG_ReadyDataCallback;  /* Legacy weak ReadyDataCallback  */
 191:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ErrorCallback      = HAL_RNG_ErrorCallback;      /* Legacy weak ErrorCallback      */
 192:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 193:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     if (hrng->MspInitCallback == NULL)
 194:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 195:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       hrng->MspInitCallback = HAL_RNG_MspInit; /* Legacy weak MspInit  */
 196:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 197:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 198:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Init the low level hardware */
 199:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->MspInitCallback(hrng);
 200:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
ARM GAS  /tmp/ccCPCSLN.s 			page 5


 201:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #else
 202:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (hrng->State == HAL_RNG_STATE_RESET)
 203:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 204:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Allocate lock resource and initialize it */
 205:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->Lock = HAL_UNLOCKED;
 206:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 207:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Init the low level hardware */
 208:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     HAL_RNG_MspInit(hrng);
 209:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 210:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 211:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 212:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Change RNG peripheral state */
 213:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   hrng->State = HAL_RNG_STATE_BUSY;
 214:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 215:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 216:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Disable RNG */
 217:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_RNG_DISABLE(hrng);
 218:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 219:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* RNG CR register configuration. Set value in CR register for CONFIG 1, CONFIG 2 and CONFIG 3 va
 220:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   cr_value = (uint32_t)(RNG_CR_CONFIG_VAL);
 221:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 222:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Configuration of
 223:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****      - Clock Error Detection
 224:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****      - CONFIG1, CONFIG2, CONFIG3 fields
 225:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****      when CONDRT bit is set to 1 */
 226:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   MODIFY_REG(hrng->Instance->CR, RNG_CR_CED | RNG_CR_CONDRST | RNG_CR_RNG_CONFIG1
 227:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****              | RNG_CR_RNG_CONFIG2 | RNG_CR_RNG_CONFIG3,
 228:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****              (uint32_t)(RNG_CR_CONDRST | hrng->Init.ClockErrorDetection | cr_value));
 229:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_VER_3_2) || defined(RNG_VER_3_1) || defined(RNG_VER_3_0)
 230:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /*!< magic number must be written immediately before to RNG_HTCRG */
 231:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   WRITE_REG(hrng->Instance->HTCR, RNG_HTCFG_1);
 232:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Recommended value for NIST compliance, refer to application note AN4230 */
 233:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   WRITE_REG(hrng->Instance->HTCR, RNG_HTCFG);
 234:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* RNG_VER_3_2 || RNG_VER_3_1 || RNG_VER_3_0 */
 235:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 236:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Writing bit CONDRST=0 */
 237:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   CLEAR_BIT(hrng->Instance->CR, RNG_CR_CONDRST);
 238:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 239:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Get tick */
 240:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   tickstart = HAL_GetTick();
 241:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 242:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Wait for conditioning reset process to be completed */
 243:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   while (HAL_IS_BIT_SET(hrng->Instance->CR, RNG_CR_CONDRST))
 244:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 245:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     if ((HAL_GetTick() - tickstart) > RNG_TIMEOUT_VALUE)
 246:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 247:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* New check to avoid false timeout detection in case of preemption */
 248:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       if (HAL_IS_BIT_SET(hrng->Instance->CR, RNG_CR_CONDRST))
 249:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
 250:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->State = HAL_RNG_STATE_READY;
 251:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 252:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         return HAL_ERROR;
 253:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       }
 254:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 255:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 256:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #else
 257:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CED)
ARM GAS  /tmp/ccCPCSLN.s 			page 6


 258:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Clock Error Detection Configuration */
 259:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   MODIFY_REG(hrng->Instance->CR, RNG_CR_CED, hrng->Init.ClockErrorDetection);
 260:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* RNG_CR_CED */
 261:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* RNG_CR_CONDRST */
 262:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 263:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Enable the RNG Peripheral */
 264:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_RNG_ENABLE(hrng);
 265:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 266:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* verify that no seed error */
 267:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (__HAL_RNG_GET_IT(hrng, RNG_IT_SEI) != RESET)
 268:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 269:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->State = HAL_RNG_STATE_ERROR;
 270:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     return HAL_ERROR;
 271:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 272:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Get tick */
 273:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   tickstart = HAL_GetTick();
 274:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Check if data register contains valid random data */
 275:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   while (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) != SET)
 276:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 277:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     if ((HAL_GetTick() - tickstart) > RNG_TIMEOUT_VALUE)
 278:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 279:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* New check to avoid false timeout detection in case of preemption */
 280:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       if (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) != SET)
 281:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
 282:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->State = HAL_RNG_STATE_ERROR;
 283:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 284:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         return HAL_ERROR;
 285:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       }
 286:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 287:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 288:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 289:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Initialize the RNG state */
 290:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   hrng->State = HAL_RNG_STATE_READY;
 291:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 292:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Initialise the error code */
 293:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   hrng->ErrorCode = HAL_RNG_ERROR_NONE;
 294:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 295:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Return function status */
 296:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return HAL_OK;
 297:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 298:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 299:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 300:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  DeInitializes the RNG peripheral.
 301:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 302:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 303:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval HAL status
 304:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 305:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_DeInit(RNG_HandleTypeDef *hrng)
 306:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 307:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 308:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t tickstart;
 309:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 310:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* RNG_CR_CONDRST */
 311:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Check the RNG handle allocation */
 312:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (hrng == NULL)
 313:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 314:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccCPCSLN.s 			page 7


 315:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 316:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 317:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 318:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Clear Clock Error Detection bit when CONDRT bit is set to 1 */
 319:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   MODIFY_REG(hrng->Instance->CR, RNG_CR_CED | RNG_CR_CONDRST, RNG_CED_ENABLE | RNG_CR_CONDRST);
 320:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 321:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Writing bit CONDRST=0 */
 322:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   CLEAR_BIT(hrng->Instance->CR, RNG_CR_CONDRST);
 323:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 324:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Get tick */
 325:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   tickstart = HAL_GetTick();
 326:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 327:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Wait for conditioning reset process to be completed */
 328:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   while (HAL_IS_BIT_SET(hrng->Instance->CR, RNG_CR_CONDRST))
 329:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 330:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     if ((HAL_GetTick() - tickstart) > RNG_TIMEOUT_VALUE)
 331:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 332:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* New check to avoid false timeout detection in case of preemption */
 333:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       if (HAL_IS_BIT_SET(hrng->Instance->CR, RNG_CR_CONDRST))
 334:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
 335:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->State = HAL_RNG_STATE_READY;
 336:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 337:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         /* Process Unlocked */
 338:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         __HAL_UNLOCK(hrng);
 339:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         return HAL_ERROR;
 340:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       }
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 342:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 343:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 344:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #else
 345:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CED)
 346:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Clear Clock Error Detection bit */
 347:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   CLEAR_BIT(hrng->Instance->CR, RNG_CR_CED);
 348:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* RNG_CR_CED */
 349:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* RNG_CR_CONDRST */
 350:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Disable the RNG Peripheral */
 351:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   CLEAR_BIT(hrng->Instance->CR, RNG_CR_IE | RNG_CR_RNGEN);
 352:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 353:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Clear RNG interrupt status flags */
 354:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   CLEAR_BIT(hrng->Instance->SR, RNG_SR_CEIS | RNG_SR_SEIS);
 355:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 356:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if (USE_HAL_RNG_REGISTER_CALLBACKS == 1)
 357:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (hrng->MspDeInitCallback == NULL)
 358:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 359:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->MspDeInitCallback = HAL_RNG_MspDeInit; /* Legacy weak MspDeInit  */
 360:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 361:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 362:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* DeInit the low level hardware */
 363:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   hrng->MspDeInitCallback(hrng);
 364:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #else
 365:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* DeInit the low level hardware */
 366:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   HAL_RNG_MspDeInit(hrng);
 367:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 368:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 369:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Update the RNG state */
 370:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   hrng->State = HAL_RNG_STATE_RESET;
 371:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
ARM GAS  /tmp/ccCPCSLN.s 			page 8


 372:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Initialise the error code */
 373:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   hrng->ErrorCode = HAL_RNG_ERROR_NONE;
 374:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 375:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Release Lock */
 376:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_UNLOCK(hrng);
 377:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 378:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Return the function status */
 379:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return HAL_OK;
 380:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 381:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 382:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 383:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Initializes the RNG MSP.
 384:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 385:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 386:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval None
 387:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 388:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** __weak void HAL_RNG_MspInit(RNG_HandleTypeDef *hrng)
 389:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
  30              		.loc 1 389 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 390:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Prevent unused argument(s) compilation warning */
 391:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   UNUSED(hrng);
  35              		.loc 1 391 3 view .LVU1
 392:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 393:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****             function HAL_RNG_MspInit must be implemented in the user file.
 394:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****    */
 395:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
  36              		.loc 1 395 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE290:
  41              		.section	.text.HAL_RNG_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_RNG_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HAL_RNG_Init:
  49              	.LVL1:
  50              	.LFB288:
 168:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t tickstart;
  51              		.loc 1 168 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
 169:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
  55              		.loc 1 169 3 view .LVU4
 174:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
  56              		.loc 1 174 3 view .LVU5
 174:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
  57              		.loc 1 174 6 is_stmt 0 view .LVU6
  58 0000 0028     		cmp	r0, #0
  59 0002 34D0     		beq	.L8
 168:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t tickstart;
ARM GAS  /tmp/ccCPCSLN.s 			page 9


  60              		.loc 1 168 1 view .LVU7
  61 0004 38B5     		push	{r3, r4, r5, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 16
  64              		.cfi_offset 3, -16
  65              		.cfi_offset 4, -12
  66              		.cfi_offset 5, -8
  67              		.cfi_offset 14, -4
  68 0006 0446     		mov	r4, r0
 179:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CED)
  69              		.loc 1 179 3 is_stmt 1 view .LVU8
 202:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
  70              		.loc 1 202 3 view .LVU9
 202:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
  71              		.loc 1 202 11 is_stmt 0 view .LVU10
  72 0008 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 202:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
  73              		.loc 1 202 6 view .LVU11
  74 000a 7BB1     		cbz	r3, .L13
  75              	.LVL2:
  76              	.L4:
 213:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  77              		.loc 1 213 3 is_stmt 1 view .LVU12
 213:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  78              		.loc 1 213 15 is_stmt 0 view .LVU13
  79 000c 0223     		movs	r3, #2
  80 000e 6371     		strb	r3, [r4, #5]
 264:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
  81              		.loc 1 264 3 is_stmt 1 view .LVU14
  82 0010 2268     		ldr	r2, [r4]
  83 0012 1368     		ldr	r3, [r2]
  84 0014 43F00403 		orr	r3, r3, #4
  85 0018 1360     		str	r3, [r2]
 267:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
  86              		.loc 1 267 3 view .LVU15
 267:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
  87              		.loc 1 267 7 is_stmt 0 view .LVU16
  88 001a 2368     		ldr	r3, [r4]
  89 001c 5B68     		ldr	r3, [r3, #4]
 267:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
  90              		.loc 1 267 6 view .LVU17
  91 001e 13F0400F 		tst	r3, #64
  92 0022 07D0     		beq	.L5
 269:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     return HAL_ERROR;
  93              		.loc 1 269 5 is_stmt 1 view .LVU18
 269:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     return HAL_ERROR;
  94              		.loc 1 269 17 is_stmt 0 view .LVU19
  95 0024 0423     		movs	r3, #4
  96 0026 6371     		strb	r3, [r4, #5]
 270:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
  97              		.loc 1 270 5 is_stmt 1 view .LVU20
 270:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
  98              		.loc 1 270 12 is_stmt 0 view .LVU21
  99 0028 0120     		movs	r0, #1
 100              	.L3:
 297:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 101              		.loc 1 297 1 view .LVU22
ARM GAS  /tmp/ccCPCSLN.s 			page 10


 102 002a 38BD     		pop	{r3, r4, r5, pc}
 103              	.LVL3:
 104              	.L13:
 205:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 105              		.loc 1 205 5 is_stmt 1 view .LVU23
 205:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 106              		.loc 1 205 16 is_stmt 0 view .LVU24
 107 002c 0371     		strb	r3, [r0, #4]
 208:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 108              		.loc 1 208 5 is_stmt 1 view .LVU25
 109 002e FFF7FEFF 		bl	HAL_RNG_MspInit
 110              	.LVL4:
 208:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 111              		.loc 1 208 5 is_stmt 0 view .LVU26
 112 0032 EBE7     		b	.L4
 113              	.L5:
 273:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Check if data register contains valid random data */
 114              		.loc 1 273 3 is_stmt 1 view .LVU27
 273:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Check if data register contains valid random data */
 115              		.loc 1 273 15 is_stmt 0 view .LVU28
 116 0034 FFF7FEFF 		bl	HAL_GetTick
 117              	.LVL5:
 118 0038 0546     		mov	r5, r0
 119              	.LVL6:
 275:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 120              		.loc 1 275 3 is_stmt 1 view .LVU29
 121              	.L6:
 275:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 122              		.loc 1 275 50 view .LVU30
 275:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 123              		.loc 1 275 10 is_stmt 0 view .LVU31
 124 003a 2368     		ldr	r3, [r4]
 125 003c 5B68     		ldr	r3, [r3, #4]
 275:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 126              		.loc 1 275 50 view .LVU32
 127 003e 13F0010F 		tst	r3, #1
 128 0042 0FD1     		bne	.L14
 277:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 129              		.loc 1 277 5 is_stmt 1 view .LVU33
 277:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 130              		.loc 1 277 10 is_stmt 0 view .LVU34
 131 0044 FFF7FEFF 		bl	HAL_GetTick
 132              	.LVL7:
 277:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 133              		.loc 1 277 24 view .LVU35
 134 0048 401B     		subs	r0, r0, r5
 277:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 135              		.loc 1 277 8 view .LVU36
 136 004a 0228     		cmp	r0, #2
 137 004c F5D9     		bls	.L6
 280:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
 138              		.loc 1 280 7 is_stmt 1 view .LVU37
 280:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
 139              		.loc 1 280 11 is_stmt 0 view .LVU38
 140 004e 2368     		ldr	r3, [r4]
 141 0050 5B68     		ldr	r3, [r3, #4]
 280:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
ARM GAS  /tmp/ccCPCSLN.s 			page 11


 142              		.loc 1 280 10 view .LVU39
 143 0052 13F0010F 		tst	r3, #1
 144 0056 F0D1     		bne	.L6
 282:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 145              		.loc 1 282 9 is_stmt 1 view .LVU40
 282:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 146              		.loc 1 282 21 is_stmt 0 view .LVU41
 147 0058 0423     		movs	r3, #4
 148 005a 6371     		strb	r3, [r4, #5]
 283:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         return HAL_ERROR;
 149              		.loc 1 283 9 is_stmt 1 view .LVU42
 283:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         return HAL_ERROR;
 150              		.loc 1 283 25 is_stmt 0 view .LVU43
 151 005c 0223     		movs	r3, #2
 152 005e A360     		str	r3, [r4, #8]
 284:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       }
 153              		.loc 1 284 9 is_stmt 1 view .LVU44
 284:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       }
 154              		.loc 1 284 16 is_stmt 0 view .LVU45
 155 0060 0120     		movs	r0, #1
 156 0062 E2E7     		b	.L3
 157              	.L14:
 290:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 158              		.loc 1 290 3 is_stmt 1 view .LVU46
 290:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 159              		.loc 1 290 15 is_stmt 0 view .LVU47
 160 0064 0123     		movs	r3, #1
 161 0066 6371     		strb	r3, [r4, #5]
 293:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 162              		.loc 1 293 3 is_stmt 1 view .LVU48
 293:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 163              		.loc 1 293 19 is_stmt 0 view .LVU49
 164 0068 0020     		movs	r0, #0
 165 006a A060     		str	r0, [r4, #8]
 296:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 166              		.loc 1 296 3 is_stmt 1 view .LVU50
 296:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 167              		.loc 1 296 10 is_stmt 0 view .LVU51
 168 006c DDE7     		b	.L3
 169              	.LVL8:
 170              	.L8:
 171              	.LCFI1:
 172              		.cfi_def_cfa_offset 0
 173              		.cfi_restore 3
 174              		.cfi_restore 4
 175              		.cfi_restore 5
 176              		.cfi_restore 14
 176:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 177              		.loc 1 176 12 view .LVU52
 178 006e 0120     		movs	r0, #1
 179              	.LVL9:
 297:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 180              		.loc 1 297 1 view .LVU53
 181 0070 7047     		bx	lr
 182              		.cfi_endproc
 183              	.LFE288:
 185              		.section	.text.HAL_RNG_MspDeInit,"ax",%progbits
ARM GAS  /tmp/ccCPCSLN.s 			page 12


 186              		.align	1
 187              		.weak	HAL_RNG_MspDeInit
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	HAL_RNG_MspDeInit:
 193              	.LVL10:
 194              	.LFB291:
 396:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 397:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 398:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  DeInitializes the RNG MSP.
 399:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 400:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 401:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval None
 402:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 403:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** __weak void HAL_RNG_MspDeInit(RNG_HandleTypeDef *hrng)
 404:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 195              		.loc 1 404 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Prevent unused argument(s) compilation warning */
 406:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   UNUSED(hrng);
 200              		.loc 1 406 3 view .LVU55
 407:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 408:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****             function HAL_RNG_MspDeInit must be implemented in the user file.
 409:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****    */
 410:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 201              		.loc 1 410 1 is_stmt 0 view .LVU56
 202 0000 7047     		bx	lr
 203              		.cfi_endproc
 204              	.LFE291:
 206              		.section	.text.HAL_RNG_DeInit,"ax",%progbits
 207              		.align	1
 208              		.global	HAL_RNG_DeInit
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 213              	HAL_RNG_DeInit:
 214              	.LVL11:
 215              	.LFB289:
 306:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 216              		.loc 1 306 1 is_stmt 1 view -0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 312:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 220              		.loc 1 312 3 view .LVU58
 312:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 221              		.loc 1 312 6 is_stmt 0 view .LVU59
 222 0000 90B1     		cbz	r0, .L18
 306:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 223              		.loc 1 306 1 view .LVU60
 224 0002 10B5     		push	{r4, lr}
 225              	.LCFI2:
 226              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccCPCSLN.s 			page 13


 227              		.cfi_offset 4, -8
 228              		.cfi_offset 14, -4
 229 0004 0446     		mov	r4, r0
 351:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 230              		.loc 1 351 3 is_stmt 1 view .LVU61
 231 0006 0268     		ldr	r2, [r0]
 232 0008 1368     		ldr	r3, [r2]
 233 000a 23F00C03 		bic	r3, r3, #12
 234 000e 1360     		str	r3, [r2]
 354:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 235              		.loc 1 354 3 view .LVU62
 236 0010 0268     		ldr	r2, [r0]
 237 0012 5368     		ldr	r3, [r2, #4]
 238 0014 23F06003 		bic	r3, r3, #96
 239 0018 5360     		str	r3, [r2, #4]
 366:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 240              		.loc 1 366 3 view .LVU63
 241 001a FFF7FEFF 		bl	HAL_RNG_MspDeInit
 242              	.LVL12:
 370:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 243              		.loc 1 370 3 view .LVU64
 370:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 244              		.loc 1 370 15 is_stmt 0 view .LVU65
 245 001e 0020     		movs	r0, #0
 246 0020 6071     		strb	r0, [r4, #5]
 373:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 247              		.loc 1 373 3 is_stmt 1 view .LVU66
 373:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 248              		.loc 1 373 19 is_stmt 0 view .LVU67
 249 0022 A060     		str	r0, [r4, #8]
 376:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 250              		.loc 1 376 3 is_stmt 1 view .LVU68
 376:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 251              		.loc 1 376 3 view .LVU69
 252 0024 2071     		strb	r0, [r4, #4]
 376:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 253              		.loc 1 376 3 view .LVU70
 379:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 254              		.loc 1 379 3 view .LVU71
 380:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 255              		.loc 1 380 1 is_stmt 0 view .LVU72
 256 0026 10BD     		pop	{r4, pc}
 257              	.LVL13:
 258              	.L18:
 259              	.LCFI3:
 260              		.cfi_def_cfa_offset 0
 261              		.cfi_restore 4
 262              		.cfi_restore 14
 314:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 263              		.loc 1 314 12 view .LVU73
 264 0028 0120     		movs	r0, #1
 265              	.LVL14:
 380:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 266              		.loc 1 380 1 view .LVU74
 267 002a 7047     		bx	lr
 268              		.cfi_endproc
 269              	.LFE289:
ARM GAS  /tmp/ccCPCSLN.s 			page 14


 271              		.section	.text.HAL_RNG_GenerateRandomNumber,"ax",%progbits
 272              		.align	1
 273              		.global	HAL_RNG_GenerateRandomNumber
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	HAL_RNG_GenerateRandomNumber:
 279              	.LVL15:
 280              	.LFB292:
 411:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 412:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if (USE_HAL_RNG_REGISTER_CALLBACKS == 1)
 413:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 414:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Register a User RNG Callback
 415:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         To be used instead of the weak predefined callback
 416:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng RNG handle
 417:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  CallbackID ID of the callback to be registered
 418:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         This parameter can be one of the following values:
 419:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_ERROR_CB_ID Error callback ID
 420:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_MSPINIT_CB_ID MspInit callback ID
 421:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_MSPDEINIT_CB_ID MspDeInit callback ID
 422:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  pCallback pointer to the Callback function
 423:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval HAL status
 424:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 425:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_RegisterCallback(RNG_HandleTypeDef *hrng, HAL_RNG_CallbackIDTypeDef Callb
 426:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****                                            pRNG_CallbackTypeDef pCallback)
 427:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 428:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
 429:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 430:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (pCallback == NULL)
 431:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 432:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Update the error code */
 433:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 434:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     return HAL_ERROR;
 435:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 436:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 437:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (HAL_RNG_STATE_READY == hrng->State)
 438:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 439:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     switch (CallbackID)
 440:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 441:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       case HAL_RNG_ERROR_CB_ID :
 442:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->ErrorCallback = pCallback;
 443:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 444:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 445:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       case HAL_RNG_MSPINIT_CB_ID :
 446:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->MspInitCallback = pCallback;
 447:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 448:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 449:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       case HAL_RNG_MSPDEINIT_CB_ID :
 450:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->MspDeInitCallback = pCallback;
 451:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 452:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 453:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       default :
 454:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         /* Update the error code */
 455:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 456:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         /* Return error status */
 457:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         status =  HAL_ERROR;
 458:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
ARM GAS  /tmp/ccCPCSLN.s 			page 15


 459:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 460:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 461:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   else if (HAL_RNG_STATE_RESET == hrng->State)
 462:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 463:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     switch (CallbackID)
 464:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 465:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       case HAL_RNG_MSPINIT_CB_ID :
 466:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->MspInitCallback = pCallback;
 467:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 468:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 469:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       case HAL_RNG_MSPDEINIT_CB_ID :
 470:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->MspDeInitCallback = pCallback;
 471:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 472:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 473:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       default :
 474:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         /* Update the error code */
 475:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 476:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         /* Return error status */
 477:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         status =  HAL_ERROR;
 478:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 479:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 480:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 481:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   else
 482:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 483:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Update the error code */
 484:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 485:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Return error status */
 486:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     status =  HAL_ERROR;
 487:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 488:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 489:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return status;
 490:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 491:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 492:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 493:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Unregister an RNG Callback
 494:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         RNG callback is redirected to the weak predefined callback
 495:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng RNG handle
 496:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  CallbackID ID of the callback to be unregistered
 497:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         This parameter can be one of the following values:
 498:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_ERROR_CB_ID Error callback ID
 499:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_MSPINIT_CB_ID MspInit callback ID
 500:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_MSPDEINIT_CB_ID MspDeInit callback ID
 501:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval HAL status
 502:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 503:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_UnRegisterCallback(RNG_HandleTypeDef *hrng, HAL_RNG_CallbackIDTypeDef Cal
 504:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 505:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
 506:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 507:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 508:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (HAL_RNG_STATE_READY == hrng->State)
 509:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 510:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     switch (CallbackID)
 511:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 512:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       case HAL_RNG_ERROR_CB_ID :
 513:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->ErrorCallback = HAL_RNG_ErrorCallback;          /* Legacy weak ErrorCallback  */
 514:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 515:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
ARM GAS  /tmp/ccCPCSLN.s 			page 16


 516:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       case HAL_RNG_MSPINIT_CB_ID :
 517:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->MspInitCallback = HAL_RNG_MspInit;              /* Legacy weak MspInit  */
 518:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 519:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 520:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       case HAL_RNG_MSPDEINIT_CB_ID :
 521:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->MspDeInitCallback = HAL_RNG_MspDeInit;          /* Legacy weak MspDeInit  */
 522:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 523:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 524:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       default :
 525:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         /* Update the error code */
 526:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 527:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         /* Return error status */
 528:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         status =  HAL_ERROR;
 529:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 530:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 531:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 532:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   else if (HAL_RNG_STATE_RESET == hrng->State)
 533:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 534:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     switch (CallbackID)
 535:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 536:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       case HAL_RNG_MSPINIT_CB_ID :
 537:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->MspInitCallback = HAL_RNG_MspInit;              /* Legacy weak MspInit  */
 538:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 539:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 540:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       case HAL_RNG_MSPDEINIT_CB_ID :
 541:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->MspDeInitCallback = HAL_RNG_MspDeInit;          /* Legacy weak MspInit  */
 542:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 543:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 544:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       default :
 545:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         /* Update the error code */
 546:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 547:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         /* Return error status */
 548:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         status =  HAL_ERROR;
 549:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         break;
 550:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 551:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 552:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   else
 553:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 554:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Update the error code */
 555:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 556:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Return error status */
 557:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     status =  HAL_ERROR;
 558:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 559:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 560:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return status;
 561:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 562:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 563:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 564:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Register Data Ready RNG Callback
 565:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         To be used instead of the weak HAL_RNG_ReadyDataCallback() predefined callback
 566:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng RNG handle
 567:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  pCallback pointer to the Data Ready Callback function
 568:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval HAL status
 569:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 570:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_RegisterReadyDataCallback(RNG_HandleTypeDef *hrng, pRNG_ReadyDataCallback
 571:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 572:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccCPCSLN.s 			page 17


 573:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 574:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (pCallback == NULL)
 575:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 576:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Update the error code */
 577:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 578:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     return HAL_ERROR;
 579:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 580:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Process locked */
 581:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 582:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 583:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (HAL_RNG_STATE_READY == hrng->State)
 584:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 585:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ReadyDataCallback = pCallback;
 586:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 587:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   else
 588:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 589:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Update the error code */
 590:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 591:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Return error status */
 592:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     status =  HAL_ERROR;
 593:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 594:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 595:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Release Lock */
 596:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_UNLOCK(hrng);
 597:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return status;
 598:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 599:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 600:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 601:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  UnRegister the Data Ready RNG Callback
 602:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         Data Ready RNG Callback is redirected to the weak HAL_RNG_ReadyDataCallback() predefine
 603:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng RNG handle
 604:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval HAL status
 605:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 606:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_UnRegisterReadyDataCallback(RNG_HandleTypeDef *hrng)
 607:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 608:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
 609:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 610:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Process locked */
 611:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 612:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 613:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (HAL_RNG_STATE_READY == hrng->State)
 614:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 615:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ReadyDataCallback = HAL_RNG_ReadyDataCallback; /* Legacy weak ReadyDataCallback  */
 616:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 617:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   else
 618:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 619:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Update the error code */
 620:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 621:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Return error status */
 622:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     status =  HAL_ERROR;
 623:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 624:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 625:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Release Lock */
 626:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_UNLOCK(hrng);
 627:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return status;
 628:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 629:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
ARM GAS  /tmp/ccCPCSLN.s 			page 18


 630:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 631:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 632:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 633:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @}
 634:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 635:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 636:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /** @addtogroup RNG_Exported_Functions_Group2
 637:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *  @brief   Peripheral Control functions
 638:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *
 639:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** @verbatim
 640:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****  ===============================================================================
 641:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****                       ##### Peripheral Control functions #####
 642:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****  ===============================================================================
 643:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     [..]  This section provides functions allowing to:
 644:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       (+) Get the 32 bit Random number
 645:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       (+) Get the 32 bit Random number with interrupt enabled
 646:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       (+) Handle RNG interrupt request
 647:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 648:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** @endverbatim
 649:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @{
 650:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 651:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 652:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 653:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Generates a 32-bit random number.
 654:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @note   When several random data are output at the same time in an output buffer,
 655:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         this function checks value of RNG_FLAG_DRDY flag to know if valid
 656:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         random number is available in the DR register (RNG_FLAG_DRDY flag set
 657:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         whenever a random number is available through the RNG_DR register).
 658:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         After transitioning from 0 to 1 (random number available),
 659:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         RNG_FLAG_DRDY flag remains high until output buffer becomes empty after reading
 660:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         four words from the RNG_DR register, i.e. further function calls
 661:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         will immediately return a new u32 random number (additional words are
 662:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         available and can be read by the application, till RNG_FLAG_DRDY flag remains high).
 663:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         When no more random number data is available in DR register, RNG_FLAG_DRDY
 664:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         flag is automatically cleared.
 665:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         When random number are out on a single sample basis, each time the random
 666:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         number data is read the RNG_FLAG_DRDY flag is automatically cleared.
 667:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 668:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 669:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  random32bit pointer to generated random number variable if successful.
 670:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval HAL status
 671:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 672:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 673:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_GenerateRandomNumber(RNG_HandleTypeDef *hrng, uint32_t *random32bit)
 674:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 281              		.loc 1 674 1 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 674 1 is_stmt 0 view .LVU76
 286 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 287              	.LCFI4:
 288              		.cfi_def_cfa_offset 24
 289              		.cfi_offset 3, -24
 290              		.cfi_offset 4, -20
 291              		.cfi_offset 5, -16
 292              		.cfi_offset 6, -12
ARM GAS  /tmp/ccCPCSLN.s 			page 19


 293              		.cfi_offset 7, -8
 294              		.cfi_offset 14, -4
 675:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t tickstart;
 295              		.loc 1 675 3 is_stmt 1 view .LVU77
 676:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
 296              		.loc 1 676 3 view .LVU78
 297              	.LVL16:
 677:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 678:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Process Locked */
 679:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 298              		.loc 1 679 3 view .LVU79
 299              		.loc 1 679 3 view .LVU80
 300 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 301 0004 012B     		cmp	r3, #1
 302 0006 30D0     		beq	.L29
 303 0008 0446     		mov	r4, r0
 304 000a 0E46     		mov	r6, r1
 305              		.loc 1 679 3 discriminator 2 view .LVU81
 306 000c 0123     		movs	r3, #1
 307 000e 0371     		strb	r3, [r0, #4]
 308              		.loc 1 679 3 discriminator 2 view .LVU82
 680:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 681:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Check RNG peripheral state */
 682:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (hrng->State == HAL_RNG_STATE_READY)
 309              		.loc 1 682 3 discriminator 2 view .LVU83
 310              		.loc 1 682 11 is_stmt 0 discriminator 2 view .LVU84
 311 0010 4579     		ldrb	r5, [r0, #5]	@ zero_extendqisi2
 312 0012 EDB2     		uxtb	r5, r5
 313              		.loc 1 682 6 discriminator 2 view .LVU85
 314 0014 9D42     		cmp	r5, r3
 315 0016 06D0     		beq	.L31
 683:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 684:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Change RNG peripheral state */
 685:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->State = HAL_RNG_STATE_BUSY;
 686:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 687:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Check if there is a seed error */
 688:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     if (__HAL_RNG_GET_IT(hrng, RNG_IT_SEI) != RESET)
 689:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 690:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Update the error code */
 691:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       hrng->ErrorCode = HAL_RNG_ERROR_SEED;
 692:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Reset from seed error */
 693:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       status = RNG_RecoverSeedError(hrng);
 694:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       if (status == HAL_ERROR)
 695:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
 696:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         return status;
 697:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       }
 698:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 699:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* RNG_CR_CONDRST */
 700:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 701:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Get tick */
 702:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     tickstart = HAL_GetTick();
 703:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 704:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Check if data register contains valid random data */
 705:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     while (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) == RESET)
 706:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 707:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       if ((HAL_GetTick() - tickstart) > RNG_TIMEOUT_VALUE)
 708:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
ARM GAS  /tmp/ccCPCSLN.s 			page 20


 709:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         /* New check to avoid false timeout detection in case of preemption */
 710:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         if (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) == RESET)
 711:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         {
 712:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           hrng->State = HAL_RNG_STATE_READY;
 713:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 714:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           /* Process Unlocked */
 715:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           __HAL_UNLOCK(hrng);
 716:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           return HAL_ERROR;
 717:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         }
 718:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       }
 719:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 720:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 721:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Get a 32bit Random number */
 722:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->RandomNumber = hrng->Instance->DR;
 723:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 724:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* In case of seed error, the value available in the RNG_DR register must not
 725:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****        be used as it may not have enough entropy */
 726:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     if (__HAL_RNG_GET_IT(hrng, RNG_IT_SEI) != RESET)
 727:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 728:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Update the error code and status */
 729:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       hrng->ErrorCode = HAL_RNG_ERROR_SEED;
 730:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       status = HAL_ERROR;
 731:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 732:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     else /* No seed error */
 733:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 734:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       *random32bit = hrng->RandomNumber;
 735:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 736:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #else
 737:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     *random32bit = hrng->RandomNumber;
 738:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 739:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* RNG_CR_CONDRST */
 740:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->State = HAL_RNG_STATE_READY;
 741:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 742:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   else
 743:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 744:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_BUSY;
 316              		.loc 1 744 5 is_stmt 1 view .LVU86
 317              		.loc 1 744 21 is_stmt 0 view .LVU87
 318 0018 0423     		movs	r3, #4
 319 001a 8360     		str	r3, [r0, #8]
 745:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     status = HAL_ERROR;
 320              		.loc 1 745 5 is_stmt 1 view .LVU88
 321              	.LVL17:
 322              		.loc 1 745 12 is_stmt 0 view .LVU89
 323 001c 0125     		movs	r5, #1
 324              	.LVL18:
 325              	.L28:
 746:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 747:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 748:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Process Unlocked */
 749:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_UNLOCK(hrng);
 326              		.loc 1 749 3 is_stmt 1 view .LVU90
 327              		.loc 1 749 3 view .LVU91
 328 001e 0023     		movs	r3, #0
 329 0020 2371     		strb	r3, [r4, #4]
 330              		.loc 1 749 3 view .LVU92
 750:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
ARM GAS  /tmp/ccCPCSLN.s 			page 21


 751:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return status;
 331              		.loc 1 751 3 view .LVU93
 332              	.LVL19:
 333              	.L24:
 752:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 334              		.loc 1 752 1 is_stmt 0 view .LVU94
 335 0022 2846     		mov	r0, r5
 336 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 337              	.LVL20:
 338              	.L31:
 685:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 339              		.loc 1 685 5 is_stmt 1 view .LVU95
 685:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 340              		.loc 1 685 17 is_stmt 0 view .LVU96
 341 0026 0223     		movs	r3, #2
 342 0028 4371     		strb	r3, [r0, #5]
 702:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 343              		.loc 1 702 5 is_stmt 1 view .LVU97
 702:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 344              		.loc 1 702 17 is_stmt 0 view .LVU98
 345 002a FFF7FEFF 		bl	HAL_GetTick
 346              	.LVL21:
 702:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 347              		.loc 1 702 17 view .LVU99
 348 002e 0746     		mov	r7, r0
 349              	.LVL22:
 705:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 350              		.loc 1 705 5 is_stmt 1 view .LVU100
 351              	.L26:
 705:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 352              		.loc 1 705 52 view .LVU101
 705:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 353              		.loc 1 705 12 is_stmt 0 view .LVU102
 354 0030 2368     		ldr	r3, [r4]
 355 0032 5A68     		ldr	r2, [r3, #4]
 705:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 356              		.loc 1 705 52 view .LVU103
 357 0034 12F0010F 		tst	r2, #1
 358 0038 10D1     		bne	.L32
 707:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
 359              		.loc 1 707 7 is_stmt 1 view .LVU104
 707:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
 360              		.loc 1 707 12 is_stmt 0 view .LVU105
 361 003a FFF7FEFF 		bl	HAL_GetTick
 362              	.LVL23:
 707:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
 363              		.loc 1 707 26 view .LVU106
 364 003e C01B     		subs	r0, r0, r7
 707:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       {
 365              		.loc 1 707 10 view .LVU107
 366 0040 0228     		cmp	r0, #2
 367 0042 F5D9     		bls	.L26
 710:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         {
 368              		.loc 1 710 9 is_stmt 1 view .LVU108
 710:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         {
 369              		.loc 1 710 13 is_stmt 0 view .LVU109
 370 0044 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccCPCSLN.s 			page 22


 371 0046 5B68     		ldr	r3, [r3, #4]
 710:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         {
 372              		.loc 1 710 12 view .LVU110
 373 0048 13F0010F 		tst	r3, #1
 374 004c F0D1     		bne	.L26
 712:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 375              		.loc 1 712 11 is_stmt 1 view .LVU111
 712:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 376              		.loc 1 712 23 is_stmt 0 view .LVU112
 377 004e 0123     		movs	r3, #1
 378 0050 6371     		strb	r3, [r4, #5]
 713:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           /* Process Unlocked */
 379              		.loc 1 713 11 is_stmt 1 view .LVU113
 713:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           /* Process Unlocked */
 380              		.loc 1 713 27 is_stmt 0 view .LVU114
 381 0052 0223     		movs	r3, #2
 382 0054 A360     		str	r3, [r4, #8]
 715:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           return HAL_ERROR;
 383              		.loc 1 715 11 is_stmt 1 view .LVU115
 715:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           return HAL_ERROR;
 384              		.loc 1 715 11 view .LVU116
 385 0056 0023     		movs	r3, #0
 386 0058 2371     		strb	r3, [r4, #4]
 715:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****           return HAL_ERROR;
 387              		.loc 1 715 11 view .LVU117
 716:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         }
 388              		.loc 1 716 11 view .LVU118
 716:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****         }
 389              		.loc 1 716 18 is_stmt 0 view .LVU119
 390 005a E2E7     		b	.L24
 391              	.L32:
 722:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 392              		.loc 1 722 5 is_stmt 1 view .LVU120
 722:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 393              		.loc 1 722 40 is_stmt 0 view .LVU121
 394 005c 9B68     		ldr	r3, [r3, #8]
 722:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if defined(RNG_CR_CONDRST)
 395              		.loc 1 722 24 view .LVU122
 396 005e E360     		str	r3, [r4, #12]
 737:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 397              		.loc 1 737 5 is_stmt 1 view .LVU123
 737:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 398              		.loc 1 737 18 is_stmt 0 view .LVU124
 399 0060 3360     		str	r3, [r6]
 740:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 400              		.loc 1 740 5 is_stmt 1 view .LVU125
 740:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 401              		.loc 1 740 17 is_stmt 0 view .LVU126
 402 0062 0123     		movs	r3, #1
 403 0064 6371     		strb	r3, [r4, #5]
 676:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 404              		.loc 1 676 21 view .LVU127
 405 0066 0025     		movs	r5, #0
 406 0068 D9E7     		b	.L28
 407              	.LVL24:
 408              	.L29:
 679:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
ARM GAS  /tmp/ccCPCSLN.s 			page 23


 409              		.loc 1 679 3 view .LVU128
 410 006a 0225     		movs	r5, #2
 411 006c D9E7     		b	.L24
 412              		.cfi_endproc
 413              	.LFE292:
 415              		.section	.text.HAL_RNG_GenerateRandomNumber_IT,"ax",%progbits
 416              		.align	1
 417              		.global	HAL_RNG_GenerateRandomNumber_IT
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	HAL_RNG_GenerateRandomNumber_IT:
 423              	.LVL25:
 424              	.LFB293:
 753:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 754:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 755:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Generates a 32-bit random number in interrupt mode.
 756:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 757:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 758:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval HAL status
 759:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 760:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_GenerateRandomNumber_IT(RNG_HandleTypeDef *hrng)
 761:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 425              		.loc 1 761 1 is_stmt 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 762:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
 430              		.loc 1 762 3 view .LVU130
 763:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 764:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Process Locked */
 765:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 431              		.loc 1 765 3 view .LVU131
 432              		.loc 1 765 3 view .LVU132
 433 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 434 0002 012B     		cmp	r3, #1
 435 0004 14D0     		beq	.L36
 436              		.loc 1 765 3 discriminator 2 view .LVU133
 437 0006 0123     		movs	r3, #1
 438 0008 0371     		strb	r3, [r0, #4]
 439              		.loc 1 765 3 discriminator 2 view .LVU134
 766:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 767:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Check RNG peripheral state */
 768:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (hrng->State == HAL_RNG_STATE_READY)
 440              		.loc 1 768 3 discriminator 2 view .LVU135
 441              		.loc 1 768 11 is_stmt 0 discriminator 2 view .LVU136
 442 000a 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 443 000c DBB2     		uxtb	r3, r3
 444              		.loc 1 768 6 discriminator 2 view .LVU137
 445 000e 012B     		cmp	r3, #1
 446 0010 05D0     		beq	.L37
 769:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 770:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Change RNG peripheral state */
 771:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->State = HAL_RNG_STATE_BUSY;
 772:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 773:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Enable the RNG Interrupts: Data Ready, Clock error, Seed error */
ARM GAS  /tmp/ccCPCSLN.s 			page 24


 774:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     __HAL_RNG_ENABLE_IT(hrng);
 775:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 776:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   else
 777:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 778:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Process Unlocked */
 779:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     __HAL_UNLOCK(hrng);
 447              		.loc 1 779 5 is_stmt 1 view .LVU138
 448              		.loc 1 779 5 view .LVU139
 449 0012 0023     		movs	r3, #0
 450 0014 0371     		strb	r3, [r0, #4]
 451              		.loc 1 779 5 view .LVU140
 780:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 781:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_BUSY;
 452              		.loc 1 781 5 view .LVU141
 453              		.loc 1 781 21 is_stmt 0 view .LVU142
 454 0016 0423     		movs	r3, #4
 455 0018 8360     		str	r3, [r0, #8]
 782:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     status = HAL_ERROR;
 456              		.loc 1 782 5 is_stmt 1 view .LVU143
 457              	.LVL26:
 458              		.loc 1 782 12 is_stmt 0 view .LVU144
 459 001a 0120     		movs	r0, #1
 460              	.LVL27:
 461              		.loc 1 782 12 view .LVU145
 462 001c 7047     		bx	lr
 463              	.LVL28:
 464              	.L37:
 771:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 465              		.loc 1 771 5 is_stmt 1 view .LVU146
 771:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 466              		.loc 1 771 17 is_stmt 0 view .LVU147
 467 001e 0223     		movs	r3, #2
 468 0020 4371     		strb	r3, [r0, #5]
 774:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 469              		.loc 1 774 5 is_stmt 1 view .LVU148
 470 0022 0268     		ldr	r2, [r0]
 471 0024 1368     		ldr	r3, [r2]
 472 0026 43F00803 		orr	r3, r3, #8
 473 002a 1360     		str	r3, [r2]
 762:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 474              		.loc 1 762 21 is_stmt 0 view .LVU149
 475 002c 0020     		movs	r0, #0
 476              	.LVL29:
 762:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 477              		.loc 1 762 21 view .LVU150
 478 002e 7047     		bx	lr
 479              	.LVL30:
 480              	.L36:
 765:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 481              		.loc 1 765 3 view .LVU151
 482 0030 0220     		movs	r0, #2
 483              	.LVL31:
 783:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 784:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 785:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return status;
 786:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 484              		.loc 1 786 1 view .LVU152
ARM GAS  /tmp/ccCPCSLN.s 			page 25


 485 0032 7047     		bx	lr
 486              		.cfi_endproc
 487              	.LFE293:
 489              		.section	.text.HAL_RNG_GetRandomNumber,"ax",%progbits
 490              		.align	1
 491              		.global	HAL_RNG_GetRandomNumber
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 496              	HAL_RNG_GetRandomNumber:
 497              	.LVL32:
 498              	.LFB294:
 787:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 788:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 789:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Returns generated random number in polling mode (Obsolete)
 790:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         Use HAL_RNG_GenerateRandomNumber() API instead.
 791:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 792:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 793:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval Random value
 794:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 795:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** uint32_t HAL_RNG_GetRandomNumber(RNG_HandleTypeDef *hrng)
 796:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 499              		.loc 1 796 1 is_stmt 1 view -0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              		.loc 1 796 1 is_stmt 0 view .LVU154
 504 0000 10B5     		push	{r4, lr}
 505              	.LCFI5:
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 0446     		mov	r4, r0
 797:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (HAL_RNG_GenerateRandomNumber(hrng, &(hrng->RandomNumber)) == HAL_OK)
 510              		.loc 1 797 3 is_stmt 1 view .LVU155
 511              		.loc 1 797 7 is_stmt 0 view .LVU156
 512 0004 00F10C01 		add	r1, r0, #12
 513 0008 FFF7FEFF 		bl	HAL_RNG_GenerateRandomNumber
 514              	.LVL33:
 515              		.loc 1 797 6 view .LVU157
 516 000c 08B9     		cbnz	r0, .L40
 798:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 799:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     return hrng->RandomNumber;
 517              		.loc 1 799 5 is_stmt 1 view .LVU158
 518              		.loc 1 799 16 is_stmt 0 view .LVU159
 519 000e E068     		ldr	r0, [r4, #12]
 520              	.L38:
 800:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 801:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   else
 802:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 803:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     return 0U;
 804:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 805:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 521              		.loc 1 805 1 view .LVU160
 522 0010 10BD     		pop	{r4, pc}
 523              	.LVL34:
 524              	.L40:
ARM GAS  /tmp/ccCPCSLN.s 			page 26


 803:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 525              		.loc 1 803 12 view .LVU161
 526 0012 0020     		movs	r0, #0
 527 0014 FCE7     		b	.L38
 528              		.cfi_endproc
 529              	.LFE294:
 531              		.section	.text.HAL_RNG_GetRandomNumber_IT,"ax",%progbits
 532              		.align	1
 533              		.global	HAL_RNG_GetRandomNumber_IT
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 538              	HAL_RNG_GetRandomNumber_IT:
 539              	.LVL35:
 540              	.LFB295:
 806:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 807:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 808:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Returns a 32-bit random number with interrupt enabled (Obsolete),
 809:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         Use HAL_RNG_GenerateRandomNumber_IT() API instead.
 810:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 811:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 812:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval 32-bit random number
 813:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 814:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** uint32_t HAL_RNG_GetRandomNumber_IT(RNG_HandleTypeDef *hrng)
 815:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 541              		.loc 1 815 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 816:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t random32bit = 0U;
 546              		.loc 1 816 3 view .LVU163
 817:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 818:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Process locked */
 819:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 547              		.loc 1 819 3 view .LVU164
 548              		.loc 1 819 3 view .LVU165
 549 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 550 0002 012B     		cmp	r3, #1
 551 0004 0AD0     		beq	.L44
 552              		.loc 1 819 3 discriminator 2 view .LVU166
 553 0006 0123     		movs	r3, #1
 554 0008 0371     		strb	r3, [r0, #4]
 555              		.loc 1 819 3 discriminator 2 view .LVU167
 820:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 821:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Change RNG peripheral state */
 822:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   hrng->State = HAL_RNG_STATE_BUSY;
 556              		.loc 1 822 3 discriminator 2 view .LVU168
 557              		.loc 1 822 15 is_stmt 0 discriminator 2 view .LVU169
 558 000a 0223     		movs	r3, #2
 559 000c 4371     		strb	r3, [r0, #5]
 823:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 824:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Get a 32bit Random number */
 825:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   random32bit = hrng->Instance->DR;
 560              		.loc 1 825 3 is_stmt 1 discriminator 2 view .LVU170
 561              		.loc 1 825 21 is_stmt 0 discriminator 2 view .LVU171
 562 000e 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccCPCSLN.s 			page 27


 563              		.loc 1 825 15 discriminator 2 view .LVU172
 564 0010 9868     		ldr	r0, [r3, #8]
 565              	.LVL36:
 826:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 827:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Enable the RNG Interrupts: Data Ready, Clock error, Seed error */
 828:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   __HAL_RNG_ENABLE_IT(hrng);
 566              		.loc 1 828 3 is_stmt 1 discriminator 2 view .LVU173
 567 0012 1A68     		ldr	r2, [r3]
 568 0014 42F00802 		orr	r2, r2, #8
 569 0018 1A60     		str	r2, [r3]
 829:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 830:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Return the 32 bit random number */
 831:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return random32bit;
 570              		.loc 1 831 3 discriminator 2 view .LVU174
 571              		.loc 1 831 10 is_stmt 0 discriminator 2 view .LVU175
 572 001a 7047     		bx	lr
 573              	.LVL37:
 574              	.L44:
 819:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 575              		.loc 1 819 3 view .LVU176
 576 001c 0220     		movs	r0, #2
 577              	.LVL38:
 832:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 578              		.loc 1 832 1 view .LVU177
 579 001e 7047     		bx	lr
 580              		.cfi_endproc
 581              	.LFE295:
 583              		.section	.text.HAL_RNG_ReadLastRandomNumber,"ax",%progbits
 584              		.align	1
 585              		.global	HAL_RNG_ReadLastRandomNumber
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 590              	HAL_RNG_ReadLastRandomNumber:
 591              	.LVL39:
 592              	.LFB297:
 833:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 834:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 835:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Handles RNG interrupt request.
 836:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @note   In the case of a clock error, the RNG is no more able to generate
 837:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         random numbers because the PLL48CLK clock is not correct. User has
 838:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         to check that the clock controller is correctly configured to provide
 839:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         the RNG clock and clear the CEIS bit using __HAL_RNG_CLEAR_IT().
 840:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         The clock error has no impact on the previously generated
 841:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         random numbers, and the RNG_DR register contents can be used.
 842:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @note   In the case of a seed error, the generation of random numbers is
 843:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         interrupted as long as the SECS bit is '1'. If a number is
 844:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         available in the RNG_DR register, it must not be used because it may
 845:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         not have enough entropy. In this case, it is recommended to clear the
 846:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         SEIS bit using __HAL_RNG_CLEAR_IT(), then disable and enable
 847:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         the RNG peripheral to reinitialize and restart the RNG.
 848:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @note   User-written HAL_RNG_ErrorCallback() API is called once whether SEIS
 849:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         or CEIS are set.
 850:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 851:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 852:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval None
 853:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
ARM GAS  /tmp/ccCPCSLN.s 			page 28


 854:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 855:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** void HAL_RNG_IRQHandler(RNG_HandleTypeDef *hrng)
 856:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 857:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t rngclockerror = 0U;
 858:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t itflag   = hrng->Instance->SR;
 859:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 860:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* RNG clock error interrupt occurred */
 861:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if ((itflag & RNG_IT_CEI) == RNG_IT_CEI)
 862:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 863:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Update the error code */
 864:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_CLOCK;
 865:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     rngclockerror = 1U;
 866:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 867:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   else if ((itflag & RNG_IT_SEI) == RNG_IT_SEI)
 868:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 869:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Check if Seed Error Current Status (SECS) is set */
 870:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     if ((itflag & RNG_FLAG_SECS) != RNG_FLAG_SECS)
 871:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 872:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* RNG IP performed the reset automatically (auto-reset) */
 873:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Clear bit SEIS */
 874:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       CLEAR_BIT(hrng->Instance->SR, RNG_IT_SEI);
 875:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 876:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     else
 877:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 878:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Seed Error has not been recovered : Update the error code */
 879:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       hrng->ErrorCode = HAL_RNG_ERROR_SEED;
 880:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       rngclockerror = 1U;
 881:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Disable the IT */
 882:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       __HAL_RNG_DISABLE_IT(hrng);
 883:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 884:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 885:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   else
 886:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 887:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Nothing to do */
 888:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 889:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 890:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if (rngclockerror == 1U)
 891:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 892:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Change RNG peripheral state */
 893:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->State = HAL_RNG_STATE_ERROR;
 894:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 895:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if (USE_HAL_RNG_REGISTER_CALLBACKS == 1)
 896:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Call registered Error callback */
 897:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->ErrorCallback(hrng);
 898:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #else
 899:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Call legacy weak Error callback */
 900:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     HAL_RNG_ErrorCallback(hrng);
 901:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 902:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 903:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Clear the clock error flag */
 904:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     __HAL_RNG_CLEAR_IT(hrng, RNG_IT_CEI | RNG_IT_SEI);
 905:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 906:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     return;
 907:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 908:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 909:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Check RNG data ready interrupt occurred */
 910:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   if ((itflag & RNG_IT_DRDY) == RNG_IT_DRDY)
ARM GAS  /tmp/ccCPCSLN.s 			page 29


 911:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 912:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Generate random number once, so disable the IT */
 913:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     __HAL_RNG_DISABLE_IT(hrng);
 914:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 915:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     /* Get the 32bit Random number (DRDY flag automatically cleared) */
 916:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     hrng->RandomNumber = hrng->Instance->DR;
 917:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 918:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     if (hrng->State != HAL_RNG_STATE_ERROR)
 919:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 920:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Change RNG peripheral state */
 921:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       hrng->State = HAL_RNG_STATE_READY;
 922:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Process Unlocked */
 923:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       __HAL_UNLOCK(hrng);
 924:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 925:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #if (USE_HAL_RNG_REGISTER_CALLBACKS == 1)
 926:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Call registered Data Ready callback */
 927:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       hrng->ReadyDataCallback(hrng, hrng->RandomNumber);
 928:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #else
 929:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Call legacy weak Data Ready callback */
 930:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       HAL_RNG_ReadyDataCallback(hrng, hrng->RandomNumber);
 931:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 932:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 933:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 934:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 935:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 936:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 937:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Read latest generated random number.
 938:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 939:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 940:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval random value
 941:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 942:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** uint32_t HAL_RNG_ReadLastRandomNumber(const RNG_HandleTypeDef *hrng)
 943:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 593              		.loc 1 943 1 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 944:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return (hrng->RandomNumber);
 598              		.loc 1 944 3 view .LVU179
 945:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 599              		.loc 1 945 1 is_stmt 0 view .LVU180
 600 0000 C068     		ldr	r0, [r0, #12]
 601              	.LVL40:
 602              		.loc 1 945 1 view .LVU181
 603 0002 7047     		bx	lr
 604              		.cfi_endproc
 605              	.LFE297:
 607              		.section	.text.HAL_RNG_ReadyDataCallback,"ax",%progbits
 608              		.align	1
 609              		.weak	HAL_RNG_ReadyDataCallback
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 614              	HAL_RNG_ReadyDataCallback:
 615              	.LVL41:
 616              	.LFB298:
ARM GAS  /tmp/ccCPCSLN.s 			page 30


 946:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 947:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 948:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Data Ready callback in non-blocking mode.
 949:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @note   When several random data are output at the same time in an output buffer,
 950:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         When RNG_FLAG_DRDY flag value is set, first random number has been read
 951:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         from DR register in IRQ Handler and is provided as callback parameter.
 952:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         Depending on valid data available in the conditioning output buffer,
 953:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         additional words can be read by the application from DR register till
 954:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *         DRDY bit remains high.
 955:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 956:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 957:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  random32bit generated random number.
 958:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval None
 959:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 960:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** __weak void HAL_RNG_ReadyDataCallback(RNG_HandleTypeDef *hrng, uint32_t random32bit)
 961:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 617              		.loc 1 961 1 is_stmt 1 view -0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 962:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Prevent unused argument(s) compilation warning */
 963:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   UNUSED(hrng);
 622              		.loc 1 963 3 view .LVU183
 964:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   UNUSED(random32bit);
 623              		.loc 1 964 3 view .LVU184
 965:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 966:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****             function HAL_RNG_ReadyDataCallback must be implemented in the user file.
 967:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****    */
 968:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 624              		.loc 1 968 1 is_stmt 0 view .LVU185
 625 0000 7047     		bx	lr
 626              		.cfi_endproc
 627              	.LFE298:
 629              		.section	.text.HAL_RNG_ErrorCallback,"ax",%progbits
 630              		.align	1
 631              		.weak	HAL_RNG_ErrorCallback
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 636              	HAL_RNG_ErrorCallback:
 637              	.LVL42:
 638              	.LFB299:
 969:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 970:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 971:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  RNG error callbacks.
 972:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 973:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
 974:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval None
 975:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 976:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** __weak void HAL_RNG_ErrorCallback(RNG_HandleTypeDef *hrng)
 977:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 639              		.loc 1 977 1 is_stmt 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
ARM GAS  /tmp/ccCPCSLN.s 			page 31


 978:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Prevent unused argument(s) compilation warning */
 979:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   UNUSED(hrng);
 644              		.loc 1 979 3 view .LVU187
 980:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 981:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****             function HAL_RNG_ErrorCallback must be implemented in the user file.
 982:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****    */
 983:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 645              		.loc 1 983 1 is_stmt 0 view .LVU188
 646 0000 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE299:
 650              		.section	.text.HAL_RNG_IRQHandler,"ax",%progbits
 651              		.align	1
 652              		.global	HAL_RNG_IRQHandler
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 657              	HAL_RNG_IRQHandler:
 658              	.LVL43:
 659              	.LFB296:
 856:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t rngclockerror = 0U;
 660              		.loc 1 856 1 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 856:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t rngclockerror = 0U;
 664              		.loc 1 856 1 is_stmt 0 view .LVU190
 665 0000 10B5     		push	{r4, lr}
 666              	.LCFI6:
 667              		.cfi_def_cfa_offset 8
 668              		.cfi_offset 4, -8
 669              		.cfi_offset 14, -4
 670 0002 0446     		mov	r4, r0
 857:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   uint32_t itflag   = hrng->Instance->SR;
 671              		.loc 1 857 3 is_stmt 1 view .LVU191
 672              	.LVL44:
 858:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 673              		.loc 1 858 3 view .LVU192
 858:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 674              		.loc 1 858 27 is_stmt 0 view .LVU193
 675 0004 0268     		ldr	r2, [r0]
 858:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 676              		.loc 1 858 12 view .LVU194
 677 0006 5368     		ldr	r3, [r2, #4]
 678              	.LVL45:
 861:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 679              		.loc 1 861 3 is_stmt 1 view .LVU195
 861:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 680              		.loc 1 861 6 is_stmt 0 view .LVU196
 681 0008 13F0200F 		tst	r3, #32
 682 000c 20D1     		bne	.L55
 867:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 683              		.loc 1 867 8 is_stmt 1 view .LVU197
 867:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 684              		.loc 1 867 11 is_stmt 0 view .LVU198
 685 000e 13F0400F 		tst	r3, #64
 686 0012 06D0     		beq	.L51
ARM GAS  /tmp/ccCPCSLN.s 			page 32


 870:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 687              		.loc 1 870 5 is_stmt 1 view .LVU199
 870:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 688              		.loc 1 870 8 is_stmt 0 view .LVU200
 689 0014 13F0040F 		tst	r3, #4
 690 0018 26D1     		bne	.L52
 874:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 691              		.loc 1 874 7 is_stmt 1 view .LVU201
 692 001a 5168     		ldr	r1, [r2, #4]
 693 001c 21F04001 		bic	r1, r1, #64
 694 0020 5160     		str	r1, [r2, #4]
 888:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 695              		.loc 1 888 3 view .LVU202
 890:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 696              		.loc 1 890 3 view .LVU203
 697              	.L51:
 698              	.LVL46:
 910:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 699              		.loc 1 910 3 view .LVU204
 910:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 700              		.loc 1 910 6 is_stmt 0 view .LVU205
 701 0022 13F0010F 		tst	r3, #1
 702 0026 1ED0     		beq	.L48
 913:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 703              		.loc 1 913 5 is_stmt 1 view .LVU206
 704 0028 2268     		ldr	r2, [r4]
 705 002a 1368     		ldr	r3, [r2]
 706              	.LVL47:
 913:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 707              		.loc 1 913 5 is_stmt 0 view .LVU207
 708 002c 23F00803 		bic	r3, r3, #8
 709 0030 1360     		str	r3, [r2]
 916:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 710              		.loc 1 916 5 is_stmt 1 view .LVU208
 916:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 711              		.loc 1 916 30 is_stmt 0 view .LVU209
 712 0032 2368     		ldr	r3, [r4]
 916:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 713              		.loc 1 916 40 view .LVU210
 714 0034 9968     		ldr	r1, [r3, #8]
 916:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 715              		.loc 1 916 24 view .LVU211
 716 0036 E160     		str	r1, [r4, #12]
 918:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 717              		.loc 1 918 5 is_stmt 1 view .LVU212
 918:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 718              		.loc 1 918 13 is_stmt 0 view .LVU213
 719 0038 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 720 003a DBB2     		uxtb	r3, r3
 918:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     {
 721              		.loc 1 918 8 view .LVU214
 722 003c 042B     		cmp	r3, #4
 723 003e 12D0     		beq	.L48
 921:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Process Unlocked */
 724              		.loc 1 921 7 is_stmt 1 view .LVU215
 921:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Process Unlocked */
 725              		.loc 1 921 19 is_stmt 0 view .LVU216
ARM GAS  /tmp/ccCPCSLN.s 			page 33


 726 0040 0123     		movs	r3, #1
 727 0042 6371     		strb	r3, [r4, #5]
 923:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 728              		.loc 1 923 7 is_stmt 1 view .LVU217
 923:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 729              		.loc 1 923 7 view .LVU218
 730 0044 0023     		movs	r3, #0
 731 0046 2371     		strb	r3, [r4, #4]
 923:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 732              		.loc 1 923 7 view .LVU219
 930:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 733              		.loc 1 930 7 view .LVU220
 734 0048 2046     		mov	r0, r4
 735              	.LVL48:
 930:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 736              		.loc 1 930 7 is_stmt 0 view .LVU221
 737 004a FFF7FEFF 		bl	HAL_RNG_ReadyDataCallback
 738              	.LVL49:
 739 004e 0AE0     		b	.L48
 740              	.LVL50:
 741              	.L55:
 864:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     rngclockerror = 1U;
 742              		.loc 1 864 5 is_stmt 1 view .LVU222
 864:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     rngclockerror = 1U;
 743              		.loc 1 864 21 is_stmt 0 view .LVU223
 744 0050 1023     		movs	r3, #16
 745              	.LVL51:
 864:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     rngclockerror = 1U;
 746              		.loc 1 864 21 view .LVU224
 747 0052 8360     		str	r3, [r0, #8]
 865:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 748              		.loc 1 865 5 is_stmt 1 view .LVU225
 749              	.LVL52:
 888:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 750              		.loc 1 888 3 view .LVU226
 890:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 751              		.loc 1 890 3 view .LVU227
 752              	.L50:
 893:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 753              		.loc 1 893 5 view .LVU228
 893:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 754              		.loc 1 893 17 is_stmt 0 view .LVU229
 755 0054 0423     		movs	r3, #4
 756 0056 6371     		strb	r3, [r4, #5]
 900:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 757              		.loc 1 900 5 is_stmt 1 view .LVU230
 758 0058 2046     		mov	r0, r4
 759              	.LVL53:
 900:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 760              		.loc 1 900 5 is_stmt 0 view .LVU231
 761 005a FFF7FEFF 		bl	HAL_RNG_ErrorCallback
 762              	.LVL54:
 904:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 763              		.loc 1 904 5 is_stmt 1 view .LVU232
 764 005e 2368     		ldr	r3, [r4]
 765 0060 6FF06002 		mvn	r2, #96
 766 0064 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccCPCSLN.s 			page 34


 906:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   }
 767              		.loc 1 906 5 view .LVU233
 768              	.LVL55:
 769              	.L48:
 934:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 770              		.loc 1 934 1 is_stmt 0 view .LVU234
 771 0066 10BD     		pop	{r4, pc}
 772              	.LVL56:
 773              	.L52:
 879:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       rngclockerror = 1U;
 774              		.loc 1 879 7 is_stmt 1 view .LVU235
 879:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       rngclockerror = 1U;
 775              		.loc 1 879 23 is_stmt 0 view .LVU236
 776 0068 0823     		movs	r3, #8
 777              	.LVL57:
 879:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       rngclockerror = 1U;
 778              		.loc 1 879 23 view .LVU237
 779 006a 8360     		str	r3, [r0, #8]
 880:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****       /* Disable the IT */
 780              		.loc 1 880 7 is_stmt 1 view .LVU238
 781              	.LVL58:
 882:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     }
 782              		.loc 1 882 7 view .LVU239
 783 006c 1368     		ldr	r3, [r2]
 784 006e 23F00803 		bic	r3, r3, #8
 785 0072 1360     		str	r3, [r2]
 888:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 786              		.loc 1 888 3 view .LVU240
 890:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   {
 787              		.loc 1 890 3 view .LVU241
 788 0074 EEE7     		b	.L50
 789              		.cfi_endproc
 790              	.LFE296:
 792              		.section	.text.HAL_RNG_GetState,"ax",%progbits
 793              		.align	1
 794              		.global	HAL_RNG_GetState
 795              		.syntax unified
 796              		.thumb
 797              		.thumb_func
 799              	HAL_RNG_GetState:
 800              	.LVL59:
 801              	.LFB300:
 984:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
 985:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @}
 986:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
 987:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 988:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
 989:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /** @addtogroup RNG_Exported_Functions_Group3
 990:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *  @brief   Peripheral State functions
 991:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *
 992:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** @verbatim
 993:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****  ===============================================================================
 994:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****                       ##### Peripheral State functions #####
 995:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****  ===============================================================================
 996:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     [..]
 997:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     This subsection permits to get in run-time the status of the peripheral
 998:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****     and the data flow.
ARM GAS  /tmp/ccCPCSLN.s 			page 35


 999:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
1000:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** @endverbatim
1001:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @{
1002:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
1003:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
1004:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
1005:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Returns the RNG state.
1006:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
1007:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   *                the configuration information for RNG.
1008:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval HAL state
1009:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
1010:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** HAL_RNG_StateTypeDef HAL_RNG_GetState(const RNG_HandleTypeDef *hrng)
1011:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 802              		.loc 1 1011 1 view -0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              		@ link register save eliminated.
1012:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return hrng->State;
 807              		.loc 1 1012 3 view .LVU243
 808              		.loc 1 1012 14 is_stmt 0 view .LVU244
 809 0000 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 810              	.LVL60:
1013:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
 811              		.loc 1 1013 1 view .LVU245
 812 0002 7047     		bx	lr
 813              		.cfi_endproc
 814              	.LFE300:
 816              		.section	.text.HAL_RNG_GetError,"ax",%progbits
 817              		.align	1
 818              		.global	HAL_RNG_GetError
 819              		.syntax unified
 820              		.thumb
 821              		.thumb_func
 823              	HAL_RNG_GetError:
 824              	.LVL61:
 825              	.LFB301:
1014:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** 
1015:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** /**
1016:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @brief  Return the RNG handle error code.
1017:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @param  hrng: pointer to a RNG_HandleTypeDef structure.
1018:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   * @retval RNG Error Code
1019:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   */
1020:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** uint32_t HAL_RNG_GetError(const RNG_HandleTypeDef *hrng)
1021:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** {
 826              		.loc 1 1021 1 is_stmt 1 view -0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		@ link register save eliminated.
1022:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   /* Return RNG Error Code */
1023:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c ****   return hrng->ErrorCode;
 831              		.loc 1 1023 3 view .LVU247
 832              		.loc 1 1023 14 is_stmt 0 view .LVU248
 833 0000 8068     		ldr	r0, [r0, #8]
 834              	.LVL62:
1024:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c **** }
ARM GAS  /tmp/ccCPCSLN.s 			page 36


 835              		.loc 1 1024 1 view .LVU249
 836 0002 7047     		bx	lr
 837              		.cfi_endproc
 838              	.LFE301:
 840              		.text
 841              	.Letext0:
 842              		.file 2 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/machine/_default_types.h"
 843              		.file 3 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/sys/_stdint.h"
 844              		.file 4 "stm/stm32l4xx/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 845              		.file 5 "stm/stm32l4xx/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 846              		.file 6 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 847              		.file 7 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rng.h"
 848              		.file 8 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccCPCSLN.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_rng.c
     /tmp/ccCPCSLN.s:21     .text.HAL_RNG_MspInit:0000000000000000 $t
     /tmp/ccCPCSLN.s:27     .text.HAL_RNG_MspInit:0000000000000000 HAL_RNG_MspInit
     /tmp/ccCPCSLN.s:42     .text.HAL_RNG_Init:0000000000000000 $t
     /tmp/ccCPCSLN.s:48     .text.HAL_RNG_Init:0000000000000000 HAL_RNG_Init
     /tmp/ccCPCSLN.s:186    .text.HAL_RNG_MspDeInit:0000000000000000 $t
     /tmp/ccCPCSLN.s:192    .text.HAL_RNG_MspDeInit:0000000000000000 HAL_RNG_MspDeInit
     /tmp/ccCPCSLN.s:207    .text.HAL_RNG_DeInit:0000000000000000 $t
     /tmp/ccCPCSLN.s:213    .text.HAL_RNG_DeInit:0000000000000000 HAL_RNG_DeInit
     /tmp/ccCPCSLN.s:272    .text.HAL_RNG_GenerateRandomNumber:0000000000000000 $t
     /tmp/ccCPCSLN.s:278    .text.HAL_RNG_GenerateRandomNumber:0000000000000000 HAL_RNG_GenerateRandomNumber
     /tmp/ccCPCSLN.s:416    .text.HAL_RNG_GenerateRandomNumber_IT:0000000000000000 $t
     /tmp/ccCPCSLN.s:422    .text.HAL_RNG_GenerateRandomNumber_IT:0000000000000000 HAL_RNG_GenerateRandomNumber_IT
     /tmp/ccCPCSLN.s:490    .text.HAL_RNG_GetRandomNumber:0000000000000000 $t
     /tmp/ccCPCSLN.s:496    .text.HAL_RNG_GetRandomNumber:0000000000000000 HAL_RNG_GetRandomNumber
     /tmp/ccCPCSLN.s:532    .text.HAL_RNG_GetRandomNumber_IT:0000000000000000 $t
     /tmp/ccCPCSLN.s:538    .text.HAL_RNG_GetRandomNumber_IT:0000000000000000 HAL_RNG_GetRandomNumber_IT
     /tmp/ccCPCSLN.s:584    .text.HAL_RNG_ReadLastRandomNumber:0000000000000000 $t
     /tmp/ccCPCSLN.s:590    .text.HAL_RNG_ReadLastRandomNumber:0000000000000000 HAL_RNG_ReadLastRandomNumber
     /tmp/ccCPCSLN.s:608    .text.HAL_RNG_ReadyDataCallback:0000000000000000 $t
     /tmp/ccCPCSLN.s:614    .text.HAL_RNG_ReadyDataCallback:0000000000000000 HAL_RNG_ReadyDataCallback
     /tmp/ccCPCSLN.s:630    .text.HAL_RNG_ErrorCallback:0000000000000000 $t
     /tmp/ccCPCSLN.s:636    .text.HAL_RNG_ErrorCallback:0000000000000000 HAL_RNG_ErrorCallback
     /tmp/ccCPCSLN.s:651    .text.HAL_RNG_IRQHandler:0000000000000000 $t
     /tmp/ccCPCSLN.s:657    .text.HAL_RNG_IRQHandler:0000000000000000 HAL_RNG_IRQHandler
     /tmp/ccCPCSLN.s:793    .text.HAL_RNG_GetState:0000000000000000 $t
     /tmp/ccCPCSLN.s:799    .text.HAL_RNG_GetState:0000000000000000 HAL_RNG_GetState
     /tmp/ccCPCSLN.s:817    .text.HAL_RNG_GetError:0000000000000000 $t
     /tmp/ccCPCSLN.s:823    .text.HAL_RNG_GetError:0000000000000000 HAL_RNG_GetError

UNDEFINED SYMBOLS
HAL_GetTick
