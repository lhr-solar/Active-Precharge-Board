ARM GAS  /tmp/ccteFmy9.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_rtc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c"
  20              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
  21              		.align	1
  22              		.weak	HAL_RTC_MspInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_RTC_MspInit:
  28              	.LVL0:
  29              	.LFB290:
   1:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
   2:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ******************************************************************************
   3:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @file    stm32l4xx_hal_rtc.c
   4:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @author  MCD Application Team
   5:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   6:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following
   7:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          functionalities of the Real-Time Clock (RTC) peripheral:
   8:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Initialization/de-initialization functions
   9:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Calendar (Time and Date) configuration
  10:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Alarms (Alarm A and Alarm B) configuration
  11:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + WakeUp Timer configuration
  12:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + TimeStamp configuration
  13:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Tampers configuration
  14:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Backup Data Registers configuration
  15:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + RTC Tamper and TimeStamp Pins Selection
  16:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Interrupts and flags management
  17:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
  18:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ******************************************************************************
  19:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @attention
  20:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
  21:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * Copyright (c) 2017 STMicroelectronics.
  22:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * All rights reserved.
  23:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
  24:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  25:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * in the root directory of this software component.
  26:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  27:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
  28:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ******************************************************************************
  29:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   @verbatim
ARM GAS  /tmp/ccteFmy9.s 			page 2


  30:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
  31:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ##### RTC Operating Condition #####
  32:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
  33:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The real-time clock (RTC) and the RTC backup registers can be powered
  34:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        from the VBAT voltage when the main VDD supply is powered off.
  35:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        To retain the content of the RTC backup registers and supply the RTC
  36:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        when VDD is turned off, VBAT pin can be connected to an optional
  37:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        standby voltage supplied by a battery or by another source.
  38:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  39:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                    ##### Backup Domain Reset #####
  40:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
  41:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The backup domain reset sets all RTC registers and the RCC_BDCR register
  42:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        to their reset values.
  43:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        A backup domain reset is generated when one of the following events occurs:
  44:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Software reset, triggered by setting the BDRST bit in the
  45:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         RCC Backup domain control register (RCC_BDCR).
  46:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) VDD or VBAT power on, if both supplies have previously been powered off.
  47:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Tamper detection event resets all data backup registers.
  48:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  49:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                    ##### Backup Domain Access #####
  50:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ==================================================================
  51:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] After reset, the backup domain (RTC registers and RTC backup data registers)
  52:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        is protected against possible unwanted write accesses.
  53:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  54:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable the Power Controller (PWR) APB1 interface clock using the
  55:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RCC_PWR_CLK_ENABLE() function.
  56:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  57:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Select the RTC clock source using the __HAL_RCC_RTC_CONFIG() function.
  58:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable RTC Clock using the __HAL_RCC_RTC_ENABLE() function.
  59:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  60:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  61:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Call the function HAL_RCCEx_PeriphCLKConfig with RCC_PERIPHCLK_RTC for
  62:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         PeriphClockSelection and select RTCClockSelection (LSE, LSI or HSEdiv32)
  63:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Enable RTC Clock using the __HAL_RCC_RTC_ENABLE() macro.
  64:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  65:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ##### How to use RTC Driver #####
  66:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===================================================================
  67:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
  68:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable the RTC domain access (see description in the section above).
  69:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
  70:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         format using the HAL_RTC_Init() function.
  71:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  72:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *** Time and Date configuration ***
  73:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ===================================
  74:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
  75:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime()
  76:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         and HAL_RTC_SetDate() functions.
  77:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions.
  78:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  79:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *** Alarm configuration ***
  80:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ===========================
  81:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
  82:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function.
  83:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             You can also configure the RTC Alarm with interrupt mode using the
  84:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             HAL_RTC_SetAlarm_IT() function.
  85:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  86:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 3


  87:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ##### RTC and low power modes #####
  88:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ==================================================================
  89:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The MCU can be woken up from a low power mode by an RTC alternate
  90:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        function.
  91:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The RTC alternate functions are the RTC alarms (Alarm A and Alarm B),
  92:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
  93:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        These RTC alternate functions can wake up the system from the Stop and
  94:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        Standby low power modes.
  95:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The system can also wake up from low power modes without depending
  96:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        on an external interrupt (Auto-wakeup mode), by using the RTC alarm
  97:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        or the RTC wakeup events.
  98:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The RTC provides a programmable time base for waking up from the
  99:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        Stop or Standby mode at regular intervals.
 100:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        Wakeup from STOP and STANDBY modes is possible only when the RTC clock source
 101:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        is LSE or LSI.
 102:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 103:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *** Callback registration ***
 104:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   =============================================
 105:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 106:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 107:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   When The compilation define USE_HAL_RTC_REGISTER_CALLBACKS is set to 0 or
 108:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   not defined, the callback registration feature is not available and all callbacks
 109:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   are set to the corresponding weak functions. This is the recommended configuration
 110:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   in order to optimize memory/code consumption footprint/performances.
 111:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 112:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 113:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   The compilation define  USE_RTC_REGISTER_CALLBACKS when set to 1
 114:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   allows the user to configure dynamically the driver callbacks.
 115:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Use Function HAL_RTC_RegisterCallback() to register an interrupt callback.
 116:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 117:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 118:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Function HAL_RTC_RegisterCallback() allows to register following callbacks:
 119:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmAEventCallback          : RTC Alarm A Event callback.
 120:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmBEventCallback          : RTC Alarm B Event callback.
 121:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) TimeStampEventCallback       : RTC TimeStamp Event callback.
 122:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) WakeUpTimerEventCallback     : RTC WakeUpTimer Event callback.
 123:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 124:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) SSRUEventCallback            : RTC SSRU Event callback.
 125:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 126:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper1EventCallback         : RTC Tamper 1 Event callback.
 127:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper2EventCallback         : RTC Tamper 2 Event callback.
 128:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper3EventCallback         : RTC Tamper 3 Event callback.
 129:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspInitCallback              : RTC MspInit callback.
 130:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspDeInitCallback            : RTC MspDeInit callback.
 131:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 132:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   and a pointer to the user callback function.
 133:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 134:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 135:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Use function HAL_RTC_UnRegisterCallback() to reset a callback to the default
 136:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   weak function.
 137:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_RTC_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 138:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   and the Callback ID.
 139:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   This function allows to reset following callbacks:
 140:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmAEventCallback          : RTC Alarm A Event callback.
 141:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmBEventCallback          : RTC Alarm B Event callback.
 142:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) TimeStampEventCallback       : RTC TimeStamp Event callback.
 143:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) WakeUpTimerEventCallback     : RTC WakeUpTimer Event callback.
ARM GAS  /tmp/ccteFmy9.s 			page 4


 144:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 145:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) SSRUEventCallback            : RTC SSRU Event callback.
 146:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 147:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper1EventCallback         : RTC Tamper 1 Event callback.
 148:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper2EventCallback         : RTC Tamper 2 Event callback.
 149:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper3EventCallback         : RTC Tamper 3 Event callback.
 150:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspInitCallback              : RTC MspInit callback.
 151:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspDeInitCallback            : RTC MspDeInit callback.
 152:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 153:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 154:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   By default, after the HAL_RTC_Init() and when the state is HAL_RTC_STATE_RESET,
 155:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   all callbacks are set to the corresponding weak functions :
 156:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   examples AlarmAEventCallback(), TimeStampEventCallback().
 157:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Exception done for MspInit and MspDeInit callbacks that are reset to the legacy weak function
 158:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   in the HAL_RTC_Init()/HAL_RTC_DeInit() only when these callbacks are null
 159:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   (not registered beforehand).
 160:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   If not, MspInit or MspDeInit are not null, HAL_RTC_Init()/HAL_RTC_DeInit()
 161:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 162:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 163:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 164:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Callbacks can be registered/unregistered in HAL_RTC_STATE_READY state only.
 165:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 166:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   in HAL_RTC_STATE_READY or HAL_RTC_STATE_RESET state,
 167:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 168:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   In that case first register the MspInit/MspDeInit user callbacks
 169:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   using HAL_RTC_RegisterCallback() before calling HAL_RTC_DeInit()
 170:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   or HAL_RTC_Init() function.
 171:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 172:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 173:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   When The compilation define USE_HAL_RTC_REGISTER_CALLBACKS is set to 0 or
 174:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   not defined, the callback registration feature is not available and all callbacks
 175:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   are set to the corresponding weak functions.
 176:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 177:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   @endverbatim
 178:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ******************************************************************************
 179:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 180:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 181:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 182:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #include "stm32l4xx_hal.h"
 183:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 184:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup STM32L4xx_HAL_Driver
 185:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 186:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 187:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 188:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 189:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC
 190:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief RTC HAL module driver
 191:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 192:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 193:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 194:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 195:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 196:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 197:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 198:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 199:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 200:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/ccteFmy9.s 			page 5


 201:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Exported functions --------------------------------------------------------*/
 202:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 203:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions
 204:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 205:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 206:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 207:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group1
 208:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions
 209:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
 210:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
 211:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 212:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 213:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 214:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the
 215:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          RTC Prescaler (Synchronous and Asynchronous), RTC Hour format, disable
 216:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          RTC registers Write protection, enter and exit the RTC initialization mode,
 217:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 218:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) The RTC Prescaler is programmed to generate the RTC 1Hz time base.
 219:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              It is split into 2 programmable prescalers to minimize power consumption.
 220:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              (++) A 7-bit asynchronous prescaler and a 15-bit synchronous prescaler.
 221:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              (++) When both prescalers are used, it is recommended to configure the
 222:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                  asynchronous prescaler to a high value to minimize power consumption.
 223:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 224:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              is enabled by writing a key into the Write Protection register, RTC_WPR.
 225:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) To configure the RTC Calendar, user application should enter
 226:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              initialization mode. In this mode, the calendar counter is stopped
 227:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              and its value can be updated. When the initialization sequence is
 228:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              complete, the calendar restarts counting after 4 RTCCLK cycles.
 229:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) To read the calendar through the shadow registers after Calendar
 230:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              initialization, calendar update or after wakeup from low power modes
 231:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              the software must first clear the RSF flag. The software must then
 232:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              wait until it is set again before reading the calendar, which means
 233:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              that the calendar registers have been correctly copied into the
 234:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              RTC_TR and RTC_DR shadow registers.The HAL_RTC_WaitForSynchro() function
 235:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              implements the above software sequence (RSF clear and RSF check).
 236:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 237:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
 238:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 239:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 240:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 241:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 242:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Initialize the RTC peripheral
 243:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 244:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 245:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 246:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 247:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 248:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 249:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 250:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 251:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (hrtc != NULL)
 252:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 253:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the parameters */
 254:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 255:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR_FORMAT(hrtc->Init.HourFormat));
 256:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 257:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SYNCH_PREDIV(hrtc->Init.SynchPrediv));
ARM GAS  /tmp/ccteFmy9.s 			page 6


 258:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT(hrtc->Init.OutPut));
 259:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_REMAP(hrtc->Init.OutPutRemap));
 260:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_POL(hrtc->Init.OutPutPolarity));
 261:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_TYPE(hrtc->Init.OutPutType));
 262:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 263:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_PULLUP(hrtc->Init.OutPutPullUp));
 264:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 265:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 266:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 267:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_BINARY_MODE(hrtc->Init.BinMode));
 268:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_BINARY_MIX_BCDU(hrtc->Init.BinMixBcdU));
 269:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 270:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 271:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 272:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (hrtc->State == HAL_RTC_STATE_RESET)
 273:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 274:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Allocate lock resource and initialize it */
 275:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Lock = HAL_UNLOCKED;
 276:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmAEventCallback          =  HAL_RTC_AlarmAEventCallback;             /* Legacy weak
 277:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmBEventCallback          =  HAL_RTCEx_AlarmBEventCallback;           /* Legacy weak
 278:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->TimeStampEventCallback       =  HAL_RTCEx_TimeStampEventCallback;        /* Legacy weak
 279:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->WakeUpTimerEventCallback     =  HAL_RTCEx_WakeUpTimerEventCallback;      /* Legacy weak
 280:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 281:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->SSRUEventCallback            =  HAL_RTCEx_SSRUEventCallback;             /* Legacy weak
 282:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 283:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 284:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER1_SUPPORT)
 285:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Tamper1EventCallback         =  HAL_RTCEx_Tamper1EventCallback;          /* Legacy weak
 286:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER1_SUPPORT */
 287:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Tamper2EventCallback         =  HAL_RTCEx_Tamper2EventCallback;          /* Legacy weak
 288:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER3_SUPPORT)
 289:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Tamper3EventCallback         =  HAL_RTCEx_Tamper3EventCallback;          /* Legacy weak
 290:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER3_SUPPORT */
 291:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 292:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (hrtc->MspInitCallback == NULL)
 293:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 294:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 295:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 296:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Init the low level hardware */
 297:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->MspInitCallback(hrtc);
 298:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 299:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (hrtc->MspDeInitCallback == NULL)
 300:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 301:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 302:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 303:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 304:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else /* #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 305:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (hrtc->State == HAL_RTC_STATE_RESET)
 306:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 307:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Allocate lock resource and initialize it */
 308:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Lock = HAL_UNLOCKED;
 309:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 310:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Initialize RTC MSP */
 311:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       HAL_RTC_MspInit(hrtc);
 312:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 313:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 314:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 7


 315:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 316:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Process TAMP ip offset from RTC one */
 317:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->TampOffset = (TAMP_BASE - RTC_BASE);
 318:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 319:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set RTC state */
 320:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_BUSY;
 321:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 322:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check whether the calendar needs to be initialized */
 323:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (__HAL_RTC_IS_CALENDAR_INITIALIZED(hrtc) == 0U)
 324:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 325:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Disable the write protection for RTC registers */
 326:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 327:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 328:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Enter Initialization mode */
 329:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = RTC_EnterInitMode(hrtc);
 330:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 331:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (status == HAL_OK)
 332:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 333:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 334:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Clear RTC_CR FMT, OSEL, POL and TAMPOE Bits */
 335:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_POL | RTC_CR_OSEL | RTC_CR_TAMPOE);
 336:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 337:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Clear RTC_CR FMT, OSEL and POL Bits */
 338:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL);
 339:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 340:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Set RTC_CR register */
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->CR |= (hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarit
 342:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 343:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Configure the RTC PRER */
 344:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->PRER = (hrtc->Init.SynchPrediv);
 345:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->PRER |= (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos);
 346:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 347:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 348:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Configure the Binary mode */
 349:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         MODIFY_REG(RTC->ICSR, RTC_ICSR_BIN | RTC_ICSR_BCDU, hrtc->Init.BinMode | hrtc->Init.BinMixB
 350:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 351:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 352:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 353:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Exit Initialization mode */
 354:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = RTC_ExitInitMode(hrtc);
 355:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 356:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (status == HAL_OK)
 357:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 358:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 359:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->CR &= ~(RTC_CR_TAMPALRM_PU | RTC_CR_TAMPALRM_TYPE | RTC_CR_OUT2EN);
 360:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->CR |= (hrtc->Init.OutPutPullUp | hrtc->Init.OutPutType | hrtc->Init.OutPutR
 361:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 362:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR &= ~(RTC_OR_ALARMOUTTYPE | RTC_OR_OUT_RMP);
 363:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 364:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 365:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 366:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 367:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Enable the write protection for RTC registers */
 368:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 369:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 370:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
 371:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
ARM GAS  /tmp/ccteFmy9.s 			page 8


 372:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* The calendar is already initialized */
 373:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = HAL_OK;
 374:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 375:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 376:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (status == HAL_OK)
 377:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 378:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_READY;
 379:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 380:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 381:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 382:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 383:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 384:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 385:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 386:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  DeInitialize the RTC peripheral.
 387:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   This function does not reset the RTC Backup Data registers.
 388:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 389:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 390:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 391:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 392:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 393:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 394:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 395:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 396:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (hrtc != NULL)
 397:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 398:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the parameters */
 399:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 400:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 401:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set RTC state */
 402:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_BUSY;
 403:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 404:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the write protection for RTC registers */
 405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 406:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 407:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Enter Initialization mode */
 408:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_EnterInitMode(hrtc);
 409:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 410:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (status == HAL_OK)
 411:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 412:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Reset all RTC CR register bits */
 413:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->TR = 0x00000000U;
 414:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->DR = ((uint32_t)(RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 415:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR &= 0x00000000U;
 416:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 417:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->WUTR = RTC_WUTR_WUT;
 418:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 419:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMAR = 0x00000000U;
 420:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBR = 0x00000000U;
 421:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->SHIFTR = 0x00000000U;
 422:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CALR = 0x00000000U;
 423:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMASSR = 0x00000000U;
 424:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBSSR = 0x00000000U;
 425:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 426:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Exit initialization mode */
 427:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = RTC_ExitInitMode(hrtc);
 428:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 9


 429:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 430:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (status == HAL_OK)
 431:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 432:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 433:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Reset TAMP registers */
 434:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         ((TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset))->CR1 = 0xFFFF0000U;
 435:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         ((TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset))->CR2 = 0x00000000U;
 436:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 437:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Reset Tamper configuration register */
 438:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->TAMPCR = 0x00000000U;
 439:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 440:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Reset Option register */
 441:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR = 0x00000000U;
 442:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 443:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 444:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 445:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 446:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 447:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 448:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         if (hrtc->MspDeInitCallback == NULL)
 449:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 450:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 451:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 452:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 453:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* DeInit the low level hardware: CLOCK, NVIC.*/
 454:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback(hrtc);
 455:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 456:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* De-Initialize RTC MSP */
 457:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         HAL_RTC_MspDeInit(hrtc);
 458:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
 459:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 460:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_RESET;
 461:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 462:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Release Lock */
 463:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 464:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 465:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 466:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 467:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 468:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 469:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 470:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 471:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 472:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 473:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Register a User RTC Callback
 474:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         To be used instead of the weak predefined callback
 475:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 476:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  CallbackID ID of the callback to be registered
 477:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         This parameter can be one of the following values:
 478:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_A_EVENT_CB_ID          Alarm A Event Callback ID
 479:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_B_EVENT_CB_ID          Alarm B Event Callback ID
 480:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TIMESTAMP_EVENT_CB_ID        TimeStamp Event Callback ID
 481:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_WAKEUPTIMER_EVENT_CB_ID      WakeUp Timer Event Callback ID
 482:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER1_EVENT_CB_ID          Tamper 1 Callback ID
 483:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER2_EVENT_CB_ID          Tamper 2 Callback ID
 484:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER3_EVENT_CB_ID          Tamper 3 Callback ID
 485:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPINIT_CB_ID                Msp Init callback ID
ARM GAS  /tmp/ccteFmy9.s 			page 10


 486:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPDEINIT_CB_ID              Msp DeInit callback ID
 487:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  pCallback pointer to the Callback function
 488:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 489:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 490:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_RegisterCallback(RTC_HandleTypeDef *hrtc, HAL_RTC_CallbackIDTypeDef Callb
 491:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 492:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 493:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 494:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (pCallback == NULL)
 495:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 496:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     return HAL_ERROR;
 497:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 498:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 499:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process locked */
 500:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 501:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 502:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (HAL_RTC_STATE_READY == hrtc->State)
 503:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 504:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 505:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 506:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_A_EVENT_CB_ID :
 507:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmAEventCallback = pCallback;
 508:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 509:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 510:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_B_EVENT_CB_ID :
 511:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmBEventCallback = pCallback;
 512:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 513:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 514:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TIMESTAMP_EVENT_CB_ID :
 515:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->TimeStampEventCallback = pCallback;
 516:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 517:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 518:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_WAKEUPTIMER_EVENT_CB_ID :
 519:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->WakeUpTimerEventCallback = pCallback;
 520:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 521:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 522:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 523:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_SSRU_EVENT_CB_ID :
 524:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->SSRUEventCallback = pCallback;
 525:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 526:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 527:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 528:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER1_SUPPORT)
 529:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER1_EVENT_CB_ID :
 530:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper1EventCallback = pCallback;
 531:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 532:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER1_SUPPORT */
 533:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 534:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER2_EVENT_CB_ID :
 535:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper2EventCallback = pCallback;
 536:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 537:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 538:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER3_SUPPORT)
 539:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER3_EVENT_CB_ID :
 540:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper3EventCallback = pCallback;
 541:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 542:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER3_SUPPORT */
ARM GAS  /tmp/ccteFmy9.s 			page 11


 543:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 544:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 545:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = pCallback;
 546:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 547:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 548:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 549:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = pCallback;
 550:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 551:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 552:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 553:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 554:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
 555:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 556:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 557:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 558:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else if (HAL_RTC_STATE_RESET == hrtc->State)
 559:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 560:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 561:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 562:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 563:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = pCallback;
 564:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 565:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 566:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 567:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = pCallback;
 568:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 569:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 570:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 571:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 572:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
 573:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 574:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 575:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 576:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
 577:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 578:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Return error status */
 579:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status =  HAL_ERROR;
 580:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 581:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 582:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Release Lock */
 583:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 584:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 585:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 586:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 587:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 588:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 589:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Unregister an RTC Callback
 590:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         RTC callback is redirected to the weak predefined callback
 591:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 592:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  CallbackID ID of the callback to be unregistered
 593:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         This parameter can be one of the following values:
 594:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_A_EVENT_CB_ID          Alarm A Event Callback ID
 595:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_B_EVENT_CB_ID          Alarm B Event Callback ID
 596:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TIMESTAMP_EVENT_CB_ID        TimeStamp Event Callback ID
 597:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 598:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_SSRU_EVENT_CB_ID             SSRU Callback ID
 599:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
ARM GAS  /tmp/ccteFmy9.s 			page 12


 600:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_WAKEUPTIMER_EVENT_CB_ID      WakeUp Timer Event Callback ID
 601:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER1_EVENT_CB_ID          Tamper 1 Callback ID
 602:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER2_EVENT_CB_ID          Tamper 2 Callback ID
 603:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER3_EVENT_CB_ID          Tamper 3 Callback ID
 604:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPINIT_CB_ID Msp Init callback ID
 605:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPDEINIT_CB_ID Msp DeInit callback ID
 606:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 607:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 608:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_UnRegisterCallback(RTC_HandleTypeDef *hrtc, HAL_RTC_CallbackIDTypeDef Cal
 609:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 610:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 611:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 612:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process locked */
 613:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 614:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 615:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (HAL_RTC_STATE_READY == hrtc->State)
 616:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 617:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 618:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 619:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_A_EVENT_CB_ID :
 620:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmAEventCallback = HAL_RTC_AlarmAEventCallback;         /* Legacy weak AlarmAEvent
 621:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 622:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 623:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_B_EVENT_CB_ID :
 624:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmBEventCallback = HAL_RTCEx_AlarmBEventCallback;          /* Legacy weak AlarmBEv
 625:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 626:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 627:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TIMESTAMP_EVENT_CB_ID :
 628:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->TimeStampEventCallback = HAL_RTCEx_TimeStampEventCallback;    /* Legacy weak TimeStam
 629:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 630:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 631:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_WAKEUPTIMER_EVENT_CB_ID :
 632:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->WakeUpTimerEventCallback = HAL_RTCEx_WakeUpTimerEventCallback; /* Legacy weak WakeUpT
 633:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 634:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 635:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 636:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_SSRU_EVENT_CB_ID :
 637:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->SSRUEventCallback = HAL_RTCEx_SSRUEventCallback;               /* Legacy weak SSRUEve
 638:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 639:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 640:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 641:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER1_SUPPORT)
 642:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER1_EVENT_CB_ID :
 643:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper1EventCallback = HAL_RTCEx_Tamper1EventCallback;         /* Legacy weak Tamper1
 644:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 645:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER1_SUPPORT */
 646:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 647:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER2_EVENT_CB_ID :
 648:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper2EventCallback = HAL_RTCEx_Tamper2EventCallback;         /* Legacy weak Tamper2
 649:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 650:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 651:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER3_SUPPORT)
 652:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER3_EVENT_CB_ID :
 653:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper3EventCallback = HAL_RTCEx_Tamper3EventCallback;         /* Legacy weak Tamper3
 654:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 655:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER3_SUPPORT */
 656:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 13


 657:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 658:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 659:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 660:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 661:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 662:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 663:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 664:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 665:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 666:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 667:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
 668:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 669:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 670:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 671:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else if (HAL_RTC_STATE_RESET == hrtc->State)
 672:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 673:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 674:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 675:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 676:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 677:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 678:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 679:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 680:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 681:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 682:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 683:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 684:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 685:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
 686:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 687:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 688:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 689:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
 690:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 691:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Return error status */
 692:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status =  HAL_ERROR;
 693:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 694:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 695:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Release Lock */
 696:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 697:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 698:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 699:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 700:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 701:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 702:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 703:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Initialize the RTC MSP.
 704:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 705:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
 706:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 707:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef *hrtc)
 708:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
  30              		.loc 1 708 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
ARM GAS  /tmp/ccteFmy9.s 			page 14


 709:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 710:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
  35              		.loc 1 710 3 view .LVU1
 711:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 712:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 713:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 714:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    */
 715:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
  36              		.loc 1 715 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE290:
  41              		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
  42              		.align	1
  43              		.weak	HAL_RTC_MspDeInit
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HAL_RTC_MspDeInit:
  49              	.LVL1:
  50              	.LFB291:
 716:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 717:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 718:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  DeInitialize the RTC MSP.
 719:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 720:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
 721:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 722:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef *hrtc)
 723:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
  51              		.loc 1 723 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
 724:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 725:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
  56              		.loc 1 725 3 view .LVU4
 726:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 727:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 728:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 729:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    */
 730:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
  57              		.loc 1 730 1 is_stmt 0 view .LVU5
  58 0000 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE291:
  62              		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
  63              		.align	1
  64              		.global	HAL_RTC_DeactivateAlarm
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	HAL_RTC_DeactivateAlarm:
  70              	.LVL2:
  71              	.LFB298:
 731:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 732:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
ARM GAS  /tmp/ccteFmy9.s 			page 15


 733:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
 734:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 735:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 736:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group2
 737:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 738:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
 739:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
 740:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 741:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
 742:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 743:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 744:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 745:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 746:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
 747:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 748:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 749:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 750:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 751:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 752:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set RTC current time.
 753:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 754:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure
 755:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, this parameter is not used and RTC_SSR will be auto
 756:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              else sTime->SubSeconds is not used and RTC_SSR will be automatically reset to the A 7-
 757:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Format of sTime->Hours, sTime->Minutes and sTime->Seconds.
 758:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, this parameter is not used
 759:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          else this parameter can be one of the following values
 760:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary format
 761:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD format
 762:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 763:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 764:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 765:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 766:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 767:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
 768:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 769:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef USE_FULL_ASSERT
 770:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters depending of the Binary mode with 32-bit free-running counter configurati
 771:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_NONE)
 772:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 773:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the parameters */
 774:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
 775:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
 776:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
 777:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 778:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 779:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 780:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
 781:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 782:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 783:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 784:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 785:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 786:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 787:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 788:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enter Initialization mode */
 789:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_EnterInitMode(hrtc);
ARM GAS  /tmp/ccteFmy9.s 			page 16


 790:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 791:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 792:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check Binary mode ((32-bit free-running counter) */
 793:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) != RTC_BINARY_ONLY)
 794:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 795:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (Format == RTC_FORMAT_BIN)
 796:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 797:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
 798:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 799:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOUR12(sTime->Hours));
 800:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 801:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 802:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         else
 803:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 804:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           sTime->TimeFormat = 0x00U;
 805:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOUR24(sTime->Hours));
 806:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 807:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_MINUTES(sTime->Minutes));
 808:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_SECONDS(sTime->Seconds));
 809:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 810:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << RTC_TR_HU_Pos) | \
 811:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                             ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 812:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                             ((uint32_t)RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos) | \
 813:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                             (((uint32_t)sTime->TimeFormat) << RTC_TR_PM_Pos));
 814:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 815:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 816:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
 817:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 818:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
 819:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 820:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sTime->Hours)));
 821:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 822:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 823:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         else
 824:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 825:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           sTime->TimeFormat = 0x00U;
 826:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 827:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 828:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 829:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 830:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         tmpreg = (((uint32_t)(sTime->Hours) << RTC_TR_HU_Pos) | \
 831:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 832:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos) | \
 833:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)(sTime->TimeFormat) << RTC_TR_PM_Pos));
 834:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 835:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 836:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Set the RTC_TR register */
 837:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->TR, (tmpreg & RTC_TR_RESERVED_MASK));
 838:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 839:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* This interface is deprecated. To manage Daylight Saving Time, please use HAL_RTC_DST_xxx f
 840:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       CLEAR_BIT(RTC->CR, RTC_CR_BKP);
 841:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 842:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* This interface is deprecated. To manage Daylight Saving Time, please use HAL_RTC_DST_xxx f
 843:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       SET_BIT(RTC->CR, (sTime->DayLightSaving | sTime->StoreOperation));
 844:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 845:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 846:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 17


 847:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Exit Initialization mode */
 848:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_ExitInitMode(hrtc);
 849:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 850:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 851:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 852:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 853:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 854:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 855:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 856:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 857:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 858:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 859:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
 860:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 861:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 862:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 863:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 864:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 865:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 866:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get RTC current time.
 867:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You can use SubSeconds and SecondFraction (sTime structure fields returned) to convert S
 868:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        value in second fraction ratio with time unit following generic formula:
 869:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Second fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1)] * ti
 870:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        This conversion can be performed only if no shift operation is pending (ie. SHFP=0) when
 871:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values
 872:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
 873:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
 874:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        to ensure consistency between the time and date values.
 875:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 876:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sTime
 877:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, sTime->SubSeconds only is updated
 878:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          else
 879:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             Pointer to Time structure with Hours, Minutes and Seconds fields returned
 880:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** *               with input format (BIN or BCD), also SubSeconds field returning the
 881:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** *               RTC_SSR register content and SecondFraction field the Synchronous pre-scaler
 882:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** *               factor to be used for second fraction ratio computation.
 883:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Format of sTime->Hours, sTime->Minutes and sTime->Seconds.
 884:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, this parameter is not used
 885:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          else this parameter can be one of the following values:
 886:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary format
 887:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD format
 888:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 889:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 890:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 891:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 892:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 893:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 894:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
 895:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get subseconds structure field from the corresponding register*/
 896:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->SubSeconds = READ_REG(RTC->SSR);
 897:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 898:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) != RTC_BINARY_ONLY)
 899:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 900:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the parameters */
 901:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
 902:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 903:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Get SecondFraction structure field from the corresponding register field*/
ARM GAS  /tmp/ccteFmy9.s 			page 18


 904:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->SecondFraction = (uint32_t)(READ_REG(RTC->PRER) & RTC_PRER_PREDIV_S);
 905:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 906:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Get the TR register */
 907:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (uint32_t)(READ_REG(RTC->TR) & RTC_TR_RESERVED_MASK);
 908:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 909:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Fill the structure fields with the read parameters */
 910:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> RTC_TR_HU_Pos);
 911:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
 912:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)((tmpreg & (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos);
 913:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> RTC_TR_PM_Pos);
 914:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 915:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the input parameters format */
 916:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Format == RTC_FORMAT_BIN)
 917:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 918:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Convert the time structure parameters to Binary format */
 919:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
 920:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 921:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
 922:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 923:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 924:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 925:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 926:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 927:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 928:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 929:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set RTC current date.
 930:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 931:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sDate Pointer to date structure
 932:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Format of sDate->Year, sDate->Month and sDate->Weekday.
 933:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 934:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary format
 935:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD format
 936:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 937:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 938:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 939:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 940:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
 941:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
 942:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 943:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
 944:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 945:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 946:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
 947:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 948:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 949:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 950:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 951:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 952:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 953:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 954:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 955:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 956:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));
 957:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 958:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
 959:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 960:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
ARM GAS  /tmp/ccteFmy9.s 			page 19


 961:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 962:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date));
 963:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 964:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << RTC_DR_YU_Pos) | \
 965:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 966:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Date) << RTC_DR_DU_Pos) | \
 967:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)sDate->WeekDay << RTC_DR_WDU_Pos));
 968:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 969:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
 970:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 971:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 972:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
 973:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));
 974:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 975:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     datetmpreg = ((((uint32_t)sDate->Year) << RTC_DR_YU_Pos) | \
 976:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 977:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Date) << RTC_DR_DU_Pos) | \
 978:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << RTC_DR_WDU_Pos));
 979:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 980:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 981:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 982:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 983:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 984:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enter Initialization mode */
 985:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_EnterInitMode(hrtc);
 986:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 987:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 988:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the RTC_DR register */
 989:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->DR, (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK));
 990:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 991:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Exit Initialization mode */
 992:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_ExitInitMode(hrtc);
 993:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 994:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 995:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 996:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 997:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 998:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 999:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1000:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY ;
1001:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1002:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1003:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1004:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1005:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1006:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
1007:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1008:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1009:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1010:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get RTC current date.
1011:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values
1012:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
1013:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
1014:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1015:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sDate Pointer to Date structure
1016:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Format of sDate->Year, sDate->Month and sDate->Weekday.
1017:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccteFmy9.s 			page 20


1018:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary format
1019:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD format
1020:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1021:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1022:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
1023:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1024:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
1025:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1026:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
1027:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1028:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1029:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1030:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the DR register */
1031:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   datetmpreg = (uint32_t)(READ_REG(RTC->DR) & RTC_DR_RESERVED_MASK);
1032:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1033:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
1034:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Year = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> RTC_DR_YU_Pos);
1035:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
1036:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Date = (uint8_t)((datetmpreg & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos);
1037:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> RTC_DR_WDU_Pos);
1038:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1039:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the input parameters format */
1040:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1041:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1042:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Convert the date structure parameters to Binary format */
1043:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
1044:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
1045:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
1046:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1047:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1048:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1049:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1050:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1051:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
1052:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1053:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1054:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group3
1055:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
1056:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
1057:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
1058:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1059:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
1060:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1061:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1062:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
1063:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1064:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
1065:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
1066:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1067:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1068:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm.
1069:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1070:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
1071:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, 3 fields only are used
1072:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->AlarmTime.SubSeconds
1073:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->AlarmSubSecondMask
1074:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->BinaryAutoClr
ARM GAS  /tmp/ccteFmy9.s 			page 21


1075:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format of the entered parameters.
1076:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, this parameter is not used
1077:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          else this parameter can be one of the following values
1078:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary format
1079:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD format
1080:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1081:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1082:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
1083:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1084:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg = 0, binaryMode;
1085:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1086:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1087:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1088:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1089:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1090:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters depending of the Binary mode (32-bit free-running counter configuration).
1091:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_NONE)
1092:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1093:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
1094:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1095:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1096:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1097:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1098:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1099:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1100:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_ONLY)
1101:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1102:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_BINARY_MASK(sAlarm->AlarmSubSecondMask));
1103:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARMSUBSECONDBIN_AUTOCLR(sAlarm->BinaryAutoClr));
1104:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1105:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else /* RTC_BINARY_MIX */
1106:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1107:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
1108:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1109:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1110:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1111:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In Binary Mix Mode, the RTC can not generate an alarm on a match involving all calendar item
1112:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param((sAlarm->AlarmSubSecondMask >> RTC_ALRMASSR_MASKSS_Pos) <= (8U + (READ_BIT(RTC->IC
1113:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1114:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1115:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1116:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get Binary mode (32-bit free-running counter configuration) */
1117:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   binaryMode = READ_BIT(RTC->ICSR, RTC_ICSR_BIN);
1118:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1119:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (binaryMode != RTC_BINARY_ONLY)
1120:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1121:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Format == RTC_FORMAT_BIN)
1122:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1123:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
1124:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1125:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
1126:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1127:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1128:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1129:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1130:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sAlarm->AlarmTime.TimeFormat = 0x00U;
1131:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
ARM GAS  /tmp/ccteFmy9.s 			page 22


1132:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1133:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1134:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1135:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1136:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1137:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1138:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1139:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1140:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1141:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1142:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1143:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1144:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1145:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1146:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1147:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1148:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1149:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1150:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmMask));
1151:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1152:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else /* format BCD */
1153:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1154:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
1155:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1156:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1157:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1158:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1159:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1160:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1161:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sAlarm->AlarmTime.TimeFormat = 0x00U;
1162:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1163:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1164:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1165:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1166:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1167:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1168:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1169:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1170:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1171:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1172:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1173:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1174:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1175:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1176:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1177:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1178:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_FULL_ASSERT */
1179:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1180:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1181:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1182:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1183:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1184:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1185:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmMask));
1186:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1187:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1188:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 23


1189:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1190:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1191:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1192:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm register */
1193:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (sAlarm->Alarm == RTC_ALARM_A)
1194:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1195:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1196:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1197:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->CR, (RTC_CR_ALRAE | RTC_CR_ALRAIE));
1198:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1199:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
1200:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->SCR, RTC_SCR_CALRAF);
1201:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1202:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (binaryMode == RTC_BINARY_ONLY)
1203:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1204:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMASSR, sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr);
1205:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1206:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1207:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1208:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMAR, tmpreg);
1209:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMASSR, sAlarm->AlarmSubSecondMask);
1210:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1211:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1212:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->ALRABINR, sAlarm->AlarmTime.SubSeconds);
1213:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1214:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1215:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(RTC->CR, RTC_CR_ALRAE);
1216:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1217:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1218:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1219:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1220:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1221:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->CR, (RTC_CR_ALRBE | RTC_CR_ALRBIE));
1222:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1223:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
1224:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->SCR, RTC_SCR_CALRBF);
1225:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1226:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (binaryMode == RTC_BINARY_ONLY)
1227:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1228:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBSSR, sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr);
1229:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1230:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1231:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1232:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBR, tmpreg);
1233:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBSSR,  sAlarm->AlarmSubSecondMask);
1234:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1235:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1236:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->ALRBBINR, sAlarm->AlarmTime.SubSeconds);
1237:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1238:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1239:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(RTC->CR, RTC_CR_ALRBE);
1240:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1241:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1242:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1243:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1244:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1245:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Change RTC state */
ARM GAS  /tmp/ccteFmy9.s 			page 24


1246:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1247:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1248:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1249:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1250:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1251:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1252:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1253:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1254:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1255:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm with Interrupt.
1256:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1257:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
1258:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, 3 fields only are used
1259:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->AlarmTime.SubSeconds
1260:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->AlarmSubSecondMask
1261:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->BinaryAutoClr
1262:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1263:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, this parameter is not used
1264:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          else this parameter can be one of the following values
1265:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary format
1266:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD format
1267:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1268:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1269:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
1270:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1271:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg = 0, binaryMode;
1272:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1273:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1274:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1275:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1276:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1277:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1278:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters depending of the Binary mode (32-bit free-running counter configuration).
1279:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_NONE)
1280:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1281:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
1282:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1283:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1284:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1285:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1286:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1287:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1288:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_ONLY)
1289:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1290:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_BINARY_MASK(sAlarm->AlarmSubSecondMask));
1291:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARMSUBSECONDBIN_AUTOCLR(sAlarm->BinaryAutoClr));
1292:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1293:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else /* RTC_BINARY_MIX */
1294:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1295:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
1296:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1297:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1298:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1299:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In Binary Mix Mode, the RTC can not generate an alarm on a match involving all calendar item
1300:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param((sAlarm->AlarmSubSecondMask >> RTC_ALRMASSR_MASKSS_Pos) <= (8U + (READ_BIT(RTC->IC
1301:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1302:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
ARM GAS  /tmp/ccteFmy9.s 			page 25


1303:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1304:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get Binary mode (32-bit free-running counter configuration) */
1305:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   binaryMode = READ_BIT(RTC->ICSR, RTC_ICSR_BIN);
1306:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1307:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (binaryMode != RTC_BINARY_ONLY)
1308:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1309:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Format == RTC_FORMAT_BIN)
1310:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1311:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
1312:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1313:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
1314:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1315:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1316:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1317:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1318:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sAlarm->AlarmTime.TimeFormat = 0x00U;
1319:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1320:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1321:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1322:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1323:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1324:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1325:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1326:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1327:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1328:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1329:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1330:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1331:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1332:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1333:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1334:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1335:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1336:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1337:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1338:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmMask));
1339:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1340:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else /* Format BCD */
1341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1342:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
1343:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1344:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1345:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1346:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1347:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1348:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1349:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sAlarm->AlarmTime.TimeFormat = 0x00U;
1350:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1351:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1352:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1353:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1354:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1355:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1356:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1357:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1358:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1359:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
ARM GAS  /tmp/ccteFmy9.s 			page 26


1360:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1361:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1362:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1363:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1364:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1365:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1366:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_FULL_ASSERT */
1367:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1368:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1369:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1370:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1371:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1372:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1373:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmMask));
1374:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1375:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1376:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1377:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1378:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1379:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1380:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1381:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm register */
1382:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (sAlarm->Alarm == RTC_ALARM_A)
1383:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1384:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1385:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->CR, RTC_CR_ALRAE | RTC_CR_ALRAIE);
1386:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
1387:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->SCR, RTC_SCR_CALRAF);
1388:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1389:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (binaryMode == RTC_BINARY_ONLY)
1390:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1391:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       RTC->ALRMASSR = sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr;
1392:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1393:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1394:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1395:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMAR, tmpreg);
1396:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMASSR, sAlarm->AlarmSubSecondMask);
1397:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1398:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1399:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->ALRABINR, sAlarm->AlarmTime.SubSeconds);
1400:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1401:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1402:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(RTC->CR, RTC_CR_ALRAE | RTC_CR_ALRAIE);
1403:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1404:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1406:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1407:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->CR, RTC_CR_ALRBE | RTC_CR_ALRBIE);
1408:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
1409:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->SCR, RTC_SCR_CALRBF);
1410:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1411:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (binaryMode == RTC_BINARY_ONLY)
1412:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1413:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBSSR, sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr);
1414:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1415:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1416:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
ARM GAS  /tmp/ccteFmy9.s 			page 27


1417:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBR, tmpreg);
1418:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBSSR, sAlarm->AlarmSubSecondMask);
1419:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1420:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1421:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->ALRBBINR, sAlarm->AlarmTime.SubSeconds);
1422:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1423:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1424:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(RTC->CR, RTC_CR_ALRBE | RTC_CR_ALRBIE);
1425:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1426:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1427:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* RTC Alarm Interrupt Configuration: EXTI configuration */
1428:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_IT();
1429:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
1430:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1431:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1432:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1433:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1434:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1435:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1436:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1437:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1438:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1439:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1440:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1441:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1442:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
1443:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1444:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1445:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set RTC current time.
1446:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1447:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure
1448:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1449:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1450:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
1451:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
1452:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1453:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1454:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
1455:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1456:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
1457:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
1458:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1459:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1460:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1461:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
1462:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
1463:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1464:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1465:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1466:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1467:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1468:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1469:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1470:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1471:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1472:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enter Initialization mode */
1473:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_EnterInitMode(hrtc);
ARM GAS  /tmp/ccteFmy9.s 			page 28


1474:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
1475:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1476:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Format == RTC_FORMAT_BIN)
1477:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1478:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1479:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1480:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(sTime->Hours));
1481:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
1482:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1483:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1484:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1485:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sTime->TimeFormat = 0x00U;
1486:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(sTime->Hours));
1487:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1488:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(sTime->Minutes));
1489:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(sTime->Seconds));
1490:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1491:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << RTC_TR_HU_Pos) | \
1492:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
1493:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos) | \
1494:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           (((uint32_t)sTime->TimeFormat) << RTC_TR_PM_Pos));
1495:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1496:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1497:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1498:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1499:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1500:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sTime->Hours)));
1501:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
1502:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1503:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1504:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1505:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sTime->TimeFormat = 0x00U;
1506:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
1507:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1508:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
1509:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
1510:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)(sTime->Hours) << RTC_TR_HU_Pos) | \
1511:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
1512:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos) | \
1513:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->TimeFormat) << RTC_TR_PM_Pos));
1514:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1515:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1516:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the RTC_TR register */
1517:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
1518:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1519:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear the bits to be configured */
1520:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BKP);
1521:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1522:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the RTC_CR register */
1523:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
1524:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1525:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Exit Initialization mode */
1526:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_ExitInitMode(hrtc);
1527:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1528:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1529:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1530:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
ARM GAS  /tmp/ccteFmy9.s 			page 29


1531:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1532:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
1533:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1534:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
1535:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1536:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1537:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1538:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1539:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1540:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
1541:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1542:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1543:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1544:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get RTC current time.
1545:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You can use SubSeconds and SecondFraction (sTime structure fields returned) to convert S
1546:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        value in second fraction ratio with time unit following generic formula:
1547:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Second fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1)] * ti
1548:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        This conversion can be performed only if no shift operation is pending (ie. SHFP=0) when
1549:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values
1550:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
1551:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
1552:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        to ensure consistency between the time and date values.
1553:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1554:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure with Hours, Minutes and Seconds fields returned
1555:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *                with input format (BIN or BCD), also SubSeconds field returning the
1556:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *                RTC_SSR register content and SecondFraction field the Synchronous pre-scaler
1557:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *                factor to be used for second fraction ratio computation.
1558:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1559:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1560:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
1561:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
1562:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1563:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1564:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
1565:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1566:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
1567:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1568:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1569:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1570:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1571:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get subseconds structure field from the corresponding register*/
1572:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
1573:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1574:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get SecondFraction structure field from the corresponding register field*/
1575:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
1576:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1577:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the TR register */
1578:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   tmpreg = (uint32_t)(hrtc->Instance->TR & RTC_TR_RESERVED_MASK);
1579:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1580:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
1581:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> RTC_TR_HU_Pos);
1582:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
1583:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)((tmpreg & (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos);
1584:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> RTC_TR_PM_Pos);
1585:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1586:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the input parameters format */
1587:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
ARM GAS  /tmp/ccteFmy9.s 			page 30


1588:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1589:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Convert the time structure parameters to Binary format */
1590:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
1591:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
1592:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
1593:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1594:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1595:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1596:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1597:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1598:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1599:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set RTC current date.
1600:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1601:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sDate Pointer to date structure
1602:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format specifies the format of the entered parameters.
1603:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1604:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
1605:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
1606:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1607:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1608:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
1609:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1610:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
1611:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
1612:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1613:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1614:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1615:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1616:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1617:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1618:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1619:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1620:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1621:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
1622:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1623:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
1624:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1625:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1626:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));
1627:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1628:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1629:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1630:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
1631:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
1632:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date));
1633:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1634:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << RTC_DR_YU_Pos) | \
1635:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
1636:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Date) << RTC_DR_DU_Pos) | \
1637:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)sDate->WeekDay << RTC_DR_WDU_Pos));
1638:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1639:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1640:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1641:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
1642:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
1643:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));
1644:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 31


1645:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     datetmpreg = ((((uint32_t)sDate->Year) << RTC_DR_YU_Pos) | \
1646:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
1647:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Date) << RTC_DR_DU_Pos) | \
1648:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << RTC_DR_WDU_Pos));
1649:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1650:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1651:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1652:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1653:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1654:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enter Initialization mode */
1655:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_EnterInitMode(hrtc);
1656:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
1657:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1658:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the RTC_DR register */
1659:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
1660:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1661:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Exit Initialization mode */
1662:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_ExitInitMode(hrtc);
1663:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1664:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1665:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1666:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1667:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1668:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
1669:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1670:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY ;
1671:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1672:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1673:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1674:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1675:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1676:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
1677:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1678:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1679:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1680:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get RTC current date.
1681:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values
1682:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
1683:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
1684:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1685:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sDate Pointer to Date structure
1686:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1687:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1688:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN:  Binary data format
1689:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD:  BCD data format
1690:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1691:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1692:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
1693:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1694:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
1695:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1696:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1697:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1698:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1699:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the DR register */
1700:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   datetmpreg = (uint32_t)(hrtc->Instance->DR & RTC_DR_RESERVED_MASK);
1701:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 32


1702:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
1703:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Year = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> RTC_DR_YU_Pos);
1704:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
1705:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Date = (uint8_t)((datetmpreg & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos);
1706:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> RTC_DR_WDU_Pos);
1707:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1708:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the input parameters format */
1709:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1710:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1711:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Convert the date structure parameters to Binary format */
1712:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
1713:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
1714:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
1715:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1716:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1717:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1718:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1719:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1720:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
1721:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1722:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1723:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group3
1724:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
1725:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
1726:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
1727:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1728:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
1729:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1730:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1731:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
1732:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1733:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
1734:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
1735:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1736:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1737:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm.
1738:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1739:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
1740:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1741:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1742:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
1743:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1744:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1745:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1746:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
1747:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1748:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
1749:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1750:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1751:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1752:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1753:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1754:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1755:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1756:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1757:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1758:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
ARM GAS  /tmp/ccteFmy9.s 			page 33


1759:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1760:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1761:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1762:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1763:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1764:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1765:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1766:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1767:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
1768:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1769:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1770:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1771:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1772:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1773:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1774:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1775:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1776:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1777:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1778:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1779:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1780:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1781:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1782:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1783:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1784:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1785:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1786:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1787:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1788:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1789:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1790:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1791:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1792:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
1793:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1794:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1795:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1796:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1797:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1798:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1799:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1800:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1801:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1802:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1803:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1804:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1805:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1806:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1807:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1808:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1809:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1810:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1811:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1812:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1813:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1814:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1815:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
ARM GAS  /tmp/ccteFmy9.s 			page 34


1816:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1817:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1818:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1819:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1820:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_FULL_ASSERT */
1821:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1822:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1823:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1824:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1825:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1826:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1827:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
1828:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1829:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1830:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
1831:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
1832:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1833:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1834:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1835:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1836:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm register */
1837:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (sAlarm->Alarm == RTC_ALARM_A)
1838:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1839:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1840:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
1841:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
1842:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1843:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1844:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
1845:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1846:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRAWF)
1847:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
1848:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
1849:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == 0U)
1850:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1851:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
1852:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1853:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1854:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1855:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1856:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1857:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1858:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
1859:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1860:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1861:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
1862:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1863:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1864:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1865:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1866:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
1867:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
1868:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
1869:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1870:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
1871:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1872:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
ARM GAS  /tmp/ccteFmy9.s 			page 35


1873:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1874:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1875:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
1876:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
1877:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
1878:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1879:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRB);
1880:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1881:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRBWF)
1882:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
1883:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
1884:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == 0U)
1885:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1886:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
1887:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1888:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1889:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1890:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1891:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1892:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1893:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
1894:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1895:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1896:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
1897:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1898:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1899:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1900:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1901:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
1902:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
1903:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
1904:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1905:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
1906:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1907:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1908:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1909:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1910:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1911:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Change RTC state */
1912:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1913:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1914:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1915:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1916:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1917:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1918:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1919:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1920:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1921:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm with Interrupt.
1922:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
1923:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         is disabled (Use the HAL_RTC_DeactivateAlarm()).
1924:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.
1925:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1926:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
1927:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1928:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1929:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
ARM GAS  /tmp/ccteFmy9.s 			page 36


1930:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1931:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1932:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1933:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
1934:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1935:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
1936:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1937:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1938:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1939:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1940:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1941:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1942:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1943:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1944:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1945:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1946:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1947:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1948:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1949:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1950:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1951:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1952:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1953:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1954:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
1955:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1956:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1957:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1958:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1959:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1960:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1961:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1962:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1963:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1964:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1965:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1966:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1967:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1968:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1969:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1970:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1971:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1972:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1973:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1974:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1975:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1976:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1977:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1978:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1979:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1980:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
1981:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1982:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1983:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1984:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1985:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1986:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
ARM GAS  /tmp/ccteFmy9.s 			page 37


1987:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1988:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1989:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1990:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1991:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1992:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1993:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1994:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1995:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1996:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1997:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1998:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1999:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
2000:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2001:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
2002:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2003:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
2004:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2005:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
2006:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2007:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2008:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_FULL_ASSERT */
2009:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
2010:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
2011:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
2012:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
2013:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
2014:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
2015:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
2016:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2017:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
2018:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
2019:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2020:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
2021:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
2022:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2023:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm register */
2024:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (sAlarm->Alarm == RTC_ALARM_A)
2025:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2026:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
2027:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
2028:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2029:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
2030:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
2031:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2032:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRAWF)
2033:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
2034:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
2035:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == 0U)
2036:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2037:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
2038:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2039:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
2040:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2041:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2042:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
2043:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 38


2044:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
2045:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
2046:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2047:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
2048:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2049:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2050:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2051:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2052:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
2053:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
2054:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
2055:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
2056:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
2057:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
2058:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRA);
2059:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2060:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
2061:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2062:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
2063:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
2064:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2065:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
2066:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
2067:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2068:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRBWF)
2069:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
2070:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
2071:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == 0U)
2072:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2073:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
2074:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2075:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
2076:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2077:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2078:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
2079:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2080:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
2081:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
2082:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2083:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
2084:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2085:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2086:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2087:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2088:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
2089:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
2090:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
2091:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
2092:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
2093:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
2094:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRB);
2095:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2096:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2097:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* RTC Alarm Interrupt Configuration: EXTI configuration */
2098:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_IT();
2099:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
2100:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 39


2101:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
2102:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2103:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2104:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
2105:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2106:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
2107:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
2108:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2109:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
2110:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
2111:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2112:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
2113:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2114:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2115:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Deactivate the specified RTC Alarm.
2116:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2117:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Alarm Specifies the Alarm.
2118:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
2119:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_ALARM_A:  AlarmA
2120:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_ALARM_B:  AlarmB
2121:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2122:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2123:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
2124:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
  72              		.loc 1 2124 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		.loc 1 2124 1 is_stmt 0 view .LVU7
  77 0000 38B5     		push	{r3, r4, r5, lr}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 16
  80              		.cfi_offset 3, -16
  81              		.cfi_offset 4, -12
  82              		.cfi_offset 5, -8
  83              		.cfi_offset 14, -4
2125:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
2126:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
  84              		.loc 1 2126 3 is_stmt 1 view .LVU8
2127:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2128:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
2129:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
  85              		.loc 1 2129 3 view .LVU9
  86              		.loc 1 2129 3 view .LVU10
  87 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
  88 0006 012B     		cmp	r3, #1
  89 0008 5DD0     		beq	.L11
  90 000a 0446     		mov	r4, r0
  91              		.loc 1 2129 3 discriminator 2 view .LVU11
  92 000c 0123     		movs	r3, #1
  93 000e 80F82030 		strb	r3, [r0, #32]
  94              		.loc 1 2129 3 discriminator 2 view .LVU12
2130:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2131:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  95              		.loc 1 2131 3 discriminator 2 view .LVU13
  96              		.loc 1 2131 15 is_stmt 0 discriminator 2 view .LVU14
  97 0012 0223     		movs	r3, #2
ARM GAS  /tmp/ccteFmy9.s 			page 40


  98 0014 80F82130 		strb	r3, [r0, #33]
2132:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2133:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
2134:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  99              		.loc 1 2134 3 is_stmt 1 discriminator 2 view .LVU15
 100              		.loc 1 2134 3 discriminator 2 view .LVU16
 101 0018 0368     		ldr	r3, [r0]
 102 001a CA22     		movs	r2, #202
 103 001c 5A62     		str	r2, [r3, #36]
 104              		.loc 1 2134 3 discriminator 2 view .LVU17
 105 001e 0368     		ldr	r3, [r0]
 106 0020 5322     		movs	r2, #83
 107 0022 5A62     		str	r2, [r3, #36]
 108              		.loc 1 2134 3 discriminator 2 view .LVU18
2135:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2136:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Alarm == RTC_ALARM_A)
 109              		.loc 1 2136 3 discriminator 2 view .LVU19
 110              		.loc 1 2136 6 is_stmt 0 discriminator 2 view .LVU20
 111 0024 B1F5807F 		cmp	r1, #256
 112 0028 21D0     		beq	.L13
 113              	.LBB2:
2137:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2138:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* AlarmA */
2139:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_ALRMASSR_SSCLR)
2140:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->ALRMASSR, RTC_ALRMASSR_SSCLR);
2141:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2142:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2143:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
2144:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2145:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
2146:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
2147:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2148:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRAWF)
2149:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
2150:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
2151:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == 0U)
2152:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2153:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
2154:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2155:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
2156:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2157:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2158:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
2159:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2160:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
2161:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
2162:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2163:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
2164:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2165:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2166:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2167:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2168:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
2169:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2170:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* AlarmB */
2171:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_ALRMBSSR_SSCLR)
2172:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->ALRMBSSR, RTC_ALRMASSR_SSCLR);
ARM GAS  /tmp/ccteFmy9.s 			page 41


2173:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2174:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2175:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 114              		.loc 1 2175 5 is_stmt 1 view .LVU21
 115 002a 0268     		ldr	r2, [r0]
 116 002c 9368     		ldr	r3, [r2, #8]
 117 002e 23F40073 		bic	r3, r3, #512
 118 0032 9360     		str	r3, [r2, #8]
2176:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2177:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
2178:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRB);
 119              		.loc 1 2178 5 view .LVU22
 120 0034 0268     		ldr	r2, [r0]
 121 0036 9368     		ldr	r3, [r2, #8]
 122 0038 23F40053 		bic	r3, r3, #8192
 123 003c 9360     		str	r3, [r2, #8]
2179:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2180:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRBWF)
2181:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
 124              		.loc 1 2181 5 view .LVU23
 125              		.loc 1 2181 26 is_stmt 0 view .LVU24
 126 003e FFF7FEFF 		bl	HAL_GetTick
 127              	.LVL3:
 128              		.loc 1 2181 26 view .LVU25
 129 0042 0546     		mov	r5, r0
 130              	.LVL4:
2182:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
2183:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == 0U)
 131              		.loc 1 2183 5 is_stmt 1 view .LVU26
 132              	.L9:
 133              		.loc 1 2183 60 view .LVU27
 134              		.loc 1 2183 12 is_stmt 0 view .LVU28
 135 0044 2368     		ldr	r3, [r4]
 136 0046 DB68     		ldr	r3, [r3, #12]
 137              		.loc 1 2183 60 view .LVU29
 138 0048 13F0020F 		tst	r3, #2
 139 004c 31D1     		bne	.L8
2184:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2185:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 140              		.loc 1 2185 7 is_stmt 1 view .LVU30
 141              		.loc 1 2185 12 is_stmt 0 view .LVU31
 142 004e FFF7FEFF 		bl	HAL_GetTick
 143              	.LVL5:
 144              		.loc 1 2185 26 view .LVU32
 145 0052 431B     		subs	r3, r0, r5
 146              		.loc 1 2185 10 view .LVU33
 147 0054 B3F57A7F 		cmp	r3, #1000
 148 0058 F4D9     		bls	.L9
2186:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2187:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
2188:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 149              		.loc 1 2188 9 is_stmt 1 view .LVU34
 150              		.loc 1 2188 9 view .LVU35
 151 005a 2368     		ldr	r3, [r4]
 152 005c FF22     		movs	r2, #255
 153 005e 5A62     		str	r2, [r3, #36]
 154              		.loc 1 2188 9 view .LVU36
ARM GAS  /tmp/ccteFmy9.s 			page 42


2189:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2190:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 155              		.loc 1 2190 9 view .LVU37
 156              		.loc 1 2190 21 is_stmt 0 view .LVU38
 157 0060 0320     		movs	r0, #3
 158 0062 84F82100 		strb	r0, [r4, #33]
2191:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2192:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
2193:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 159              		.loc 1 2193 9 is_stmt 1 view .LVU39
 160              		.loc 1 2193 9 view .LVU40
 161 0066 0023     		movs	r3, #0
 162 0068 84F82030 		strb	r3, [r4, #32]
 163              		.loc 1 2193 9 view .LVU41
2194:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2195:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 164              		.loc 1 2195 9 view .LVU42
 165              		.loc 1 2195 16 is_stmt 0 view .LVU43
 166 006c 2AE0     		b	.L4
 167              	.LVL6:
 168              	.L13:
 169              		.loc 1 2195 16 view .LVU44
 170              	.LBE2:
 171              	.LBB3:
2143:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 172              		.loc 1 2143 5 is_stmt 1 view .LVU45
 173 006e 0268     		ldr	r2, [r0]
 174 0070 9368     		ldr	r3, [r2, #8]
 175 0072 23F48073 		bic	r3, r3, #256
 176 0076 9360     		str	r3, [r2, #8]
2146:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 177              		.loc 1 2146 5 view .LVU46
 178 0078 0268     		ldr	r2, [r0]
 179 007a 9368     		ldr	r3, [r2, #8]
 180 007c 23F48053 		bic	r3, r3, #4096
 181 0080 9360     		str	r3, [r2, #8]
2149:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
 182              		.loc 1 2149 5 view .LVU47
2149:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
 183              		.loc 1 2149 26 is_stmt 0 view .LVU48
 184 0082 FFF7FEFF 		bl	HAL_GetTick
 185              	.LVL7:
2149:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
 186              		.loc 1 2149 26 view .LVU49
 187 0086 0546     		mov	r5, r0
 188              	.LVL8:
2151:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 189              		.loc 1 2151 5 is_stmt 1 view .LVU50
 190              	.L6:
2151:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 191              		.loc 1 2151 60 view .LVU51
2151:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 192              		.loc 1 2151 12 is_stmt 0 view .LVU52
 193 0088 2368     		ldr	r3, [r4]
 194 008a DB68     		ldr	r3, [r3, #12]
2151:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 195              		.loc 1 2151 60 view .LVU53
ARM GAS  /tmp/ccteFmy9.s 			page 43


 196 008c 13F0010F 		tst	r3, #1
 197 0090 0FD1     		bne	.L8
2153:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 198              		.loc 1 2153 7 is_stmt 1 view .LVU54
2153:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 199              		.loc 1 2153 12 is_stmt 0 view .LVU55
 200 0092 FFF7FEFF 		bl	HAL_GetTick
 201              	.LVL9:
2153:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 202              		.loc 1 2153 27 view .LVU56
 203 0096 401B     		subs	r0, r0, r5
2153:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 204              		.loc 1 2153 10 view .LVU57
 205 0098 B0F57A7F 		cmp	r0, #1000
 206 009c F4D9     		bls	.L6
2156:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 207              		.loc 1 2156 9 is_stmt 1 view .LVU58
2156:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 208              		.loc 1 2156 9 view .LVU59
 209 009e 2368     		ldr	r3, [r4]
 210 00a0 FF22     		movs	r2, #255
 211 00a2 5A62     		str	r2, [r3, #36]
2156:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 212              		.loc 1 2156 9 view .LVU60
2158:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 213              		.loc 1 2158 9 view .LVU61
2158:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 214              		.loc 1 2158 21 is_stmt 0 view .LVU62
 215 00a4 0320     		movs	r0, #3
 216 00a6 84F82100 		strb	r0, [r4, #33]
2161:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 217              		.loc 1 2161 9 is_stmt 1 view .LVU63
2161:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 218              		.loc 1 2161 9 view .LVU64
 219 00aa 0023     		movs	r3, #0
 220 00ac 84F82030 		strb	r3, [r4, #32]
2161:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 221              		.loc 1 2161 9 view .LVU65
2163:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 222              		.loc 1 2163 9 view .LVU66
2163:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 223              		.loc 1 2163 16 is_stmt 0 view .LVU67
 224 00b0 08E0     		b	.L4
 225              	.LVL10:
 226              	.L8:
2163:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 227              		.loc 1 2163 16 view .LVU68
 228              	.LBE3:
2196:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2197:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2198:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2199:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2200:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
2201:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 229              		.loc 1 2201 3 is_stmt 1 view .LVU69
 230              		.loc 1 2201 3 view .LVU70
 231 00b2 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccteFmy9.s 			page 44


 232 00b4 FF22     		movs	r2, #255
 233 00b6 5A62     		str	r2, [r3, #36]
 234              		.loc 1 2201 3 view .LVU71
2202:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2203:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 235              		.loc 1 2203 3 view .LVU72
 236              		.loc 1 2203 15 is_stmt 0 view .LVU73
 237 00b8 0123     		movs	r3, #1
 238 00ba 84F82130 		strb	r3, [r4, #33]
2204:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2205:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
2206:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 239              		.loc 1 2206 3 is_stmt 1 view .LVU74
 240              		.loc 1 2206 3 view .LVU75
 241 00be 0020     		movs	r0, #0
 242 00c0 84F82000 		strb	r0, [r4, #32]
 243              		.loc 1 2206 3 view .LVU76
2207:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2208:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 244              		.loc 1 2208 3 view .LVU77
 245              	.LVL11:
 246              	.L4:
2209:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 247              		.loc 1 2209 1 is_stmt 0 view .LVU78
 248 00c4 38BD     		pop	{r3, r4, r5, pc}
 249              	.LVL12:
 250              	.L11:
2129:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 251              		.loc 1 2129 3 view .LVU79
 252 00c6 0220     		movs	r0, #2
 253              	.LVL13:
2129:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 254              		.loc 1 2129 3 view .LVU80
 255 00c8 FCE7     		b	.L4
 256              		.cfi_endproc
 257              	.LFE298:
 259              		.section	.text.HAL_RTC_DST_Add1Hour,"ax",%progbits
 260              		.align	1
 261              		.global	HAL_RTC_DST_Add1Hour
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 266              	HAL_RTC_DST_Add1Hour:
 267              	.LVL14:
 268              	.LFB300:
2210:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2211:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2212:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
2213:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2214:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Date structure
2215:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Alarm Specifies the Alarm.
2216:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
2217:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: AlarmA
2218:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_ALARM_B: AlarmB
2219:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
2220:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
2221:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
ARM GAS  /tmp/ccteFmy9.s 			page 45


2222:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
2223:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2224:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2225:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
2226:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
2227:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
2228:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2229:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
2230:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
2231:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
2232:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2233:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Alarm == RTC_ALARM_A)
2234:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2235:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* AlarmA */
2236:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_A;
2237:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2238:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMAR);
2239:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR) & RTC_ALRMASSR_SS);
2240:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2241:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Fill the structure with the read parameters */
2242:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = (uint8_t)((tmpreg & (RTC_ALRMAR_HT | RTC_ALRMAR_HU)) >> RTC_ALRMAR_HU
2243:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> RTC_ALRMA
2244:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU)) >> RTC_ALRMAR_
2245:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMAR_PM) >> RTC_ALRMAR_PM_Pos);
2246:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
2247:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> RTC_ALRMAR_D
2248:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
2249:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
2250:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2251:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
2252:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2253:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_B;
2254:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2255:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMBR);
2256:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
2257:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2258:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Fill the structure with the read parameters */
2259:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = (uint8_t)((tmpreg & (RTC_ALRMBR_HT | RTC_ALRMBR_HU)) >> RTC_ALRMBR_HU
2260:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU)) >> RTC_ALRMB
2261:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMBR_ST | RTC_ALRMBR_SU)) >> RTC_ALRMBR_
2262:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMBR_PM) >> RTC_ALRMBR_PM_Pos);
2263:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
2264:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMBR_DT | RTC_ALRMBR_DU)) >> RTC_ALRMBR_D
2265:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMBR_WDSEL);
2266:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
2267:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2268:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2269:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
2270:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2271:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
2272:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
2273:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
2274:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
2275:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2276:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2277:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
2278:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
ARM GAS  /tmp/ccteFmy9.s 			page 46


2279:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2280:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2281:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2282:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Daylight Saving Time, Add one hour to the calendar in one single operation
2283:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         without going through the initialization procedure.
2284:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2285:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2286:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2287:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** void HAL_RTC_DST_Add1Hour(RTC_HandleTypeDef *hrtc)
2288:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 269              		.loc 1 2288 1 is_stmt 1 view -0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
2289:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 274              		.loc 1 2289 3 view .LVU82
 275              		.loc 1 2289 3 view .LVU83
 276 0000 0368     		ldr	r3, [r0]
 277 0002 CA22     		movs	r2, #202
 278 0004 5A62     		str	r2, [r3, #36]
 279              		.loc 1 2289 3 view .LVU84
 280 0006 0368     		ldr	r3, [r0]
 281 0008 5322     		movs	r2, #83
 282 000a 5A62     		str	r2, [r3, #36]
 283              		.loc 1 2289 3 view .LVU85
2290:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   SET_BIT(hrtc->Instance->CR, RTC_CR_ADD1H);
 284              		.loc 1 2290 3 view .LVU86
 285 000c 0268     		ldr	r2, [r0]
 286 000e 9368     		ldr	r3, [r2, #8]
 287 0010 43F48033 		orr	r3, r3, #65536
 288 0014 9360     		str	r3, [r2, #8]
2291:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 289              		.loc 1 2291 3 view .LVU87
 290              		.loc 1 2291 3 view .LVU88
 291 0016 0368     		ldr	r3, [r0]
 292 0018 FF22     		movs	r2, #255
 293 001a 5A62     		str	r2, [r3, #36]
 294              		.loc 1 2291 3 view .LVU89
2292:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 295              		.loc 1 2292 1 is_stmt 0 view .LVU90
 296 001c 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE300:
 300              		.section	.text.HAL_RTC_DST_Sub1Hour,"ax",%progbits
 301              		.align	1
 302              		.global	HAL_RTC_DST_Sub1Hour
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	HAL_RTC_DST_Sub1Hour:
 308              	.LVL15:
 309              	.LFB301:
2293:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2294:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2295:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Daylight Saving Time, Subtract one hour from the calendar in one
2296:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         single operation without going through the initialization procedure.
ARM GAS  /tmp/ccteFmy9.s 			page 47


2297:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2298:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2299:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2300:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** void HAL_RTC_DST_Sub1Hour(RTC_HandleTypeDef *hrtc)
2301:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 310              		.loc 1 2301 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
2302:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 315              		.loc 1 2302 3 view .LVU92
 316              		.loc 1 2302 3 view .LVU93
 317 0000 0368     		ldr	r3, [r0]
 318 0002 CA22     		movs	r2, #202
 319 0004 5A62     		str	r2, [r3, #36]
 320              		.loc 1 2302 3 view .LVU94
 321 0006 0368     		ldr	r3, [r0]
 322 0008 5322     		movs	r2, #83
 323 000a 5A62     		str	r2, [r3, #36]
 324              		.loc 1 2302 3 view .LVU95
2303:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   SET_BIT(hrtc->Instance->CR, RTC_CR_SUB1H);
 325              		.loc 1 2303 3 view .LVU96
 326 000c 0268     		ldr	r2, [r0]
 327 000e 9368     		ldr	r3, [r2, #8]
 328 0010 43F40033 		orr	r3, r3, #131072
 329 0014 9360     		str	r3, [r2, #8]
2304:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 330              		.loc 1 2304 3 view .LVU97
 331              		.loc 1 2304 3 view .LVU98
 332 0016 0368     		ldr	r3, [r0]
 333 0018 FF22     		movs	r2, #255
 334 001a 5A62     		str	r2, [r3, #36]
 335              		.loc 1 2304 3 view .LVU99
2305:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 336              		.loc 1 2305 1 is_stmt 0 view .LVU100
 337 001c 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE301:
 341              		.section	.text.HAL_RTC_DST_SetStoreOperation,"ax",%progbits
 342              		.align	1
 343              		.global	HAL_RTC_DST_SetStoreOperation
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 348              	HAL_RTC_DST_SetStoreOperation:
 349              	.LVL16:
 350              	.LFB302:
2306:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2307:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2308:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Daylight Saving Time, Set the store operation bit.
2309:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   It can be used by the software in order to memorize the DST status.
2310:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2311:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2312:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2313:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** void HAL_RTC_DST_SetStoreOperation(RTC_HandleTypeDef *hrtc)
2314:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
ARM GAS  /tmp/ccteFmy9.s 			page 48


 351              		.loc 1 2314 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
2315:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 356              		.loc 1 2315 3 view .LVU102
 357              		.loc 1 2315 3 view .LVU103
 358 0000 0368     		ldr	r3, [r0]
 359 0002 CA22     		movs	r2, #202
 360 0004 5A62     		str	r2, [r3, #36]
 361              		.loc 1 2315 3 view .LVU104
 362 0006 0368     		ldr	r3, [r0]
 363 0008 5322     		movs	r2, #83
 364 000a 5A62     		str	r2, [r3, #36]
 365              		.loc 1 2315 3 view .LVU105
2316:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   SET_BIT(hrtc->Instance->CR, RTC_CR_BKP);
 366              		.loc 1 2316 3 view .LVU106
 367 000c 0268     		ldr	r2, [r0]
 368 000e 9368     		ldr	r3, [r2, #8]
 369 0010 43F48023 		orr	r3, r3, #262144
 370 0014 9360     		str	r3, [r2, #8]
2317:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 371              		.loc 1 2317 3 view .LVU107
 372              		.loc 1 2317 3 view .LVU108
 373 0016 0368     		ldr	r3, [r0]
 374 0018 FF22     		movs	r2, #255
 375 001a 5A62     		str	r2, [r3, #36]
 376              		.loc 1 2317 3 view .LVU109
2318:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 377              		.loc 1 2318 1 is_stmt 0 view .LVU110
 378 001c 7047     		bx	lr
 379              		.cfi_endproc
 380              	.LFE302:
 382              		.section	.text.HAL_RTC_DST_ClearStoreOperation,"ax",%progbits
 383              		.align	1
 384              		.global	HAL_RTC_DST_ClearStoreOperation
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 389              	HAL_RTC_DST_ClearStoreOperation:
 390              	.LVL17:
 391              	.LFB303:
2319:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2320:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2321:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Daylight Saving Time, Clear the store operation bit.
2322:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2323:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2324:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2325:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** void HAL_RTC_DST_ClearStoreOperation(RTC_HandleTypeDef *hrtc)
2326:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 392              		.loc 1 2326 1 is_stmt 1 view -0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		@ link register save eliminated.
2327:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
ARM GAS  /tmp/ccteFmy9.s 			page 49


 397              		.loc 1 2327 3 view .LVU112
 398              		.loc 1 2327 3 view .LVU113
 399 0000 0368     		ldr	r3, [r0]
 400 0002 CA22     		movs	r2, #202
 401 0004 5A62     		str	r2, [r3, #36]
 402              		.loc 1 2327 3 view .LVU114
 403 0006 0368     		ldr	r3, [r0]
 404 0008 5322     		movs	r2, #83
 405 000a 5A62     		str	r2, [r3, #36]
 406              		.loc 1 2327 3 view .LVU115
2328:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   CLEAR_BIT(hrtc->Instance->CR, RTC_CR_BKP);
 407              		.loc 1 2328 3 view .LVU116
 408 000c 0268     		ldr	r2, [r0]
 409 000e 9368     		ldr	r3, [r2, #8]
 410 0010 23F48023 		bic	r3, r3, #262144
 411 0014 9360     		str	r3, [r2, #8]
2329:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 412              		.loc 1 2329 3 view .LVU117
 413              		.loc 1 2329 3 view .LVU118
 414 0016 0368     		ldr	r3, [r0]
 415 0018 FF22     		movs	r2, #255
 416 001a 5A62     		str	r2, [r3, #36]
 417              		.loc 1 2329 3 view .LVU119
2330:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 418              		.loc 1 2330 1 is_stmt 0 view .LVU120
 419 001c 7047     		bx	lr
 420              		.cfi_endproc
 421              	.LFE303:
 423              		.section	.text.HAL_RTC_DST_ReadStoreOperation,"ax",%progbits
 424              		.align	1
 425              		.global	HAL_RTC_DST_ReadStoreOperation
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 430              	HAL_RTC_DST_ReadStoreOperation:
 431              	.LVL18:
 432              	.LFB304:
2331:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2332:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2333:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Daylight Saving Time, Read the store operation bit.
2334:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2335:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval operation see RTC_StoreOperation_Definitions
2336:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2337:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** uint32_t HAL_RTC_DST_ReadStoreOperation(RTC_HandleTypeDef *hrtc)
2338:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 433              		.loc 1 2338 1 is_stmt 1 view -0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437              		@ link register save eliminated.
2339:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return READ_BIT(hrtc->Instance->CR, RTC_CR_BKP);
 438              		.loc 1 2339 3 view .LVU122
 439              		.loc 1 2339 10 is_stmt 0 view .LVU123
 440 0000 0368     		ldr	r3, [r0]
 441 0002 9868     		ldr	r0, [r3, #8]
 442              	.LVL19:
2340:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
ARM GAS  /tmp/ccteFmy9.s 			page 50


 443              		.loc 1 2340 1 view .LVU124
 444 0004 00F48020 		and	r0, r0, #262144
 445 0008 7047     		bx	lr
 446              		.cfi_endproc
 447              	.LFE304:
 449              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 450              		.align	1
 451              		.weak	HAL_RTC_AlarmAEventCallback
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 456              	HAL_RTC_AlarmAEventCallback:
 457              	.LVL20:
 458              	.LFB306:
2341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2342:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2343:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Handle Alarm interrupt request.
2344:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2345:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2346:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2347:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef *hrtc)
2348:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
2349:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
2350:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
2351:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2352:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2353:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get interrupt status */
2354:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmp = hrtc->Instance->MISR;
2355:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2356:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((tmp & RTC_MISR_ALRAMF) != 0u)
2357:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2358:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear the AlarmA interrupt pending bit */
2359:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->SCR = RTC_SCR_CALRAF;
2360:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2361:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2362:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Call Compare Match registered Callback */
2363:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->AlarmAEventCallback(hrtc);
2364:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
2365:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     HAL_RTC_AlarmAEventCallback(hrtc);
2366:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
2367:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2368:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2369:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((tmp & RTC_MISR_ALRBMF) != 0u)
2370:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2371:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear the AlarmB interrupt pending bit */
2372:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->SCR = RTC_SCR_CALRBF;
2373:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2374:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2375:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Call Compare Match registered Callback */
2376:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->AlarmBEventCallback(hrtc);
2377:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2378:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     HAL_RTCEx_AlarmBEventCallback(hrtc);
2379:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2380:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2381:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2382:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
2383:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 51


2384:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
2385:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA) != 0U)
2386:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2387:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Get the pending status of the AlarmA Interrupt */
2388:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != 0U)
2389:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2390:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Clear the AlarmA interrupt pending bit */
2391:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
2392:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2393:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2394:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmAEventCallback(hrtc);
2395:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2396:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
2397:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2398:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2399:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2400:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2401:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the AlarmB interrupt source enable status */
2402:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRB) != 0U)
2403:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2404:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Get the pending status of the AlarmB Interrupt */
2405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) != 0U)
2406:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2407:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Clear the AlarmB interrupt pending bit */
2408:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
2409:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2410:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2411:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmBEventCallback(hrtc);
2412:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2413:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       HAL_RTCEx_AlarmBEventCallback(hrtc);
2414:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2415:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2416:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2417:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
2418:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2419:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Change RTC state */
2420:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
2421:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
2422:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2423:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2424:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Alarm A callback.
2425:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2426:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2427:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2428:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
2429:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 459              		.loc 1 2429 1 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              		@ link register save eliminated.
2430:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
2431:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
 464              		.loc 1 2431 3 view .LVU126
2432:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2433:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2434:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
ARM GAS  /tmp/ccteFmy9.s 			page 52


2435:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    */
2436:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 465              		.loc 1 2436 1 is_stmt 0 view .LVU127
 466 0000 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE306:
 470              		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 471              		.align	1
 472              		.global	HAL_RTC_AlarmIRQHandler
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 477              	HAL_RTC_AlarmIRQHandler:
 478              	.LVL21:
 479              	.LFB305:
2348:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
 480              		.loc 1 2348 1 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
2348:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
 484              		.loc 1 2348 1 is_stmt 0 view .LVU129
 485 0000 10B5     		push	{r4, lr}
 486              	.LCFI1:
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 4, -8
 489              		.cfi_offset 14, -4
 490 0002 0446     		mov	r4, r0
2350:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 491              		.loc 1 2350 3 is_stmt 1 view .LVU130
 492 0004 154B     		ldr	r3, .L26
 493 0006 4FF48022 		mov	r2, #262144
 494 000a 5A61     		str	r2, [r3, #20]
2385:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 495              		.loc 1 2385 3 view .LVU131
2385:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 496              		.loc 1 2385 7 is_stmt 0 view .LVU132
 497 000c 0368     		ldr	r3, [r0]
 498 000e 9A68     		ldr	r2, [r3, #8]
2385:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 499              		.loc 1 2385 6 view .LVU133
 500 0010 12F4805F 		tst	r2, #4096
 501 0014 03D0     		beq	.L21
2388:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 502              		.loc 1 2388 5 is_stmt 1 view .LVU134
2388:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 503              		.loc 1 2388 9 is_stmt 0 view .LVU135
 504 0016 DA68     		ldr	r2, [r3, #12]
2388:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 505              		.loc 1 2388 8 view .LVU136
 506 0018 12F4807F 		tst	r2, #256
 507 001c 0CD1     		bne	.L24
 508              	.LVL22:
 509              	.L21:
2402:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 510              		.loc 1 2402 3 is_stmt 1 view .LVU137
2402:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
ARM GAS  /tmp/ccteFmy9.s 			page 53


 511              		.loc 1 2402 7 is_stmt 0 view .LVU138
 512 001e 2368     		ldr	r3, [r4]
 513 0020 9A68     		ldr	r2, [r3, #8]
2402:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 514              		.loc 1 2402 6 view .LVU139
 515 0022 12F4005F 		tst	r2, #8192
 516 0026 03D0     		beq	.L22
2405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 517              		.loc 1 2405 5 is_stmt 1 view .LVU140
2405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 518              		.loc 1 2405 9 is_stmt 0 view .LVU141
 519 0028 DA68     		ldr	r2, [r3, #12]
2405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 520              		.loc 1 2405 8 view .LVU142
 521 002a 12F4007F 		tst	r2, #512
 522 002e 0BD1     		bne	.L25
 523              	.L22:
2420:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 524              		.loc 1 2420 3 is_stmt 1 view .LVU143
2420:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 525              		.loc 1 2420 15 is_stmt 0 view .LVU144
 526 0030 0123     		movs	r3, #1
 527 0032 84F82130 		strb	r3, [r4, #33]
2421:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 528              		.loc 1 2421 1 view .LVU145
 529 0036 10BD     		pop	{r4, pc}
 530              	.LVL23:
 531              	.L24:
2391:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 532              		.loc 1 2391 7 is_stmt 1 view .LVU146
 533 0038 DA68     		ldr	r2, [r3, #12]
 534 003a D2B2     		uxtb	r2, r2
 535 003c 62F4C072 		orn	r2, r2, #384
 536 0040 DA60     		str	r2, [r3, #12]
2396:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 537              		.loc 1 2396 7 view .LVU147
 538 0042 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
 539              	.LVL24:
2396:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 540              		.loc 1 2396 7 is_stmt 0 view .LVU148
 541 0046 EAE7     		b	.L21
 542              	.L25:
2408:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 543              		.loc 1 2408 7 is_stmt 1 view .LVU149
 544 0048 DA68     		ldr	r2, [r3, #12]
 545 004a D2B2     		uxtb	r2, r2
 546 004c 62F42072 		orn	r2, r2, #640
 547 0050 DA60     		str	r2, [r3, #12]
2413:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 548              		.loc 1 2413 7 view .LVU150
 549 0052 2046     		mov	r0, r4
 550 0054 FFF7FEFF 		bl	HAL_RTCEx_AlarmBEventCallback
 551              	.LVL25:
 552 0058 EAE7     		b	.L22
 553              	.L27:
 554 005a 00BF     		.align	2
 555              	.L26:
ARM GAS  /tmp/ccteFmy9.s 			page 54


 556 005c 00040140 		.word	1073808384
 557              		.cfi_endproc
 558              	.LFE305:
 560              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 561              		.align	1
 562              		.global	HAL_RTC_PollForAlarmAEvent
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 567              	HAL_RTC_PollForAlarmAEvent:
 568              	.LVL26:
 569              	.LFB307:
2437:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2438:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2439:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Handle AlarmA Polling request.
2440:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2441:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Timeout Timeout duration
2442:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2443:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2444:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
2445:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 570              		.loc 1 2445 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		.loc 1 2445 1 is_stmt 0 view .LVU152
 575 0000 70B5     		push	{r4, r5, r6, lr}
 576              	.LCFI2:
 577              		.cfi_def_cfa_offset 16
 578              		.cfi_offset 4, -16
 579              		.cfi_offset 5, -12
 580              		.cfi_offset 6, -8
 581              		.cfi_offset 14, -4
 582 0002 0446     		mov	r4, r0
 583 0004 0D46     		mov	r5, r1
2446:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2447:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();
 584              		.loc 1 2447 3 is_stmt 1 view .LVU153
 585              		.loc 1 2447 24 is_stmt 0 view .LVU154
 586 0006 FFF7FEFF 		bl	HAL_GetTick
 587              	.LVL27:
 588              		.loc 1 2447 24 view .LVU155
 589 000a 0646     		mov	r6, r0
 590              	.LVL28:
2448:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2449:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == 0U)
 591              		.loc 1 2449 3 is_stmt 1 view .LVU156
 592              	.L30:
 593              		.loc 1 2449 57 view .LVU157
 594              		.loc 1 2449 10 is_stmt 0 view .LVU158
 595 000c 2368     		ldr	r3, [r4]
 596 000e DA68     		ldr	r2, [r3, #12]
 597              		.loc 1 2449 57 view .LVU159
 598 0010 12F4807F 		tst	r2, #256
 599 0014 0DD1     		bne	.L35
2450:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2451:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Timeout != HAL_MAX_DELAY)
ARM GAS  /tmp/ccteFmy9.s 			page 55


 600              		.loc 1 2451 5 is_stmt 1 view .LVU160
 601              		.loc 1 2451 8 is_stmt 0 view .LVU161
 602 0016 B5F1FF3F 		cmp	r5, #-1
 603 001a F7D0     		beq	.L30
2452:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2453:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 604              		.loc 1 2453 7 is_stmt 1 view .LVU162
 605              		.loc 1 2453 13 is_stmt 0 view .LVU163
 606 001c FFF7FEFF 		bl	HAL_GetTick
 607              	.LVL29:
 608              		.loc 1 2453 27 view .LVU164
 609 0020 801B     		subs	r0, r0, r6
 610              		.loc 1 2453 10 view .LVU165
 611 0022 A842     		cmp	r0, r5
 612 0024 01D8     		bhi	.L31
 613              		.loc 1 2453 51 discriminator 1 view .LVU166
 614 0026 002D     		cmp	r5, #0
 615 0028 F0D1     		bne	.L30
 616              	.L31:
2454:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2455:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 617              		.loc 1 2455 9 is_stmt 1 view .LVU167
 618              		.loc 1 2455 21 is_stmt 0 view .LVU168
 619 002a 0320     		movs	r0, #3
 620 002c 84F82100 		strb	r0, [r4, #33]
2456:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 621              		.loc 1 2456 9 is_stmt 1 view .LVU169
 622              		.loc 1 2456 16 is_stmt 0 view .LVU170
 623 0030 08E0     		b	.L32
 624              	.L35:
2457:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2458:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2459:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2460:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2461:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
2462:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 625              		.loc 1 2462 3 is_stmt 1 view .LVU171
 626 0032 DA68     		ldr	r2, [r3, #12]
 627 0034 D2B2     		uxtb	r2, r2
 628 0036 62F4C072 		orn	r2, r2, #384
 629 003a DA60     		str	r2, [r3, #12]
2463:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2464:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Change RTC state */
2465:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 630              		.loc 1 2465 3 view .LVU172
 631              		.loc 1 2465 15 is_stmt 0 view .LVU173
 632 003c 0123     		movs	r3, #1
 633 003e 84F82130 		strb	r3, [r4, #33]
2466:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2467:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 634              		.loc 1 2467 3 is_stmt 1 view .LVU174
 635              		.loc 1 2467 10 is_stmt 0 view .LVU175
 636 0042 0020     		movs	r0, #0
 637              	.L32:
2468:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 638              		.loc 1 2468 1 view .LVU176
 639 0044 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccteFmy9.s 			page 56


 640              		.loc 1 2468 1 view .LVU177
 641              		.cfi_endproc
 642              	.LFE307:
 644              		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 645              		.align	1
 646              		.global	HAL_RTC_WaitForSynchro
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 651              	HAL_RTC_WaitForSynchro:
 652              	.LVL30:
 653              	.LFB308:
2469:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2470:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2471:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
2472:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2473:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2474:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group4
2475:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   Peripheral Control functions
2476:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
2477:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
2478:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
2479:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
2480:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
2481:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     [..]
2482:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     This subsection provides functions allowing to
2483:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
2484:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2485:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
2486:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
2487:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2488:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2489:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2490:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Wait until the RTC Time and Date registers (RTC_TR and RTC_DR) are
2491:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         synchronized with RTC APB clock.
2492:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the
2493:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
2494:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar
2495:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes
2496:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         the software must first clear the RSF flag.
2497:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         The software must then wait until it is set again before reading
2498:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         the calendar, which means that the calendar registers have been
2499:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.
2500:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2501:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2502:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2503:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef *hrtc)
2504:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 654              		.loc 1 2504 1 is_stmt 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		.loc 1 2504 1 is_stmt 0 view .LVU179
 659 0000 38B5     		push	{r3, r4, r5, lr}
 660              	.LCFI3:
 661              		.cfi_def_cfa_offset 16
 662              		.cfi_offset 3, -16
ARM GAS  /tmp/ccteFmy9.s 			page 57


 663              		.cfi_offset 4, -12
 664              		.cfi_offset 5, -8
 665              		.cfi_offset 14, -4
 666 0002 0446     		mov	r4, r0
2505:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tickstart;
 667              		.loc 1 2505 3 is_stmt 1 view .LVU180
2506:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2507:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
2508:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear RSF flag, keep reserved bits at reset values (setting other flags has no effect) */
2509:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->Instance->ICSR = ((uint32_t)(RTC_RSF_MASK & RTC_ICSR_RESERVED_MASK));
2510:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #elif defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2511:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear RSF flag (use a read-modify-write sequence to preserve the other read-write bits) */
2512:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->Instance->ICSR &= (uint32_t)RTC_RSF_MASK;
2513:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2514:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear RSF flag, keep reserved bits at reset values (setting other flags has no effect) */
2515:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->Instance->ISR = ((uint32_t)(RTC_RSF_MASK & RTC_ISR_RESERVED_MASK));
 668              		.loc 1 2515 3 view .LVU181
 669              		.loc 1 2515 7 is_stmt 0 view .LVU182
 670 0004 0368     		ldr	r3, [r0]
 671              		.loc 1 2515 23 view .LVU183
 672 0006 0A4A     		ldr	r2, .L43
 673 0008 DA60     		str	r2, [r3, #12]
2516:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2517:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2518:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 674              		.loc 1 2518 3 is_stmt 1 view .LVU184
 675              		.loc 1 2518 15 is_stmt 0 view .LVU185
 676 000a FFF7FEFF 		bl	HAL_GetTick
 677              	.LVL31:
 678              		.loc 1 2518 15 view .LVU186
 679 000e 0546     		mov	r5, r0
 680              	.LVL32:
2519:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2520:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
2521:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2522:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while ((hrtc->Instance->ICSR & RTC_ICSR_RSF) == 0U)
2523:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2524:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while ((hrtc->Instance->ISR & RTC_ISR_RSF) == 0U)
 681              		.loc 1 2524 3 is_stmt 1 view .LVU187
 682              	.L37:
 683              		.loc 1 2524 46 view .LVU188
 684              		.loc 1 2524 15 is_stmt 0 view .LVU189
 685 0010 2368     		ldr	r3, [r4]
 686              		.loc 1 2524 25 view .LVU190
 687 0012 DB68     		ldr	r3, [r3, #12]
 688              		.loc 1 2524 46 view .LVU191
 689 0014 13F0200F 		tst	r3, #32
 690 0018 07D1     		bne	.L42
2525:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2526:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2527:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 691              		.loc 1 2527 5 is_stmt 1 view .LVU192
 692              		.loc 1 2527 10 is_stmt 0 view .LVU193
 693 001a FFF7FEFF 		bl	HAL_GetTick
 694              	.LVL33:
 695              		.loc 1 2527 24 view .LVU194
 696 001e 401B     		subs	r0, r0, r5
ARM GAS  /tmp/ccteFmy9.s 			page 58


 697              		.loc 1 2527 8 view .LVU195
 698 0020 B0F57A7F 		cmp	r0, #1000
 699 0024 F4D9     		bls	.L37
2528:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2529:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       return HAL_TIMEOUT;
 700              		.loc 1 2529 14 view .LVU196
 701 0026 0320     		movs	r0, #3
 702 0028 00E0     		b	.L38
 703              	.L42:
2530:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2531:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2532:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2533:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 704              		.loc 1 2533 10 view .LVU197
 705 002a 0020     		movs	r0, #0
 706              	.L38:
2534:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 707              		.loc 1 2534 1 view .LVU198
 708 002c 38BD     		pop	{r3, r4, r5, pc}
 709              	.LVL34:
 710              	.L44:
 711              		.loc 1 2534 1 view .LVU199
 712 002e 00BF     		.align	2
 713              	.L43:
 714 0030 5FFF0300 		.word	261983
 715              		.cfi_endproc
 716              	.LFE308:
 718              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 719              		.align	1
 720              		.global	HAL_RTC_GetState
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	HAL_RTC_GetState:
 726              	.LVL35:
 727              	.LFB309:
2535:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2536:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2537:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
2538:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2539:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2540:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group5
2541:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   Peripheral State functions
2542:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
2543:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
2544:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
2545:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                      ##### Peripheral State functions #####
2546:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
2547:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     [..]
2548:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     This subsection provides functions allowing to
2549:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       (+) Get RTC state
2550:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2551:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
2552:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
2553:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2554:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2555:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Return the RTC handle state.
ARM GAS  /tmp/ccteFmy9.s 			page 59


2556:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2557:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL state
2558:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2559:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef *hrtc)
2560:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 728              		.loc 1 2560 1 is_stmt 1 view -0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
2561:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Return RTC handle state */
2562:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return hrtc->State;
 733              		.loc 1 2562 3 view .LVU201
 734              		.loc 1 2562 14 is_stmt 0 view .LVU202
 735 0000 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 736              	.LVL36:
2563:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 737              		.loc 1 2563 1 view .LVU203
 738 0004 7047     		bx	lr
 739              		.cfi_endproc
 740              	.LFE309:
 742              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 743              		.align	1
 744              		.global	RTC_EnterInitMode
 745              		.syntax unified
 746              		.thumb
 747              		.thumb_func
 749              	RTC_EnterInitMode:
 750              	.LVL37:
 751              	.LFB310:
2564:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2565:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2566:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
2567:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2568:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2569:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2570:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
2571:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2572:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2573:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Private_Functions
2574:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
2575:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2576:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2577:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Enter the RTC Initialization mode.
2578:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
2579:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
2580:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2581:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2582:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2583:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef *hrtc)
2584:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 752              		.loc 1 2584 1 is_stmt 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		.loc 1 2584 1 is_stmt 0 view .LVU205
 757 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccteFmy9.s 			page 60


 758              	.LCFI4:
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 4, -16
 761              		.cfi_offset 5, -12
 762              		.cfi_offset 6, -8
 763              		.cfi_offset 14, -4
2585:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tickstart;
 764              		.loc 1 2585 3 is_stmt 1 view .LVU206
2586:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 765              		.loc 1 2586 3 view .LVU207
 766              	.LVL38:
2587:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2588:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check if the Initialization mode is set */
2589:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2590:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((hrtc->Instance->ICSR & RTC_ICSR_INITF) == 0U)
2591:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2592:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the Initialization mode */
2593:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(hrtc->Instance->ICSR, RTC_ICSR_INIT);
2594:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2595:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tickstart = HAL_GetTick();
2596:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
2597:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while ((READ_BIT(hrtc->Instance->ICSR, RTC_ICSR_INITF) == 0U) && (status != HAL_TIMEOUT))
2598:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2599:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
2600:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2601:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status = HAL_TIMEOUT;
2602:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
2603:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2604:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2605:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2606:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
2607:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((hrtc->Instance->ISR & RTC_ISR_INITF) == 0U)
 767              		.loc 1 2607 3 view .LVU208
 768              		.loc 1 2607 12 is_stmt 0 view .LVU209
 769 0002 0368     		ldr	r3, [r0]
 770              		.loc 1 2607 22 view .LVU210
 771 0004 DA68     		ldr	r2, [r3, #12]
 772              		.loc 1 2607 6 view .LVU211
 773 0006 12F0400F 		tst	r2, #64
 774 000a 02D0     		beq	.L53
2586:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 775              		.loc 1 2586 21 view .LVU212
 776 000c 0025     		movs	r5, #0
 777              	.LVL39:
 778              	.L47:
2608:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2609:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the Initialization mode */
2610:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
2611:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2612:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tickstart = HAL_GetTick();
2613:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
2614:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while ((READ_BIT(hrtc->Instance->ISR, RTC_ISR_INITF) == 0U) && (status != HAL_TIMEOUT))
2615:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2616:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
2617:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2618:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status = HAL_TIMEOUT;
2619:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
ARM GAS  /tmp/ccteFmy9.s 			page 61


2620:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2621:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2622:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2623:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
2624:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2625:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 779              		.loc 1 2625 3 is_stmt 1 view .LVU213
2626:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 780              		.loc 1 2626 1 is_stmt 0 view .LVU214
 781 000e 2846     		mov	r0, r5
 782 0010 70BD     		pop	{r4, r5, r6, pc}
 783              	.LVL40:
 784              	.L53:
 785              		.loc 1 2626 1 view .LVU215
 786 0012 0446     		mov	r4, r0
2610:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 787              		.loc 1 2610 5 is_stmt 1 view .LVU216
2610:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 788              		.loc 1 2610 25 is_stmt 0 view .LVU217
 789 0014 4FF0FF32 		mov	r2, #-1
 790 0018 DA60     		str	r2, [r3, #12]
2612:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 791              		.loc 1 2612 5 is_stmt 1 view .LVU218
2612:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 792              		.loc 1 2612 17 is_stmt 0 view .LVU219
 793 001a FFF7FEFF 		bl	HAL_GetTick
 794              	.LVL41:
2612:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 795              		.loc 1 2612 17 view .LVU220
 796 001e 0646     		mov	r6, r0
 797              	.LVL42:
2614:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 798              		.loc 1 2614 5 is_stmt 1 view .LVU221
2586:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 799              		.loc 1 2586 21 is_stmt 0 view .LVU222
 800 0020 0025     		movs	r5, #0
 801              	.LVL43:
 802              	.L49:
2614:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 803              		.loc 1 2614 65 is_stmt 1 view .LVU223
2614:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 804              		.loc 1 2614 13 is_stmt 0 view .LVU224
 805 0022 2368     		ldr	r3, [r4]
 806 0024 DB68     		ldr	r3, [r3, #12]
2614:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 807              		.loc 1 2614 65 view .LVU225
 808 0026 13F0400F 		tst	r3, #64
 809 002a F0D1     		bne	.L47
2614:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 810              		.loc 1 2614 65 discriminator 1 view .LVU226
 811 002c 032D     		cmp	r5, #3
 812 002e EED0     		beq	.L47
2616:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 813              		.loc 1 2616 7 is_stmt 1 view .LVU227
2616:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 814              		.loc 1 2616 12 is_stmt 0 view .LVU228
 815 0030 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccteFmy9.s 			page 62


 816              	.LVL44:
2616:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 817              		.loc 1 2616 27 view .LVU229
 818 0034 831B     		subs	r3, r0, r6
2616:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 819              		.loc 1 2616 10 view .LVU230
 820 0036 B3F57A7F 		cmp	r3, #1000
 821 003a F2D9     		bls	.L49
2618:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 822              		.loc 1 2618 9 is_stmt 1 view .LVU231
 823              	.LVL45:
2619:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 824              		.loc 1 2619 9 view .LVU232
2619:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 825              		.loc 1 2619 21 is_stmt 0 view .LVU233
 826 003c 0325     		movs	r5, #3
 827 003e 84F82150 		strb	r5, [r4, #33]
 828 0042 EEE7     		b	.L49
 829              		.cfi_endproc
 830              	.LFE310:
 832              		.section	.text.RTC_ExitInitMode,"ax",%progbits
 833              		.align	1
 834              		.global	RTC_ExitInitMode
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 839              	RTC_ExitInitMode:
 840              	.LVL46:
 841              	.LFB311:
2627:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2628:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2629:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Exit the RTC Initialization mode.
2630:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2631:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2632:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2633:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef RTC_ExitInitMode(RTC_HandleTypeDef *hrtc)
2634:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 842              		.loc 1 2634 1 is_stmt 1 view -0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              		.loc 1 2634 1 is_stmt 0 view .LVU235
 847 0000 10B5     		push	{r4, lr}
 848              	.LCFI5:
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 4, -8
 851              		.cfi_offset 14, -4
 852 0002 0446     		mov	r4, r0
2635:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 853              		.loc 1 2635 3 is_stmt 1 view .LVU236
 854              	.LVL47:
2636:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2637:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Exit Initialization mode */
2638:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined(STM32L4P5xx) || defined(STM32L4Q5xx)
2639:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   CLEAR_BIT(RTC->ICSR, RTC_ICSR_INIT);
2640:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2641:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Exit Initialization mode */
ARM GAS  /tmp/ccteFmy9.s 			page 63


2642:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   CLEAR_BIT(RTC->ISR, RTC_ISR_INIT);
 855              		.loc 1 2642 3 view .LVU237
 856 0004 104B     		ldr	r3, .L59
 857 0006 DA68     		ldr	r2, [r3, #12]
 858 0008 22F08002 		bic	r2, r2, #128
 859 000c DA60     		str	r2, [r3, #12]
2643:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2644:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2645:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* If CR_BYPSHAD bit = 0, wait for synchro */
2646:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (READ_BIT(RTC->CR, RTC_CR_BYPSHAD) == 0U)
 860              		.loc 1 2646 3 view .LVU238
 861              		.loc 1 2646 7 is_stmt 0 view .LVU239
 862 000e 9B68     		ldr	r3, [r3, #8]
 863              		.loc 1 2646 6 view .LVU240
 864 0010 13F0200F 		tst	r3, #32
 865 0014 06D1     		bne	.L55
2647:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2648:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 866              		.loc 1 2648 5 is_stmt 1 view .LVU241
 867              		.loc 1 2648 9 is_stmt 0 view .LVU242
 868 0016 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 869              	.LVL48:
 870              		.loc 1 2648 8 view .LVU243
 871 001a 98B1     		cbz	r0, .L56
2649:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2650:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 872              		.loc 1 2650 7 is_stmt 1 view .LVU244
 873              		.loc 1 2650 19 is_stmt 0 view .LVU245
 874 001c 0320     		movs	r0, #3
 875 001e 84F82100 		strb	r0, [r4, #33]
2651:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = HAL_TIMEOUT;
 876              		.loc 1 2651 7 is_stmt 1 view .LVU246
 877              	.LVL49:
 878              		.loc 1 2651 7 is_stmt 0 view .LVU247
 879 0022 0FE0     		b	.L56
 880              	.LVL50:
 881              	.L55:
2652:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2653:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2654:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else /* WA 2.9.6 Calendar initialization may fail in case of consecutive INIT mode entry */
2655:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2656:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear BYPSHAD bit */
2657:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->CR, RTC_CR_BYPSHAD);
 882              		.loc 1 2657 5 is_stmt 1 view .LVU248
 883 0024 084A     		ldr	r2, .L59
 884 0026 9368     		ldr	r3, [r2, #8]
 885 0028 23F02003 		bic	r3, r3, #32
 886 002c 9360     		str	r3, [r2, #8]
2658:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 887              		.loc 1 2658 5 view .LVU249
 888              		.loc 1 2658 9 is_stmt 0 view .LVU250
 889 002e FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 890              	.LVL51:
 891              		.loc 1 2658 8 view .LVU251
 892 0032 10B1     		cbz	r0, .L57
2659:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2660:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
ARM GAS  /tmp/ccteFmy9.s 			page 64


 893              		.loc 1 2660 7 is_stmt 1 view .LVU252
 894              		.loc 1 2660 19 is_stmt 0 view .LVU253
 895 0034 0320     		movs	r0, #3
 896 0036 84F82100 		strb	r0, [r4, #33]
2661:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = HAL_TIMEOUT;
 897              		.loc 1 2661 7 is_stmt 1 view .LVU254
 898              	.LVL52:
 899              	.L57:
2662:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2663:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Restore BYPSHAD bit */
2664:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(RTC->CR, RTC_CR_BYPSHAD);
 900              		.loc 1 2664 5 view .LVU255
 901 003a 034A     		ldr	r2, .L59
 902 003c 9368     		ldr	r3, [r2, #8]
 903 003e 43F02003 		orr	r3, r3, #32
 904 0042 9360     		str	r3, [r2, #8]
 905              	.LVL53:
 906              	.L56:
2665:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2666:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2667:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 907              		.loc 1 2667 3 view .LVU256
2668:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 908              		.loc 1 2668 1 is_stmt 0 view .LVU257
 909 0044 10BD     		pop	{r4, pc}
 910              	.LVL54:
 911              	.L60:
 912              		.loc 1 2668 1 view .LVU258
 913 0046 00BF     		.align	2
 914              	.L59:
 915 0048 00280040 		.word	1073752064
 916              		.cfi_endproc
 917              	.LFE311:
 919              		.section	.text.HAL_RTC_Init,"ax",%progbits
 920              		.align	1
 921              		.global	HAL_RTC_Init
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 926              	HAL_RTC_Init:
 927              	.LVL55:
 928              	.LFB288:
 247:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 929              		.loc 1 247 1 is_stmt 1 view -0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 248:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 933              		.loc 1 248 3 view .LVU260
 251:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 934              		.loc 1 251 3 view .LVU261
 251:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 935              		.loc 1 251 6 is_stmt 0 view .LVU262
 936 0000 0028     		cmp	r0, #0
 937 0002 4ED0     		beq	.L67
 247:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 938              		.loc 1 247 1 view .LVU263
ARM GAS  /tmp/ccteFmy9.s 			page 65


 939 0004 38B5     		push	{r3, r4, r5, lr}
 940              	.LCFI6:
 941              		.cfi_def_cfa_offset 16
 942              		.cfi_offset 3, -16
 943              		.cfi_offset 4, -12
 944              		.cfi_offset 5, -8
 945              		.cfi_offset 14, -4
 946 0006 0446     		mov	r4, r0
 254:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR_FORMAT(hrtc->Init.HourFormat));
 947              		.loc 1 254 5 is_stmt 1 view .LVU264
 255:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 948              		.loc 1 255 5 view .LVU265
 256:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SYNCH_PREDIV(hrtc->Init.SynchPrediv));
 949              		.loc 1 256 5 view .LVU266
 257:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT(hrtc->Init.OutPut));
 950              		.loc 1 257 5 view .LVU267
 258:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_REMAP(hrtc->Init.OutPutRemap));
 951              		.loc 1 258 5 view .LVU268
 259:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_POL(hrtc->Init.OutPutPolarity));
 952              		.loc 1 259 5 view .LVU269
 260:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_TYPE(hrtc->Init.OutPutType));
 953              		.loc 1 260 5 view .LVU270
 261:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 954              		.loc 1 261 5 view .LVU271
 305:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 955              		.loc 1 305 5 view .LVU272
 305:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 956              		.loc 1 305 13 is_stmt 0 view .LVU273
 957 0008 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 305:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 958              		.loc 1 305 8 view .LVU274
 959 000c 63B1     		cbz	r3, .L73
 960              	.LVL56:
 961              	.L63:
 320:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 962              		.loc 1 320 5 is_stmt 1 view .LVU275
 320:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 963              		.loc 1 320 17 is_stmt 0 view .LVU276
 964 000e 0223     		movs	r3, #2
 965 0010 84F82130 		strb	r3, [r4, #33]
 323:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 966              		.loc 1 323 5 is_stmt 1 view .LVU277
 323:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 967              		.loc 1 323 9 is_stmt 0 view .LVU278
 968 0014 2368     		ldr	r3, [r4]
 969 0016 DA68     		ldr	r2, [r3, #12]
 323:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 970              		.loc 1 323 8 view .LVU279
 971 0018 12F0100F 		tst	r2, #16
 972 001c 09D0     		beq	.L74
 373:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 973              		.loc 1 373 14 view .LVU280
 974 001e 0020     		movs	r0, #0
 975              	.LVL57:
 976              	.L64:
 378:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 977              		.loc 1 378 9 is_stmt 1 view .LVU281
ARM GAS  /tmp/ccteFmy9.s 			page 66


 378:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 978              		.loc 1 378 21 is_stmt 0 view .LVU282
 979 0020 0123     		movs	r3, #1
 980 0022 84F82130 		strb	r3, [r4, #33]
 981              	.L62:
 982              	.LVL58:
 382:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 983              		.loc 1 382 3 is_stmt 1 view .LVU283
 383:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 984              		.loc 1 383 1 is_stmt 0 view .LVU284
 985 0026 38BD     		pop	{r3, r4, r5, pc}
 986              	.LVL59:
 987              	.L73:
 308:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 988              		.loc 1 308 7 is_stmt 1 view .LVU285
 308:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 989              		.loc 1 308 18 is_stmt 0 view .LVU286
 990 0028 80F82030 		strb	r3, [r0, #32]
 311:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 991              		.loc 1 311 7 is_stmt 1 view .LVU287
 992 002c FFF7FEFF 		bl	HAL_RTC_MspInit
 993              	.LVL60:
 311:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 994              		.loc 1 311 7 is_stmt 0 view .LVU288
 995 0030 EDE7     		b	.L63
 996              	.L74:
 326:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 997              		.loc 1 326 7 is_stmt 1 view .LVU289
 326:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 998              		.loc 1 326 7 view .LVU290
 999 0032 CA22     		movs	r2, #202
 1000 0034 5A62     		str	r2, [r3, #36]
 326:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1001              		.loc 1 326 7 view .LVU291
 1002 0036 2368     		ldr	r3, [r4]
 1003 0038 5322     		movs	r2, #83
 1004 003a 5A62     		str	r2, [r3, #36]
 326:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1005              		.loc 1 326 7 view .LVU292
 329:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1006              		.loc 1 329 7 view .LVU293
 329:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1007              		.loc 1 329 16 is_stmt 0 view .LVU294
 1008 003c 2046     		mov	r0, r4
 1009 003e FFF7FEFF 		bl	RTC_EnterInitMode
 1010              	.LVL61:
 331:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1011              		.loc 1 331 7 is_stmt 1 view .LVU295
 331:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1012              		.loc 1 331 10 is_stmt 0 view .LVU296
 1013 0042 C0B9     		cbnz	r0, .L65
 338:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1014              		.loc 1 338 9 is_stmt 1 view .LVU297
 338:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1015              		.loc 1 338 13 is_stmt 0 view .LVU298
 1016 0044 2268     		ldr	r2, [r4]
 338:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
ARM GAS  /tmp/ccteFmy9.s 			page 67


 1017              		.loc 1 338 23 view .LVU299
 1018 0046 9368     		ldr	r3, [r2, #8]
 338:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1019              		.loc 1 338 28 view .LVU300
 1020 0048 23F4E003 		bic	r3, r3, #7340032
 1021 004c 23F04003 		bic	r3, r3, #64
 1022 0050 9360     		str	r3, [r2, #8]
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1023              		.loc 1 341 9 is_stmt 1 view .LVU301
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1024              		.loc 1 341 13 is_stmt 0 view .LVU302
 1025 0052 2168     		ldr	r1, [r4]
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1026              		.loc 1 341 23 view .LVU303
 1027 0054 8A68     		ldr	r2, [r1, #8]
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1028              		.loc 1 341 42 view .LVU304
 1029 0056 6368     		ldr	r3, [r4, #4]
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1030              		.loc 1 341 66 view .LVU305
 1031 0058 2069     		ldr	r0, [r4, #16]
 1032              	.LVL62:
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1033              		.loc 1 341 54 view .LVU306
 1034 005a 0343     		orrs	r3, r3, r0
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1035              		.loc 1 341 86 view .LVU307
 1036 005c A069     		ldr	r0, [r4, #24]
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1037              		.loc 1 341 74 view .LVU308
 1038 005e 0343     		orrs	r3, r3, r0
 341:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1039              		.loc 1 341 28 view .LVU309
 1040 0060 1343     		orrs	r3, r3, r2
 1041 0062 8B60     		str	r3, [r1, #8]
 344:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->PRER |= (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos);
 1042              		.loc 1 344 9 is_stmt 1 view .LVU310
 344:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->PRER |= (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos);
 1043              		.loc 1 344 13 is_stmt 0 view .LVU311
 1044 0064 2368     		ldr	r3, [r4]
 344:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->PRER |= (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos);
 1045              		.loc 1 344 43 view .LVU312
 1046 0066 E268     		ldr	r2, [r4, #12]
 344:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->PRER |= (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos);
 1047              		.loc 1 344 30 view .LVU313
 1048 0068 1A61     		str	r2, [r3, #16]
 345:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1049              		.loc 1 345 9 is_stmt 1 view .LVU314
 345:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1050              		.loc 1 345 13 is_stmt 0 view .LVU315
 1051 006a 2268     		ldr	r2, [r4]
 345:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1052              		.loc 1 345 23 view .LVU316
 1053 006c 1369     		ldr	r3, [r2, #16]
 345:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1054              		.loc 1 345 44 view .LVU317
 1055 006e A168     		ldr	r1, [r4, #8]
ARM GAS  /tmp/ccteFmy9.s 			page 68


 345:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1056              		.loc 1 345 30 view .LVU318
 1057 0070 43EA0143 		orr	r3, r3, r1, lsl #16
 1058 0074 1361     		str	r3, [r2, #16]
 1059              	.L65:
 354:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1060              		.loc 1 354 7 is_stmt 1 view .LVU319
 354:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1061              		.loc 1 354 16 is_stmt 0 view .LVU320
 1062 0076 2046     		mov	r0, r4
 1063 0078 FFF7FEFF 		bl	RTC_ExitInitMode
 1064              	.LVL63:
 356:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1065              		.loc 1 356 7 is_stmt 1 view .LVU321
 356:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1066              		.loc 1 356 10 is_stmt 0 view .LVU322
 1067 007c 58B9     		cbnz	r0, .L66
 362:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 1068              		.loc 1 362 9 is_stmt 1 view .LVU323
 362:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 1069              		.loc 1 362 13 is_stmt 0 view .LVU324
 1070 007e 2268     		ldr	r2, [r4]
 362:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 1071              		.loc 1 362 23 view .LVU325
 1072 0080 D36C     		ldr	r3, [r2, #76]
 362:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 1073              		.loc 1 362 28 view .LVU326
 1074 0082 23F00303 		bic	r3, r3, #3
 1075 0086 D364     		str	r3, [r2, #76]
 363:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1076              		.loc 1 363 9 is_stmt 1 view .LVU327
 363:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1077              		.loc 1 363 13 is_stmt 0 view .LVU328
 1078 0088 2168     		ldr	r1, [r4]
 363:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1079              		.loc 1 363 23 view .LVU329
 1080 008a CB6C     		ldr	r3, [r1, #76]
 363:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1081              		.loc 1 363 42 view .LVU330
 1082 008c E269     		ldr	r2, [r4, #28]
 363:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1083              		.loc 1 363 54 view .LVU331
 1084 008e 6569     		ldr	r5, [r4, #20]
 1085 0090 2A43     		orrs	r2, r2, r5
 363:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1086              		.loc 1 363 28 view .LVU332
 1087 0092 1343     		orrs	r3, r3, r2
 1088 0094 CB64     		str	r3, [r1, #76]
 1089              	.L66:
 368:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 1090              		.loc 1 368 7 is_stmt 1 view .LVU333
 368:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 1091              		.loc 1 368 7 view .LVU334
 1092 0096 2368     		ldr	r3, [r4]
 1093 0098 FF22     		movs	r2, #255
 1094 009a 5A62     		str	r2, [r3, #36]
 368:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
ARM GAS  /tmp/ccteFmy9.s 			page 69


 1095              		.loc 1 368 7 view .LVU335
 376:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1096              		.loc 1 376 5 view .LVU336
 376:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1097              		.loc 1 376 8 is_stmt 0 view .LVU337
 1098 009c 0028     		cmp	r0, #0
 1099 009e C2D1     		bne	.L62
 1100 00a0 BEE7     		b	.L64
 1101              	.LVL64:
 1102              	.L67:
 1103              	.LCFI7:
 1104              		.cfi_def_cfa_offset 0
 1105              		.cfi_restore 3
 1106              		.cfi_restore 4
 1107              		.cfi_restore 5
 1108              		.cfi_restore 14
 248:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1109              		.loc 1 248 21 view .LVU338
 1110 00a2 0120     		movs	r0, #1
 1111              	.LVL65:
 382:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1112              		.loc 1 382 3 is_stmt 1 view .LVU339
 383:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1113              		.loc 1 383 1 is_stmt 0 view .LVU340
 1114 00a4 7047     		bx	lr
 1115              		.cfi_endproc
 1116              	.LFE288:
 1118              		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 1119              		.align	1
 1120              		.global	HAL_RTC_DeInit
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1125              	HAL_RTC_DeInit:
 1126              	.LVL66:
 1127              	.LFB289:
 392:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1128              		.loc 1 392 1 is_stmt 1 view -0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 392:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1132              		.loc 1 392 1 is_stmt 0 view .LVU342
 1133 0000 70B5     		push	{r4, r5, r6, lr}
 1134              	.LCFI8:
 1135              		.cfi_def_cfa_offset 16
 1136              		.cfi_offset 4, -16
 1137              		.cfi_offset 5, -12
 1138              		.cfi_offset 6, -8
 1139              		.cfi_offset 14, -4
 393:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1140              		.loc 1 393 3 is_stmt 1 view .LVU343
 1141              	.LVL67:
 396:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1142              		.loc 1 396 3 view .LVU344
 396:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1143              		.loc 1 396 6 is_stmt 0 view .LVU345
ARM GAS  /tmp/ccteFmy9.s 			page 70


 1144 0002 0028     		cmp	r0, #0
 1145 0004 40D0     		beq	.L77
 1146 0006 0446     		mov	r4, r0
 399:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1147              		.loc 1 399 5 is_stmt 1 view .LVU346
 402:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1148              		.loc 1 402 5 view .LVU347
 402:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1149              		.loc 1 402 17 is_stmt 0 view .LVU348
 1150 0008 0223     		movs	r3, #2
 1151 000a 80F82130 		strb	r3, [r0, #33]
 405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1152              		.loc 1 405 5 is_stmt 1 view .LVU349
 405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1153              		.loc 1 405 5 view .LVU350
 1154 000e 0368     		ldr	r3, [r0]
 1155 0010 CA22     		movs	r2, #202
 1156 0012 5A62     		str	r2, [r3, #36]
 405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1157              		.loc 1 405 5 view .LVU351
 1158 0014 0368     		ldr	r3, [r0]
 1159 0016 5322     		movs	r2, #83
 1160 0018 5A62     		str	r2, [r3, #36]
 405:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1161              		.loc 1 405 5 view .LVU352
 408:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1162              		.loc 1 408 5 view .LVU353
 408:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1163              		.loc 1 408 14 is_stmt 0 view .LVU354
 1164 001a FFF7FEFF 		bl	RTC_EnterInitMode
 1165              	.LVL68:
 410:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1166              		.loc 1 410 5 is_stmt 1 view .LVU355
 410:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1167              		.loc 1 410 8 is_stmt 0 view .LVU356
 1168 001e 0546     		mov	r5, r0
 1169 0020 0028     		cmp	r0, #0
 1170 0022 32D1     		bne	.L76
 413:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->DR = ((uint32_t)(RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 1171              		.loc 1 413 7 is_stmt 1 view .LVU357
 413:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->DR = ((uint32_t)(RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 1172              		.loc 1 413 11 is_stmt 0 view .LVU358
 1173 0024 2268     		ldr	r2, [r4]
 413:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->DR = ((uint32_t)(RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 1174              		.loc 1 413 26 view .LVU359
 1175 0026 0023     		movs	r3, #0
 1176 0028 1360     		str	r3, [r2]
 414:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR &= 0x00000000U;
 1177              		.loc 1 414 7 is_stmt 1 view .LVU360
 414:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR &= 0x00000000U;
 1178              		.loc 1 414 11 is_stmt 0 view .LVU361
 1179 002a 2268     		ldr	r2, [r4]
 414:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR &= 0x00000000U;
 1180              		.loc 1 414 26 view .LVU362
 1181 002c 42F20111 		movw	r1, #8449
 1182 0030 5160     		str	r1, [r2, #4]
 415:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 71


 1183              		.loc 1 415 7 is_stmt 1 view .LVU363
 415:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1184              		.loc 1 415 11 is_stmt 0 view .LVU364
 1185 0032 2268     		ldr	r2, [r4]
 415:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1186              		.loc 1 415 21 view .LVU365
 1187 0034 9168     		ldr	r1, [r2, #8]
 415:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1188              		.loc 1 415 26 view .LVU366
 1189 0036 9360     		str	r3, [r2, #8]
 417:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 1190              		.loc 1 417 7 is_stmt 1 view .LVU367
 417:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 1191              		.loc 1 417 11 is_stmt 0 view .LVU368
 1192 0038 2268     		ldr	r2, [r4]
 417:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 1193              		.loc 1 417 28 view .LVU369
 1194 003a 4FF6FF71 		movw	r1, #65535
 1195 003e 5161     		str	r1, [r2, #20]
 418:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMAR = 0x00000000U;
 1196              		.loc 1 418 7 is_stmt 1 view .LVU370
 418:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMAR = 0x00000000U;
 1197              		.loc 1 418 11 is_stmt 0 view .LVU371
 1198 0040 2268     		ldr	r2, [r4]
 418:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMAR = 0x00000000U;
 1199              		.loc 1 418 28 view .LVU372
 1200 0042 1349     		ldr	r1, .L79
 1201 0044 1161     		str	r1, [r2, #16]
 419:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBR = 0x00000000U;
 1202              		.loc 1 419 7 is_stmt 1 view .LVU373
 419:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBR = 0x00000000U;
 1203              		.loc 1 419 11 is_stmt 0 view .LVU374
 1204 0046 2268     		ldr	r2, [r4]
 419:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBR = 0x00000000U;
 1205              		.loc 1 419 30 view .LVU375
 1206 0048 D361     		str	r3, [r2, #28]
 420:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->SHIFTR = 0x00000000U;
 1207              		.loc 1 420 7 is_stmt 1 view .LVU376
 420:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->SHIFTR = 0x00000000U;
 1208              		.loc 1 420 11 is_stmt 0 view .LVU377
 1209 004a 2268     		ldr	r2, [r4]
 420:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->SHIFTR = 0x00000000U;
 1210              		.loc 1 420 30 view .LVU378
 1211 004c 1362     		str	r3, [r2, #32]
 421:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CALR = 0x00000000U;
 1212              		.loc 1 421 7 is_stmt 1 view .LVU379
 421:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CALR = 0x00000000U;
 1213              		.loc 1 421 11 is_stmt 0 view .LVU380
 1214 004e 2268     		ldr	r2, [r4]
 421:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CALR = 0x00000000U;
 1215              		.loc 1 421 30 view .LVU381
 1216 0050 D362     		str	r3, [r2, #44]
 422:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMASSR = 0x00000000U;
 1217              		.loc 1 422 7 is_stmt 1 view .LVU382
 422:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMASSR = 0x00000000U;
 1218              		.loc 1 422 11 is_stmt 0 view .LVU383
 1219 0052 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccteFmy9.s 			page 72


 422:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMASSR = 0x00000000U;
 1220              		.loc 1 422 28 view .LVU384
 1221 0054 D363     		str	r3, [r2, #60]
 423:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBSSR = 0x00000000U;
 1222              		.loc 1 423 7 is_stmt 1 view .LVU385
 423:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBSSR = 0x00000000U;
 1223              		.loc 1 423 11 is_stmt 0 view .LVU386
 1224 0056 2268     		ldr	r2, [r4]
 423:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBSSR = 0x00000000U;
 1225              		.loc 1 423 32 view .LVU387
 1226 0058 5364     		str	r3, [r2, #68]
 424:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1227              		.loc 1 424 7 is_stmt 1 view .LVU388
 424:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1228              		.loc 1 424 11 is_stmt 0 view .LVU389
 1229 005a 2268     		ldr	r2, [r4]
 424:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1230              		.loc 1 424 32 view .LVU390
 1231 005c 9364     		str	r3, [r2, #72]
 427:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1232              		.loc 1 427 7 is_stmt 1 view .LVU391
 427:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1233              		.loc 1 427 16 is_stmt 0 view .LVU392
 1234 005e 2046     		mov	r0, r4
 1235              	.LVL69:
 427:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1236              		.loc 1 427 16 view .LVU393
 1237 0060 FFF7FEFF 		bl	RTC_ExitInitMode
 1238              	.LVL70:
 430:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1239              		.loc 1 430 7 is_stmt 1 view .LVU394
 430:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1240              		.loc 1 430 10 is_stmt 0 view .LVU395
 1241 0064 0546     		mov	r5, r0
 1242 0066 80B9     		cbnz	r0, .L76
 438:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1243              		.loc 1 438 9 is_stmt 1 view .LVU396
 438:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1244              		.loc 1 438 13 is_stmt 0 view .LVU397
 1245 0068 2368     		ldr	r3, [r4]
 438:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1246              		.loc 1 438 32 view .LVU398
 1247 006a 0026     		movs	r6, #0
 1248 006c 1E64     		str	r6, [r3, #64]
 441:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1249              		.loc 1 441 9 is_stmt 1 view .LVU399
 441:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1250              		.loc 1 441 13 is_stmt 0 view .LVU400
 1251 006e 2368     		ldr	r3, [r4]
 441:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1252              		.loc 1 441 28 view .LVU401
 1253 0070 DE64     		str	r6, [r3, #76]
 445:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1254              		.loc 1 445 9 is_stmt 1 view .LVU402
 445:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1255              		.loc 1 445 9 view .LVU403
 1256 0072 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccteFmy9.s 			page 73


 1257 0074 FF22     		movs	r2, #255
 1258 0076 5A62     		str	r2, [r3, #36]
 445:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1259              		.loc 1 445 9 view .LVU404
 457:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
 1260              		.loc 1 457 9 view .LVU405
 1261 0078 2046     		mov	r0, r4
 1262              	.LVL71:
 457:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
 1263              		.loc 1 457 9 is_stmt 0 view .LVU406
 1264 007a FFF7FEFF 		bl	HAL_RTC_MspDeInit
 1265              	.LVL72:
 460:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1266              		.loc 1 460 9 is_stmt 1 view .LVU407
 460:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1267              		.loc 1 460 21 is_stmt 0 view .LVU408
 1268 007e 84F82160 		strb	r6, [r4, #33]
 463:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1269              		.loc 1 463 9 is_stmt 1 view .LVU409
 463:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1270              		.loc 1 463 9 view .LVU410
 1271 0082 84F82060 		strb	r6, [r4, #32]
 1272 0086 00E0     		b	.L76
 1273              	.LVL73:
 1274              	.L77:
 393:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1275              		.loc 1 393 21 is_stmt 0 view .LVU411
 1276 0088 0125     		movs	r5, #1
 1277              	.LVL74:
 1278              	.L76:
 463:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1279              		.loc 1 463 9 is_stmt 1 discriminator 1 view .LVU412
 468:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1280              		.loc 1 468 3 discriminator 1 view .LVU413
 469:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1281              		.loc 1 469 1 is_stmt 0 discriminator 1 view .LVU414
 1282 008a 2846     		mov	r0, r5
 1283 008c 70BD     		pop	{r4, r5, r6, pc}
 1284              	.LVL75:
 1285              	.L80:
 469:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1286              		.loc 1 469 1 discriminator 1 view .LVU415
 1287 008e 00BF     		.align	2
 1288              	.L79:
 1289 0090 FF007F00 		.word	8323327
 1290              		.cfi_endproc
 1291              	.LFE289:
 1293              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 1294              		.align	1
 1295              		.global	RTC_ByteToBcd2
 1296              		.syntax unified
 1297              		.thumb
 1298              		.thumb_func
 1300              	RTC_ByteToBcd2:
 1301              	.LVL76:
 1302              	.LFB312:
2669:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 74


2670:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2671:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2672:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2673:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Convert a 2 digit decimal to BCD format.
2674:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Value Byte to be converted
2675:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval Converted byte
2676:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2677:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** uint8_t RTC_ByteToBcd2(uint8_t Value)
2678:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 1303              		.loc 1 2678 1 is_stmt 1 view -0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              		@ link register save eliminated.
2679:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t bcdhigh = 0U;
 1308              		.loc 1 2679 3 view .LVU417
2680:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint8_t temp = Value;
 1309              		.loc 1 2680 3 view .LVU418
2681:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2682:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while (temp >= 10U)
 1310              		.loc 1 2682 3 view .LVU419
2679:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint8_t temp = Value;
 1311              		.loc 1 2679 12 is_stmt 0 view .LVU420
 1312 0000 0023     		movs	r3, #0
 1313              		.loc 1 2682 9 view .LVU421
 1314 0002 02E0     		b	.L82
 1315              	.LVL77:
 1316              	.L83:
2683:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2684:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     bcdhigh++;
 1317              		.loc 1 2684 5 is_stmt 1 view .LVU422
 1318              		.loc 1 2684 12 is_stmt 0 view .LVU423
 1319 0004 0133     		adds	r3, r3, #1
 1320              	.LVL78:
2685:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     temp -= 10U;
 1321              		.loc 1 2685 5 is_stmt 1 view .LVU424
 1322              		.loc 1 2685 10 is_stmt 0 view .LVU425
 1323 0006 0A38     		subs	r0, r0, #10
 1324              	.LVL79:
 1325              		.loc 1 2685 10 view .LVU426
 1326 0008 C0B2     		uxtb	r0, r0
 1327              	.LVL80:
 1328              	.L82:
2682:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1329              		.loc 1 2682 15 is_stmt 1 view .LVU427
 1330 000a 0928     		cmp	r0, #9
 1331 000c FAD8     		bhi	.L83
2686:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2687:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2688:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return ((uint8_t)(bcdhigh << 4U) | temp);
 1332              		.loc 1 2688 3 view .LVU428
 1333              		.loc 1 2688 11 is_stmt 0 view .LVU429
 1334 000e 1B01     		lsls	r3, r3, #4
 1335              	.LVL81:
 1336              		.loc 1 2688 11 view .LVU430
 1337 0010 DBB2     		uxtb	r3, r3
2689:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
ARM GAS  /tmp/ccteFmy9.s 			page 75


 1338              		.loc 1 2689 1 view .LVU431
 1339 0012 1843     		orrs	r0, r0, r3
 1340              	.LVL82:
 1341              		.loc 1 2689 1 view .LVU432
 1342 0014 7047     		bx	lr
 1343              		.cfi_endproc
 1344              	.LFE312:
 1346              		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 1347              		.align	1
 1348              		.global	HAL_RTC_SetTime
 1349              		.syntax unified
 1350              		.thumb
 1351              		.thumb_func
 1353              	HAL_RTC_SetTime:
 1354              	.LVL83:
 1355              	.LFB292:
1455:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 1356              		.loc 1 1455 1 is_stmt 1 view -0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 0
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
1456:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
 1360              		.loc 1 1456 3 view .LVU434
1457:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1361              		.loc 1 1457 3 view .LVU435
1460:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
 1362              		.loc 1 1460 3 view .LVU436
1461:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
 1363              		.loc 1 1461 3 view .LVU437
1462:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1364              		.loc 1 1462 3 view .LVU438
1465:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1365              		.loc 1 1465 3 view .LVU439
1465:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1366              		.loc 1 1465 3 view .LVU440
 1367 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1368 0004 012B     		cmp	r3, #1
 1369 0006 5FD0     		beq	.L92
1455:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 1370              		.loc 1 1455 1 is_stmt 0 discriminator 2 view .LVU441
 1371 0008 70B5     		push	{r4, r5, r6, lr}
 1372              	.LCFI9:
 1373              		.cfi_def_cfa_offset 16
 1374              		.cfi_offset 4, -16
 1375              		.cfi_offset 5, -12
 1376              		.cfi_offset 6, -8
 1377              		.cfi_offset 14, -4
 1378 000a 0446     		mov	r4, r0
 1379 000c 0D46     		mov	r5, r1
 1380 000e 1646     		mov	r6, r2
1465:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1381              		.loc 1 1465 3 is_stmt 1 discriminator 2 view .LVU442
 1382 0010 0123     		movs	r3, #1
 1383 0012 80F82030 		strb	r3, [r0, #32]
1465:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1384              		.loc 1 1465 3 discriminator 2 view .LVU443
1467:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 76


 1385              		.loc 1 1467 3 discriminator 2 view .LVU444
1467:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1386              		.loc 1 1467 15 is_stmt 0 discriminator 2 view .LVU445
 1387 0016 0223     		movs	r3, #2
 1388 0018 80F82130 		strb	r3, [r0, #33]
1470:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1389              		.loc 1 1470 3 is_stmt 1 discriminator 2 view .LVU446
1470:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1390              		.loc 1 1470 3 discriminator 2 view .LVU447
 1391 001c 0368     		ldr	r3, [r0]
 1392 001e CA22     		movs	r2, #202
 1393              	.LVL84:
1470:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1394              		.loc 1 1470 3 is_stmt 0 discriminator 2 view .LVU448
 1395 0020 5A62     		str	r2, [r3, #36]
1470:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1396              		.loc 1 1470 3 is_stmt 1 discriminator 2 view .LVU449
 1397 0022 0368     		ldr	r3, [r0]
 1398 0024 5322     		movs	r2, #83
 1399 0026 5A62     		str	r2, [r3, #36]
1470:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1400              		.loc 1 1470 3 discriminator 2 view .LVU450
1473:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 1401              		.loc 1 1473 3 discriminator 2 view .LVU451
1473:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 1402              		.loc 1 1473 12 is_stmt 0 discriminator 2 view .LVU452
 1403 0028 FFF7FEFF 		bl	RTC_EnterInitMode
 1404              	.LVL85:
1474:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1405              		.loc 1 1474 3 is_stmt 1 discriminator 2 view .LVU453
1474:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1406              		.loc 1 1474 6 is_stmt 0 discriminator 2 view .LVU454
 1407 002c 0028     		cmp	r0, #0
 1408 002e 2ED1     		bne	.L86
1476:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1409              		.loc 1 1476 5 is_stmt 1 view .LVU455
1476:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1410              		.loc 1 1476 8 is_stmt 0 view .LVU456
 1411 0030 002E     		cmp	r6, #0
 1412 0032 37D1     		bne	.L87
1478:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1413              		.loc 1 1478 7 is_stmt 1 view .LVU457
1478:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1414              		.loc 1 1478 16 is_stmt 0 view .LVU458
 1415 0034 2368     		ldr	r3, [r4]
1478:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1416              		.loc 1 1478 26 view .LVU459
 1417 0036 9B68     		ldr	r3, [r3, #8]
1478:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1418              		.loc 1 1478 10 view .LVU460
 1419 0038 13F0400F 		tst	r3, #64
 1420 003c 01D1     		bne	.L88
1485:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(sTime->Hours));
 1421              		.loc 1 1485 9 is_stmt 1 view .LVU461
1485:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(sTime->Hours));
 1422              		.loc 1 1485 27 is_stmt 0 view .LVU462
 1423 003e 0023     		movs	r3, #0
ARM GAS  /tmp/ccteFmy9.s 			page 77


 1424 0040 EB70     		strb	r3, [r5, #3]
 1425              	.L88:
1486:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1426              		.loc 1 1486 9 is_stmt 1 view .LVU463
1488:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(sTime->Seconds));
 1427              		.loc 1 1488 7 view .LVU464
1489:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1428              		.loc 1 1489 7 view .LVU465
1491:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1429              		.loc 1 1491 7 view .LVU466
1491:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1430              		.loc 1 1491 38 is_stmt 0 view .LVU467
 1431 0042 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1432              	.LVL86:
1491:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1433              		.loc 1 1491 38 view .LVU468
 1434 0044 FFF7FEFF 		bl	RTC_ByteToBcd2
 1435              	.LVL87:
1491:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1436              		.loc 1 1491 67 view .LVU469
 1437 0048 0604     		lsls	r6, r0, #16
 1438              	.LVL88:
1492:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos) | \
 1439              		.loc 1 1492 38 view .LVU470
 1440 004a 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1441 004c FFF7FEFF 		bl	RTC_ByteToBcd2
 1442              	.LVL89:
1491:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1443              		.loc 1 1491 85 view .LVU471
 1444 0050 46EA0026 		orr	r6, r6, r0, lsl #8
1493:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           (((uint32_t)sTime->TimeFormat) << RTC_TR_PM_Pos));
 1445              		.loc 1 1493 38 view .LVU472
 1446 0054 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1447 0056 FFF7FEFF 		bl	RTC_ByteToBcd2
 1448              	.LVL90:
1492:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos) | \
 1449              		.loc 1 1492 88 view .LVU473
 1450 005a 46EA0003 		orr	r3, r6, r0
1494:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 1451              		.loc 1 1494 44 view .LVU474
 1452 005e EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
1491:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1453              		.loc 1 1491 14 view .LVU475
 1454 0060 43EA8253 		orr	r3, r3, r2, lsl #22
 1455              	.LVL91:
 1456              	.L89:
1517:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1457              		.loc 1 1517 5 is_stmt 1 view .LVU476
1517:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1458              		.loc 1 1517 9 is_stmt 0 view .LVU477
 1459 0064 2268     		ldr	r2, [r4]
1517:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1460              		.loc 1 1517 26 view .LVU478
 1461 0066 03F07F33 		and	r3, r3, #2139062143
 1462              	.LVL92:
1517:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1463              		.loc 1 1517 26 view .LVU479
ARM GAS  /tmp/ccteFmy9.s 			page 78


 1464 006a 23F0FE43 		bic	r3, r3, #2130706432
1517:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1465              		.loc 1 1517 24 view .LVU480
 1466 006e 1360     		str	r3, [r2]
1520:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1467              		.loc 1 1520 5 is_stmt 1 view .LVU481
1520:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1468              		.loc 1 1520 9 is_stmt 0 view .LVU482
 1469 0070 2268     		ldr	r2, [r4]
1520:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1470              		.loc 1 1520 19 view .LVU483
 1471 0072 9368     		ldr	r3, [r2, #8]
1520:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1472              		.loc 1 1520 24 view .LVU484
 1473 0074 23F48023 		bic	r3, r3, #262144
 1474 0078 9360     		str	r3, [r2, #8]
1523:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1475              		.loc 1 1523 5 is_stmt 1 view .LVU485
1523:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1476              		.loc 1 1523 9 is_stmt 0 view .LVU486
 1477 007a 2168     		ldr	r1, [r4]
1523:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1478              		.loc 1 1523 19 view .LVU487
 1479 007c 8B68     		ldr	r3, [r1, #8]
1523:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1480              		.loc 1 1523 43 view .LVU488
 1481 007e EA68     		ldr	r2, [r5, #12]
1523:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1482              		.loc 1 1523 67 view .LVU489
 1483 0080 2869     		ldr	r0, [r5, #16]
1523:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1484              		.loc 1 1523 60 view .LVU490
 1485 0082 0243     		orrs	r2, r2, r0
1523:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1486              		.loc 1 1523 24 view .LVU491
 1487 0084 1343     		orrs	r3, r3, r2
 1488 0086 8B60     		str	r3, [r1, #8]
1526:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1489              		.loc 1 1526 5 is_stmt 1 view .LVU492
1526:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1490              		.loc 1 1526 14 is_stmt 0 view .LVU493
 1491 0088 2046     		mov	r0, r4
 1492 008a FFF7FEFF 		bl	RTC_ExitInitMode
 1493              	.LVL93:
 1494              	.L86:
1530:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1495              		.loc 1 1530 3 is_stmt 1 view .LVU494
1530:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1496              		.loc 1 1530 3 view .LVU495
 1497 008e 2368     		ldr	r3, [r4]
 1498 0090 FF22     		movs	r2, #255
 1499 0092 5A62     		str	r2, [r3, #36]
1530:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1500              		.loc 1 1530 3 view .LVU496
1532:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1501              		.loc 1 1532 3 view .LVU497
1532:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
ARM GAS  /tmp/ccteFmy9.s 			page 79


 1502              		.loc 1 1532 6 is_stmt 0 view .LVU498
 1503 0094 10B9     		cbnz	r0, .L91
1534:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1504              		.loc 1 1534 5 is_stmt 1 view .LVU499
1534:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1505              		.loc 1 1534 17 is_stmt 0 view .LVU500
 1506 0096 0123     		movs	r3, #1
 1507 0098 84F82130 		strb	r3, [r4, #33]
 1508              	.L91:
1538:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1509              		.loc 1 1538 3 is_stmt 1 view .LVU501
1538:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1510              		.loc 1 1538 3 view .LVU502
 1511 009c 0023     		movs	r3, #0
 1512 009e 84F82030 		strb	r3, [r4, #32]
1538:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1513              		.loc 1 1538 3 view .LVU503
1540:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1514              		.loc 1 1540 3 view .LVU504
1541:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1515              		.loc 1 1541 1 is_stmt 0 view .LVU505
 1516 00a2 70BD     		pop	{r4, r5, r6, pc}
 1517              	.LVL94:
 1518              	.L87:
1498:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1519              		.loc 1 1498 7 is_stmt 1 view .LVU506
1498:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1520              		.loc 1 1498 16 is_stmt 0 view .LVU507
 1521 00a4 2368     		ldr	r3, [r4]
1498:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1522              		.loc 1 1498 26 view .LVU508
 1523 00a6 9B68     		ldr	r3, [r3, #8]
1498:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1524              		.loc 1 1498 10 view .LVU509
 1525 00a8 13F0400F 		tst	r3, #64
 1526 00ac 01D1     		bne	.L90
1505:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 1527              		.loc 1 1505 9 is_stmt 1 view .LVU510
1505:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 1528              		.loc 1 1505 27 is_stmt 0 view .LVU511
 1529 00ae 0023     		movs	r3, #0
 1530 00b0 EB70     		strb	r3, [r5, #3]
 1531              	.L90:
1506:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1532              		.loc 1 1506 9 is_stmt 1 view .LVU512
1508:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 1533              		.loc 1 1508 7 view .LVU513
1509:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)(sTime->Hours) << RTC_TR_HU_Pos) | \
 1534              		.loc 1 1509 7 view .LVU514
1510:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1535              		.loc 1 1510 7 view .LVU515
1510:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1536              		.loc 1 1510 34 is_stmt 0 view .LVU516
 1537 00b2 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
1511:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos) | \
 1538              		.loc 1 1511 34 view .LVU517
 1539 00b4 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccteFmy9.s 			page 80


1511:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos) | \
 1540              		.loc 1 1511 45 view .LVU518
 1541 00b6 1B02     		lsls	r3, r3, #8
1510:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1542              		.loc 1 1510 61 view .LVU519
 1543 00b8 43EA0243 		orr	r3, r3, r2, lsl #16
1512:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->TimeFormat) << RTC_TR_PM_Pos));
 1544              		.loc 1 1512 34 view .LVU520
 1545 00bc AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
1511:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos) | \
 1546              		.loc 1 1511 64 view .LVU521
 1547 00be 1343     		orrs	r3, r3, r2
1513:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 1548              		.loc 1 1513 34 view .LVU522
 1549 00c0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
1510:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1550              		.loc 1 1510 14 view .LVU523
 1551 00c2 43EA8253 		orr	r3, r3, r2, lsl #22
 1552              	.LVL95:
1510:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1553              		.loc 1 1510 14 view .LVU524
 1554 00c6 CDE7     		b	.L89
 1555              	.LVL96:
 1556              	.L92:
 1557              	.LCFI10:
 1558              		.cfi_def_cfa_offset 0
 1559              		.cfi_restore 4
 1560              		.cfi_restore 5
 1561              		.cfi_restore 6
 1562              		.cfi_restore 14
1465:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1563              		.loc 1 1465 3 view .LVU525
 1564 00c8 0220     		movs	r0, #2
 1565              	.LVL97:
1541:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1566              		.loc 1 1541 1 view .LVU526
 1567 00ca 7047     		bx	lr
 1568              		.cfi_endproc
 1569              	.LFE292:
 1571              		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 1572              		.align	1
 1573              		.global	HAL_RTC_SetDate
 1574              		.syntax unified
 1575              		.thumb
 1576              		.thumb_func
 1578              	HAL_RTC_SetDate:
 1579              	.LVL98:
 1580              	.LFB294:
1609:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
 1581              		.loc 1 1609 1 is_stmt 1 view -0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
1610:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
 1585              		.loc 1 1610 3 view .LVU528
1611:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1586              		.loc 1 1611 3 view .LVU529
ARM GAS  /tmp/ccteFmy9.s 			page 81


1614:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1587              		.loc 1 1614 3 view .LVU530
1617:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1588              		.loc 1 1617 3 view .LVU531
1617:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1589              		.loc 1 1617 3 view .LVU532
 1590 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1591 0004 012B     		cmp	r3, #1
 1592 0006 4BD0     		beq	.L104
1609:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
 1593              		.loc 1 1609 1 is_stmt 0 discriminator 2 view .LVU533
 1594 0008 70B5     		push	{r4, r5, r6, lr}
 1595              	.LCFI11:
 1596              		.cfi_def_cfa_offset 16
 1597              		.cfi_offset 4, -16
 1598              		.cfi_offset 5, -12
 1599              		.cfi_offset 6, -8
 1600              		.cfi_offset 14, -4
 1601 000a 0446     		mov	r4, r0
 1602 000c 0E46     		mov	r6, r1
1617:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1603              		.loc 1 1617 3 is_stmt 1 discriminator 2 view .LVU534
 1604 000e 0123     		movs	r3, #1
 1605 0010 80F82030 		strb	r3, [r0, #32]
1617:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1606              		.loc 1 1617 3 discriminator 2 view .LVU535
1619:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1607              		.loc 1 1619 3 discriminator 2 view .LVU536
1619:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1608              		.loc 1 1619 15 is_stmt 0 discriminator 2 view .LVU537
 1609 0014 0223     		movs	r3, #2
 1610 0016 80F82130 		strb	r3, [r0, #33]
1621:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1611              		.loc 1 1621 3 is_stmt 1 discriminator 2 view .LVU538
1621:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1612              		.loc 1 1621 6 is_stmt 0 discriminator 2 view .LVU539
 1613 001a F2B1     		cbz	r2, .L99
1626:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1614              		.loc 1 1626 3 is_stmt 1 view .LVU540
1628:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1615              		.loc 1 1628 3 view .LVU541
1641:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
 1616              		.loc 1 1641 5 view .LVU542
1642:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));
 1617              		.loc 1 1642 5 view .LVU543
1643:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1618              		.loc 1 1643 5 view .LVU544
1645:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 1619              		.loc 1 1645 5 view .LVU545
1645:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 1620              		.loc 1 1645 36 is_stmt 0 view .LVU546
 1621 001c CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
1646:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Date) << RTC_DR_DU_Pos) | \
 1622              		.loc 1 1646 36 view .LVU547
 1623 001e 4D78     		ldrb	r5, [r1, #1]	@ zero_extendqisi2
1646:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Date) << RTC_DR_DU_Pos) | \
 1624              		.loc 1 1646 45 view .LVU548
ARM GAS  /tmp/ccteFmy9.s 			page 82


 1625 0020 2D02     		lsls	r5, r5, #8
1645:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 1626              		.loc 1 1645 62 view .LVU549
 1627 0022 45EA0345 		orr	r5, r5, r3, lsl #16
1647:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << RTC_DR_WDU_Pos));
 1628              		.loc 1 1647 36 view .LVU550
 1629 0026 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
1646:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Date) << RTC_DR_DU_Pos) | \
 1630              		.loc 1 1646 63 view .LVU551
 1631 0028 1D43     		orrs	r5, r5, r3
1648:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1632              		.loc 1 1648 36 view .LVU552
 1633 002a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
1645:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 1634              		.loc 1 1645 16 view .LVU553
 1635 002c 45EA4335 		orr	r5, r5, r3, lsl #13
 1636              	.LVL99:
 1637              	.L100:
1652:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1638              		.loc 1 1652 3 is_stmt 1 view .LVU554
1652:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1639              		.loc 1 1652 3 view .LVU555
 1640 0030 2368     		ldr	r3, [r4]
 1641 0032 CA22     		movs	r2, #202
 1642 0034 5A62     		str	r2, [r3, #36]
1652:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1643              		.loc 1 1652 3 view .LVU556
 1644 0036 2368     		ldr	r3, [r4]
 1645 0038 5322     		movs	r2, #83
 1646 003a 5A62     		str	r2, [r3, #36]
1652:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1647              		.loc 1 1652 3 view .LVU557
1655:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 1648              		.loc 1 1655 3 view .LVU558
1655:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 1649              		.loc 1 1655 12 is_stmt 0 view .LVU559
 1650 003c 2046     		mov	r0, r4
 1651 003e FFF7FEFF 		bl	RTC_EnterInitMode
 1652              	.LVL100:
1656:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1653              		.loc 1 1656 3 is_stmt 1 view .LVU560
1656:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1654              		.loc 1 1656 6 is_stmt 0 view .LVU561
 1655 0042 18B3     		cbz	r0, .L109
 1656              	.LVL101:
 1657              	.L102:
1666:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1658              		.loc 1 1666 3 is_stmt 1 view .LVU562
1666:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1659              		.loc 1 1666 3 view .LVU563
 1660 0044 2368     		ldr	r3, [r4]
 1661 0046 FF22     		movs	r2, #255
 1662 0048 5A62     		str	r2, [r3, #36]
1666:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1663              		.loc 1 1666 3 view .LVU564
1668:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1664              		.loc 1 1668 3 view .LVU565
ARM GAS  /tmp/ccteFmy9.s 			page 83


1668:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1665              		.loc 1 1668 6 is_stmt 0 view .LVU566
 1666 004a 10B9     		cbnz	r0, .L103
1670:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1667              		.loc 1 1670 5 is_stmt 1 view .LVU567
1670:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1668              		.loc 1 1670 17 is_stmt 0 view .LVU568
 1669 004c 0123     		movs	r3, #1
 1670 004e 84F82130 		strb	r3, [r4, #33]
 1671              	.L103:
1674:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1672              		.loc 1 1674 3 is_stmt 1 view .LVU569
1674:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1673              		.loc 1 1674 3 view .LVU570
 1674 0052 0023     		movs	r3, #0
 1675 0054 84F82030 		strb	r3, [r4, #32]
1674:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1676              		.loc 1 1674 3 view .LVU571
1676:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1677              		.loc 1 1676 3 view .LVU572
1677:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1678              		.loc 1 1677 1 is_stmt 0 view .LVU573
 1679 0058 70BD     		pop	{r4, r5, r6, pc}
 1680              	.LVL102:
 1681              	.L99:
1621:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1682              		.loc 1 1621 44 discriminator 1 view .LVU574
 1683 005a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
1621:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1684              		.loc 1 1621 34 discriminator 1 view .LVU575
 1685 005c 13F0100F 		tst	r3, #16
 1686 0060 03D0     		beq	.L101
1623:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1687              		.loc 1 1623 5 is_stmt 1 view .LVU576
1623:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1688              		.loc 1 1623 44 is_stmt 0 view .LVU577
 1689 0062 03F0EF03 		and	r3, r3, #239
1623:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1690              		.loc 1 1623 20 view .LVU578
 1691 0066 0A33     		adds	r3, r3, #10
1623:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1692              		.loc 1 1623 18 view .LVU579
 1693 0068 4B70     		strb	r3, [r1, #1]
 1694              	.L101:
1626:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1695              		.loc 1 1626 3 is_stmt 1 view .LVU580
1628:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1696              		.loc 1 1628 3 view .LVU581
1630:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 1697              		.loc 1 1630 5 view .LVU582
1631:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date));
 1698              		.loc 1 1631 5 view .LVU583
1632:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1699              		.loc 1 1632 5 view .LVU584
1634:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 1700              		.loc 1 1634 5 view .LVU585
1634:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
ARM GAS  /tmp/ccteFmy9.s 			page 84


 1701              		.loc 1 1634 30 is_stmt 0 view .LVU586
 1702 006a F078     		ldrb	r0, [r6, #3]	@ zero_extendqisi2
 1703              	.LVL103:
1634:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 1704              		.loc 1 1634 30 view .LVU587
 1705 006c FFF7FEFF 		bl	RTC_ByteToBcd2
 1706              	.LVL104:
1634:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 1707              		.loc 1 1634 58 view .LVU588
 1708 0070 0504     		lsls	r5, r0, #16
1635:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Date) << RTC_DR_DU_Pos) | \
 1709              		.loc 1 1635 30 view .LVU589
 1710 0072 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 1711 0074 FFF7FEFF 		bl	RTC_ByteToBcd2
 1712              	.LVL105:
1634:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 1713              		.loc 1 1634 76 view .LVU590
 1714 0078 45EA0025 		orr	r5, r5, r0, lsl #8
1636:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)sDate->WeekDay << RTC_DR_WDU_Pos));
 1715              		.loc 1 1636 30 view .LVU591
 1716 007c B078     		ldrb	r0, [r6, #2]	@ zero_extendqisi2
 1717 007e FFF7FEFF 		bl	RTC_ByteToBcd2
 1718              	.LVL106:
1635:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Date) << RTC_DR_DU_Pos) | \
 1719              		.loc 1 1635 77 view .LVU592
 1720 0082 0543     		orrs	r5, r5, r0
1637:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1721              		.loc 1 1637 35 view .LVU593
 1722 0084 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
1634:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 1723              		.loc 1 1634 16 view .LVU594
 1724 0086 45EA4335 		orr	r5, r5, r3, lsl #13
 1725              	.LVL107:
1634:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 1726              		.loc 1 1634 16 view .LVU595
 1727 008a D1E7     		b	.L100
 1728              	.LVL108:
 1729              	.L109:
1659:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1730              		.loc 1 1659 5 is_stmt 1 view .LVU596
1659:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1731              		.loc 1 1659 9 is_stmt 0 view .LVU597
 1732 008c 2368     		ldr	r3, [r4]
1659:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1733              		.loc 1 1659 26 view .LVU598
 1734 008e 25F07F45 		bic	r5, r5, #-16777216
 1735              	.LVL109:
1659:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1736              		.loc 1 1659 26 view .LVU599
 1737 0092 25F0C005 		bic	r5, r5, #192
1659:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1738              		.loc 1 1659 24 view .LVU600
 1739 0096 5D60     		str	r5, [r3, #4]
1662:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1740              		.loc 1 1662 5 is_stmt 1 view .LVU601
1662:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1741              		.loc 1 1662 14 is_stmt 0 view .LVU602
ARM GAS  /tmp/ccteFmy9.s 			page 85


 1742 0098 2046     		mov	r0, r4
 1743              	.LVL110:
1662:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1744              		.loc 1 1662 14 view .LVU603
 1745 009a FFF7FEFF 		bl	RTC_ExitInitMode
 1746              	.LVL111:
1662:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1747              		.loc 1 1662 14 view .LVU604
 1748 009e D1E7     		b	.L102
 1749              	.LVL112:
 1750              	.L104:
 1751              	.LCFI12:
 1752              		.cfi_def_cfa_offset 0
 1753              		.cfi_restore 4
 1754              		.cfi_restore 5
 1755              		.cfi_restore 6
 1756              		.cfi_restore 14
1617:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1757              		.loc 1 1617 3 view .LVU605
 1758 00a0 0220     		movs	r0, #2
 1759              	.LVL113:
1677:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1760              		.loc 1 1677 1 view .LVU606
 1761 00a2 7047     		bx	lr
 1762              		.cfi_endproc
 1763              	.LFE294:
 1765              		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1766              		.align	1
 1767              		.global	HAL_RTC_SetAlarm
 1768              		.syntax unified
 1769              		.thumb
 1770              		.thumb_func
 1772              	HAL_RTC_SetAlarm:
 1773              	.LVL114:
 1774              	.LFB296:
1747:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
 1775              		.loc 1 1747 1 is_stmt 1 view -0
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 0
 1778              		@ frame_needed = 0, uses_anonymous_args = 0
1747:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
 1779              		.loc 1 1747 1 is_stmt 0 view .LVU608
 1780 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1781              	.LCFI13:
 1782              		.cfi_def_cfa_offset 24
 1783              		.cfi_offset 3, -24
 1784              		.cfi_offset 4, -20
 1785              		.cfi_offset 5, -16
 1786              		.cfi_offset 6, -12
 1787              		.cfi_offset 7, -8
 1788              		.cfi_offset 14, -4
1748:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1789              		.loc 1 1748 3 is_stmt 1 view .LVU609
1751:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 1790              		.loc 1 1751 3 view .LVU610
1752:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 1791              		.loc 1 1752 3 view .LVU611
ARM GAS  /tmp/ccteFmy9.s 			page 86


1753:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 1792              		.loc 1 1753 3 view .LVU612
1754:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 1793              		.loc 1 1754 3 view .LVU613
1755:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 1794              		.loc 1 1755 3 view .LVU614
1756:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1795              		.loc 1 1756 3 view .LVU615
1759:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1796              		.loc 1 1759 3 view .LVU616
1759:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1797              		.loc 1 1759 3 view .LVU617
 1798 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1799 0006 012B     		cmp	r3, #1
 1800 0008 00F0BD80 		beq	.L122
 1801 000c 0446     		mov	r4, r0
 1802 000e 0D46     		mov	r5, r1
1759:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1803              		.loc 1 1759 3 discriminator 2 view .LVU618
 1804 0010 0123     		movs	r3, #1
 1805 0012 80F82030 		strb	r3, [r0, #32]
1759:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1806              		.loc 1 1759 3 discriminator 2 view .LVU619
1761:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1807              		.loc 1 1761 3 discriminator 2 view .LVU620
1761:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1808              		.loc 1 1761 15 is_stmt 0 discriminator 2 view .LVU621
 1809 0016 0223     		movs	r3, #2
 1810 0018 80F82130 		strb	r3, [r0, #33]
1763:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1811              		.loc 1 1763 3 is_stmt 1 discriminator 2 view .LVU622
1763:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1812              		.loc 1 1763 6 is_stmt 0 discriminator 2 view .LVU623
 1813 001c 002A     		cmp	r2, #0
 1814 001e 55D1     		bne	.L112
1765:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1815              		.loc 1 1765 5 is_stmt 1 view .LVU624
1765:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1816              		.loc 1 1765 14 is_stmt 0 view .LVU625
 1817 0020 0368     		ldr	r3, [r0]
1765:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1818              		.loc 1 1765 24 view .LVU626
 1819 0022 9B68     		ldr	r3, [r3, #8]
1765:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1820              		.loc 1 1765 8 view .LVU627
 1821 0024 13F0400F 		tst	r3, #64
 1822 0028 01D1     		bne	.L113
1772:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1823              		.loc 1 1772 7 is_stmt 1 view .LVU628
1772:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1824              		.loc 1 1772 36 is_stmt 0 view .LVU629
 1825 002a 0023     		movs	r3, #0
 1826 002c CB70     		strb	r3, [r1, #3]
 1827              	.L113:
1773:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 1828              		.loc 1 1773 7 is_stmt 1 view .LVU630
1775:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
ARM GAS  /tmp/ccteFmy9.s 			page 87


 1829              		.loc 1 1775 5 view .LVU631
1776:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1830              		.loc 1 1776 5 view .LVU632
1778:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1831              		.loc 1 1778 5 view .LVU633
1778:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1832              		.loc 1 1778 15 is_stmt 0 view .LVU634
 1833 002e 2E6A     		ldr	r6, [r5, #32]
1784:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 1834              		.loc 1 1784 7 is_stmt 1 view .LVU635
1786:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1835              		.loc 1 1786 5 view .LVU636
1786:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1836              		.loc 1 1786 26 is_stmt 0 view .LVU637
 1837 0030 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1838              	.LVL115:
1786:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1839              		.loc 1 1786 26 view .LVU638
 1840 0032 FFF7FEFF 		bl	RTC_ByteToBcd2
 1841              	.LVL116:
1786:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1842              		.loc 1 1786 66 view .LVU639
 1843 0036 0704     		lsls	r7, r0, #16
1787:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1844              		.loc 1 1787 26 view .LVU640
 1845 0038 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1846 003a FFF7FEFF 		bl	RTC_ByteToBcd2
 1847              	.LVL117:
1786:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1848              		.loc 1 1786 88 view .LVU641
 1849 003e 47EA0027 		orr	r7, r7, r0, lsl #8
1788:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1850              		.loc 1 1788 26 view .LVU642
 1851 0042 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1852 0044 FFF7FEFF 		bl	RTC_ByteToBcd2
 1853              	.LVL118:
1787:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1854              		.loc 1 1787 91 view .LVU643
 1855 0048 0743     		orrs	r7, r7, r0
1789:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1856              		.loc 1 1789 44 view .LVU644
 1857 004a EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2
1788:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1858              		.loc 1 1788 90 view .LVU645
 1859 004c 47EA8357 		orr	r7, r7, r3, lsl #22
1790:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1860              		.loc 1 1790 26 view .LVU646
 1861 0050 95F82400 		ldrb	r0, [r5, #36]	@ zero_extendqisi2
 1862 0054 FFF7FEFF 		bl	RTC_ByteToBcd2
 1863              	.LVL119:
1789:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1864              		.loc 1 1789 79 view .LVU647
 1865 0058 47EA0067 		orr	r7, r7, r0, lsl #24
1790:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1866              		.loc 1 1790 89 view .LVU648
 1867 005c 3E43     		orrs	r6, r6, r7
1792:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
ARM GAS  /tmp/ccteFmy9.s 			page 88


 1868              		.loc 1 1792 32 view .LVU649
 1869 005e 6B69     		ldr	r3, [r5, #20]
1786:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1870              		.loc 1 1786 12 view .LVU650
 1871 0060 1E43     		orrs	r6, r6, r3
 1872              	.LVL120:
 1873              	.L114:
1831:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1874              		.loc 1 1831 3 is_stmt 1 view .LVU651
1831:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1875              		.loc 1 1831 60 is_stmt 0 view .LVU652
 1876 0062 6F68     		ldr	r7, [r5, #4]
1831:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1877              		.loc 1 1831 92 view .LVU653
 1878 0064 EB69     		ldr	r3, [r5, #28]
1831:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1879              		.loc 1 1831 19 view .LVU654
 1880 0066 1F43     		orrs	r7, r7, r3
 1881              	.LVL121:
1834:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1882              		.loc 1 1834 3 is_stmt 1 view .LVU655
1834:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1883              		.loc 1 1834 3 view .LVU656
 1884 0068 2368     		ldr	r3, [r4]
 1885 006a CA22     		movs	r2, #202
 1886 006c 5A62     		str	r2, [r3, #36]
1834:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1887              		.loc 1 1834 3 view .LVU657
 1888 006e 2368     		ldr	r3, [r4]
 1889 0070 5322     		movs	r2, #83
 1890 0072 5A62     		str	r2, [r3, #36]
1834:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1891              		.loc 1 1834 3 view .LVU658
1837:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1892              		.loc 1 1837 3 view .LVU659
1837:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1893              		.loc 1 1837 13 is_stmt 0 view .LVU660
 1894 0074 AB6A     		ldr	r3, [r5, #40]
1837:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1895              		.loc 1 1837 6 view .LVU661
 1896 0076 B3F5807F 		cmp	r3, #256
 1897 007a 41D0     		beq	.L124
 1898              	.LBB4:
1875:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
 1899              		.loc 1 1875 5 is_stmt 1 view .LVU662
 1900 007c 2268     		ldr	r2, [r4]
 1901 007e 9368     		ldr	r3, [r2, #8]
 1902 0080 23F40073 		bic	r3, r3, #512
 1903 0084 9360     		str	r3, [r2, #8]
1877:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
 1904              		.loc 1 1877 5 view .LVU663
 1905 0086 2268     		ldr	r2, [r4]
 1906 0088 D368     		ldr	r3, [r2, #12]
 1907 008a DBB2     		uxtb	r3, r3
 1908 008c 63F42073 		orn	r3, r3, #640
 1909 0090 D360     		str	r3, [r2, #12]
1879:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 89


 1910              		.loc 1 1879 5 view .LVU664
 1911 0092 2268     		ldr	r2, [r4]
 1912 0094 9368     		ldr	r3, [r2, #8]
 1913 0096 23F40053 		bic	r3, r3, #8192
 1914 009a 9360     		str	r3, [r2, #8]
1882:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1915              		.loc 1 1882 5 view .LVU665
1882:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1916              		.loc 1 1882 26 is_stmt 0 view .LVU666
 1917 009c FFF7FEFF 		bl	HAL_GetTick
 1918              	.LVL122:
 1919 00a0 0546     		mov	r5, r0
 1920              	.LVL123:
1884:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1921              		.loc 1 1884 5 is_stmt 1 view .LVU667
 1922              	.L120:
1884:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1923              		.loc 1 1884 60 view .LVU668
1884:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1924              		.loc 1 1884 12 is_stmt 0 view .LVU669
 1925 00a2 2368     		ldr	r3, [r4]
 1926 00a4 DA68     		ldr	r2, [r3, #12]
1884:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1927              		.loc 1 1884 60 view .LVU670
 1928 00a6 12F0020F 		tst	r2, #2
 1929 00aa 5AD1     		bne	.L125
1886:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1930              		.loc 1 1886 7 is_stmt 1 view .LVU671
1886:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1931              		.loc 1 1886 12 is_stmt 0 view .LVU672
 1932 00ac FFF7FEFF 		bl	HAL_GetTick
 1933              	.LVL124:
1886:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1934              		.loc 1 1886 26 view .LVU673
 1935 00b0 401B     		subs	r0, r0, r5
1886:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1936              		.loc 1 1886 10 view .LVU674
 1937 00b2 B0F57A7F 		cmp	r0, #1000
 1938 00b6 F4D9     		bls	.L120
1889:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1939              		.loc 1 1889 9 is_stmt 1 view .LVU675
1889:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1940              		.loc 1 1889 9 view .LVU676
 1941 00b8 2368     		ldr	r3, [r4]
 1942 00ba FF22     		movs	r2, #255
 1943 00bc 5A62     		str	r2, [r3, #36]
1889:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1944              		.loc 1 1889 9 view .LVU677
1891:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1945              		.loc 1 1891 9 view .LVU678
1891:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1946              		.loc 1 1891 21 is_stmt 0 view .LVU679
 1947 00be 0320     		movs	r0, #3
 1948 00c0 84F82100 		strb	r0, [r4, #33]
1894:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1949              		.loc 1 1894 9 is_stmt 1 view .LVU680
1894:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 90


 1950              		.loc 1 1894 9 view .LVU681
 1951 00c4 0023     		movs	r3, #0
 1952 00c6 84F82030 		strb	r3, [r4, #32]
1894:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1953              		.loc 1 1894 9 view .LVU682
1896:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1954              		.loc 1 1896 9 view .LVU683
1896:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1955              		.loc 1 1896 16 is_stmt 0 view .LVU684
 1956 00ca 5BE0     		b	.L111
 1957              	.LVL125:
 1958              	.L112:
1896:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1959              		.loc 1 1896 16 view .LVU685
 1960              	.LBE4:
1796:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1961              		.loc 1 1796 5 is_stmt 1 view .LVU686
1796:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1962              		.loc 1 1796 14 is_stmt 0 view .LVU687
 1963 00cc 0368     		ldr	r3, [r0]
1796:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1964              		.loc 1 1796 24 view .LVU688
 1965 00ce 9B68     		ldr	r3, [r3, #8]
1796:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1966              		.loc 1 1796 8 view .LVU689
 1967 00d0 13F0400F 		tst	r3, #64
 1968 00d4 01D1     		bne	.L115
1803:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1969              		.loc 1 1803 7 is_stmt 1 view .LVU690
1803:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1970              		.loc 1 1803 36 is_stmt 0 view .LVU691
 1971 00d6 0023     		movs	r3, #0
 1972 00d8 CB70     		strb	r3, [r1, #3]
 1973              	.L115:
1804:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 1974              		.loc 1 1804 7 is_stmt 1 view .LVU692
1807:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 1975              		.loc 1 1807 5 view .LVU693
1808:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1976              		.loc 1 1808 5 view .LVU694
1821:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1977              		.loc 1 1821 5 view .LVU695
1821:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1978              		.loc 1 1821 44 is_stmt 0 view .LVU696
 1979 00da 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
1822:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1980              		.loc 1 1822 44 view .LVU697
 1981 00dc 6E78     		ldrb	r6, [r5, #1]	@ zero_extendqisi2
1822:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1982              		.loc 1 1822 54 view .LVU698
 1983 00de 3602     		lsls	r6, r6, #8
1821:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1984              		.loc 1 1821 74 view .LVU699
 1985 00e0 46EA0346 		orr	r6, r6, r3, lsl #16
1823:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1986              		.loc 1 1823 44 view .LVU700
 1987 00e4 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccteFmy9.s 			page 91


1822:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1988              		.loc 1 1822 77 view .LVU701
 1989 00e6 1E43     		orrs	r6, r6, r3
1824:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1990              		.loc 1 1824 44 view .LVU702
 1991 00e8 EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2
1823:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1992              		.loc 1 1823 76 view .LVU703
 1993 00ea 46EA8356 		orr	r6, r6, r3, lsl #22
1825:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1994              		.loc 1 1825 33 view .LVU704
 1995 00ee 95F82430 		ldrb	r3, [r5, #36]	@ zero_extendqisi2
1824:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1996              		.loc 1 1824 79 view .LVU705
 1997 00f2 46EA0366 		orr	r6, r6, r3, lsl #24
1826:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 1998              		.loc 1 1826 32 view .LVU706
 1999 00f6 2B6A     		ldr	r3, [r5, #32]
1825:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 2000              		.loc 1 1825 75 view .LVU707
 2001 00f8 1E43     		orrs	r6, r6, r3
1827:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2002              		.loc 1 1827 32 view .LVU708
 2003 00fa 6B69     		ldr	r3, [r5, #20]
1821:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2004              		.loc 1 1821 12 view .LVU709
 2005 00fc 1E43     		orrs	r6, r6, r3
 2006              	.LVL126:
1821:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2007              		.loc 1 1821 12 view .LVU710
 2008 00fe B0E7     		b	.L114
 2009              	.LVL127:
 2010              	.L124:
 2011              	.LBB5:
1840:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
 2012              		.loc 1 1840 5 is_stmt 1 view .LVU711
 2013 0100 2268     		ldr	r2, [r4]
 2014 0102 9368     		ldr	r3, [r2, #8]
 2015 0104 23F48073 		bic	r3, r3, #256
 2016 0108 9360     		str	r3, [r2, #8]
1842:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
 2017              		.loc 1 1842 5 view .LVU712
 2018 010a 2268     		ldr	r2, [r4]
 2019 010c D368     		ldr	r3, [r2, #12]
 2020 010e DBB2     		uxtb	r3, r3
 2021 0110 63F4C073 		orn	r3, r3, #384
 2022 0114 D360     		str	r3, [r2, #12]
1844:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2023              		.loc 1 1844 5 view .LVU713
 2024 0116 2268     		ldr	r2, [r4]
 2025 0118 9368     		ldr	r3, [r2, #8]
 2026 011a 23F48053 		bic	r3, r3, #4096
 2027 011e 9360     		str	r3, [r2, #8]
1847:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 2028              		.loc 1 1847 5 view .LVU714
1847:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 2029              		.loc 1 1847 26 is_stmt 0 view .LVU715
ARM GAS  /tmp/ccteFmy9.s 			page 92


 2030 0120 FFF7FEFF 		bl	HAL_GetTick
 2031              	.LVL128:
 2032 0124 0546     		mov	r5, r0
 2033              	.LVL129:
1849:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2034              		.loc 1 1849 5 is_stmt 1 view .LVU716
 2035              	.L117:
1849:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2036              		.loc 1 1849 60 view .LVU717
1849:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2037              		.loc 1 1849 12 is_stmt 0 view .LVU718
 2038 0126 2368     		ldr	r3, [r4]
 2039 0128 DA68     		ldr	r2, [r3, #12]
1849:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2040              		.loc 1 1849 60 view .LVU719
 2041 012a 12F0010F 		tst	r2, #1
 2042 012e 0FD1     		bne	.L126
1851:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2043              		.loc 1 1851 7 is_stmt 1 view .LVU720
1851:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2044              		.loc 1 1851 12 is_stmt 0 view .LVU721
 2045 0130 FFF7FEFF 		bl	HAL_GetTick
 2046              	.LVL130:
1851:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2047              		.loc 1 1851 26 view .LVU722
 2048 0134 401B     		subs	r0, r0, r5
1851:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2049              		.loc 1 1851 10 view .LVU723
 2050 0136 B0F57A7F 		cmp	r0, #1000
 2051 013a F4D9     		bls	.L117
1854:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2052              		.loc 1 1854 9 is_stmt 1 view .LVU724
1854:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2053              		.loc 1 1854 9 view .LVU725
 2054 013c 2368     		ldr	r3, [r4]
 2055 013e FF22     		movs	r2, #255
 2056 0140 5A62     		str	r2, [r3, #36]
1854:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2057              		.loc 1 1854 9 view .LVU726
1856:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2058              		.loc 1 1856 9 view .LVU727
1856:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2059              		.loc 1 1856 21 is_stmt 0 view .LVU728
 2060 0142 0320     		movs	r0, #3
 2061 0144 84F82100 		strb	r0, [r4, #33]
1859:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2062              		.loc 1 1859 9 is_stmt 1 view .LVU729
1859:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2063              		.loc 1 1859 9 view .LVU730
 2064 0148 0023     		movs	r3, #0
 2065 014a 84F82030 		strb	r3, [r4, #32]
1859:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2066              		.loc 1 1859 9 view .LVU731
1861:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 2067              		.loc 1 1861 9 view .LVU732
1861:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 2068              		.loc 1 1861 16 is_stmt 0 view .LVU733
ARM GAS  /tmp/ccteFmy9.s 			page 93


 2069 014e 19E0     		b	.L111
 2070              	.L126:
1866:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 2071              		.loc 1 1866 5 is_stmt 1 view .LVU734
1866:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 2072              		.loc 1 1866 28 is_stmt 0 view .LVU735
 2073 0150 DE61     		str	r6, [r3, #28]
1868:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2074              		.loc 1 1868 5 is_stmt 1 view .LVU736
1868:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2075              		.loc 1 1868 9 is_stmt 0 view .LVU737
 2076 0152 2368     		ldr	r3, [r4]
1868:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2077              		.loc 1 1868 30 view .LVU738
 2078 0154 5F64     		str	r7, [r3, #68]
1870:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2079              		.loc 1 1870 5 is_stmt 1 view .LVU739
 2080 0156 2268     		ldr	r2, [r4]
 2081 0158 9368     		ldr	r3, [r2, #8]
 2082 015a 43F48073 		orr	r3, r3, #256
 2083 015e 9360     		str	r3, [r2, #8]
 2084              	.LBE5:
 2085 0160 07E0     		b	.L119
 2086              	.LVL131:
 2087              	.L125:
 2088              	.LBB6:
1901:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 2089              		.loc 1 1901 5 view .LVU740
1901:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 2090              		.loc 1 1901 28 is_stmt 0 view .LVU741
 2091 0162 1E62     		str	r6, [r3, #32]
1903:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2092              		.loc 1 1903 5 is_stmt 1 view .LVU742
1903:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2093              		.loc 1 1903 9 is_stmt 0 view .LVU743
 2094 0164 2368     		ldr	r3, [r4]
1903:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2095              		.loc 1 1903 30 view .LVU744
 2096 0166 9F64     		str	r7, [r3, #72]
1905:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2097              		.loc 1 1905 5 is_stmt 1 view .LVU745
 2098 0168 2268     		ldr	r2, [r4]
 2099 016a 9368     		ldr	r3, [r2, #8]
 2100 016c 43F40073 		orr	r3, r3, #512
 2101 0170 9360     		str	r3, [r2, #8]
 2102              	.LVL132:
 2103              	.L119:
1905:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2104              		.loc 1 1905 5 is_stmt 0 view .LVU746
 2105              	.LBE6:
1909:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2106              		.loc 1 1909 3 is_stmt 1 view .LVU747
1909:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2107              		.loc 1 1909 3 view .LVU748
 2108 0172 2368     		ldr	r3, [r4]
 2109 0174 FF22     		movs	r2, #255
 2110 0176 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/ccteFmy9.s 			page 94


1909:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2111              		.loc 1 1909 3 view .LVU749
1912:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2112              		.loc 1 1912 3 view .LVU750
1912:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2113              		.loc 1 1912 15 is_stmt 0 view .LVU751
 2114 0178 0123     		movs	r3, #1
 2115 017a 84F82130 		strb	r3, [r4, #33]
1915:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2116              		.loc 1 1915 3 is_stmt 1 view .LVU752
1915:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2117              		.loc 1 1915 3 view .LVU753
 2118 017e 0020     		movs	r0, #0
 2119 0180 84F82000 		strb	r0, [r4, #32]
1915:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2120              		.loc 1 1915 3 view .LVU754
1917:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2121              		.loc 1 1917 3 view .LVU755
 2122              	.LVL133:
 2123              	.L111:
1918:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2124              		.loc 1 1918 1 is_stmt 0 view .LVU756
 2125 0184 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2126              	.LVL134:
 2127              	.L122:
1759:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2128              		.loc 1 1759 3 view .LVU757
 2129 0186 0220     		movs	r0, #2
 2130              	.LVL135:
1759:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2131              		.loc 1 1759 3 view .LVU758
 2132 0188 FCE7     		b	.L111
 2133              		.cfi_endproc
 2134              	.LFE296:
 2136              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 2137              		.align	1
 2138              		.global	HAL_RTC_SetAlarm_IT
 2139              		.syntax unified
 2140              		.thumb
 2141              		.thumb_func
 2143              	HAL_RTC_SetAlarm_IT:
 2144              	.LVL136:
 2145              	.LFB297:
1934:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
 2146              		.loc 1 1934 1 is_stmt 1 view -0
 2147              		.cfi_startproc
 2148              		@ args = 0, pretend = 0, frame = 0
 2149              		@ frame_needed = 0, uses_anonymous_args = 0
1934:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
 2150              		.loc 1 1934 1 is_stmt 0 view .LVU760
 2151 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2152              	.LCFI14:
 2153              		.cfi_def_cfa_offset 24
 2154              		.cfi_offset 3, -24
 2155              		.cfi_offset 4, -20
 2156              		.cfi_offset 5, -16
 2157              		.cfi_offset 6, -12
ARM GAS  /tmp/ccteFmy9.s 			page 95


 2158              		.cfi_offset 7, -8
 2159              		.cfi_offset 14, -4
1935:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2160              		.loc 1 1935 3 is_stmt 1 view .LVU761
1938:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 2161              		.loc 1 1938 3 view .LVU762
1939:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 2162              		.loc 1 1939 3 view .LVU763
1940:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 2163              		.loc 1 1940 3 view .LVU764
1941:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 2164              		.loc 1 1941 3 view .LVU765
1942:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 2165              		.loc 1 1942 3 view .LVU766
1943:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2166              		.loc 1 1943 3 view .LVU767
1946:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2167              		.loc 1 1946 3 view .LVU768
1946:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2168              		.loc 1 1946 3 view .LVU769
 2169 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2170 0006 012B     		cmp	r3, #1
 2171 0008 00F0C680 		beq	.L139
 2172 000c 0446     		mov	r4, r0
 2173 000e 0D46     		mov	r5, r1
1946:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2174              		.loc 1 1946 3 discriminator 2 view .LVU770
 2175 0010 0123     		movs	r3, #1
 2176 0012 80F82030 		strb	r3, [r0, #32]
1946:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2177              		.loc 1 1946 3 discriminator 2 view .LVU771
1948:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2178              		.loc 1 1948 3 discriminator 2 view .LVU772
1948:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2179              		.loc 1 1948 15 is_stmt 0 discriminator 2 view .LVU773
 2180 0016 0223     		movs	r3, #2
 2181 0018 80F82130 		strb	r3, [r0, #33]
1950:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2182              		.loc 1 1950 3 is_stmt 1 discriminator 2 view .LVU774
1950:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2183              		.loc 1 1950 6 is_stmt 0 discriminator 2 view .LVU775
 2184 001c 002A     		cmp	r2, #0
 2185 001e 50D1     		bne	.L129
1952:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2186              		.loc 1 1952 5 is_stmt 1 view .LVU776
1952:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2187              		.loc 1 1952 14 is_stmt 0 view .LVU777
 2188 0020 0368     		ldr	r3, [r0]
1952:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2189              		.loc 1 1952 24 view .LVU778
 2190 0022 9B68     		ldr	r3, [r3, #8]
1952:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2191              		.loc 1 1952 8 view .LVU779
 2192 0024 13F0400F 		tst	r3, #64
 2193 0028 01D1     		bne	.L130
1959:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 2194              		.loc 1 1959 7 is_stmt 1 view .LVU780
ARM GAS  /tmp/ccteFmy9.s 			page 96


1959:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 2195              		.loc 1 1959 36 is_stmt 0 view .LVU781
 2196 002a 0023     		movs	r3, #0
 2197 002c CB70     		strb	r3, [r1, #3]
 2198              	.L130:
1960:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 2199              		.loc 1 1960 7 is_stmt 1 view .LVU782
1962:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 2200              		.loc 1 1962 5 view .LVU783
1963:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2201              		.loc 1 1963 5 view .LVU784
1965:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2202              		.loc 1 1965 5 view .LVU785
1965:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2203              		.loc 1 1965 15 is_stmt 0 view .LVU786
 2204 002e 2E6A     		ldr	r6, [r5, #32]
1971:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 2205              		.loc 1 1971 7 is_stmt 1 view .LVU787
1974:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2206              		.loc 1 1974 5 view .LVU788
1974:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2207              		.loc 1 1974 26 is_stmt 0 view .LVU789
 2208 0030 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 2209              	.LVL137:
1974:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2210              		.loc 1 1974 26 view .LVU790
 2211 0032 FFF7FEFF 		bl	RTC_ByteToBcd2
 2212              	.LVL138:
1974:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2213              		.loc 1 1974 66 view .LVU791
 2214 0036 0704     		lsls	r7, r0, #16
1975:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 2215              		.loc 1 1975 26 view .LVU792
 2216 0038 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 2217 003a FFF7FEFF 		bl	RTC_ByteToBcd2
 2218              	.LVL139:
1974:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2219              		.loc 1 1974 88 view .LVU793
 2220 003e 47EA0027 		orr	r7, r7, r0, lsl #8
1976:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 2221              		.loc 1 1976 26 view .LVU794
 2222 0042 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 2223 0044 FFF7FEFF 		bl	RTC_ByteToBcd2
 2224              	.LVL140:
1975:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 2225              		.loc 1 1975 91 view .LVU795
 2226 0048 0743     		orrs	r7, r7, r0
1977:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 2227              		.loc 1 1977 44 view .LVU796
 2228 004a EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2
1976:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 2229              		.loc 1 1976 90 view .LVU797
 2230 004c 47EA8357 		orr	r7, r7, r3, lsl #22
1978:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 2231              		.loc 1 1978 26 view .LVU798
 2232 0050 95F82400 		ldrb	r0, [r5, #36]	@ zero_extendqisi2
 2233 0054 FFF7FEFF 		bl	RTC_ByteToBcd2
ARM GAS  /tmp/ccteFmy9.s 			page 97


 2234              	.LVL141:
1977:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 2235              		.loc 1 1977 79 view .LVU799
 2236 0058 47EA0067 		orr	r7, r7, r0, lsl #24
1978:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 2237              		.loc 1 1978 89 view .LVU800
 2238 005c 3E43     		orrs	r6, r6, r7
1980:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2239              		.loc 1 1980 32 view .LVU801
 2240 005e 6B69     		ldr	r3, [r5, #20]
1974:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2241              		.loc 1 1974 12 view .LVU802
 2242 0060 1E43     		orrs	r6, r6, r3
 2243              	.LVL142:
 2244              	.L131:
2018:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2245              		.loc 1 2018 3 is_stmt 1 view .LVU803
2018:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2246              		.loc 1 2018 60 is_stmt 0 view .LVU804
 2247 0062 6F68     		ldr	r7, [r5, #4]
2018:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2248              		.loc 1 2018 92 view .LVU805
 2249 0064 EB69     		ldr	r3, [r5, #28]
2018:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2250              		.loc 1 2018 19 view .LVU806
 2251 0066 1F43     		orrs	r7, r7, r3
 2252              	.LVL143:
2021:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2253              		.loc 1 2021 3 is_stmt 1 view .LVU807
2021:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2254              		.loc 1 2021 3 view .LVU808
 2255 0068 2368     		ldr	r3, [r4]
 2256 006a CA22     		movs	r2, #202
 2257 006c 5A62     		str	r2, [r3, #36]
2021:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2258              		.loc 1 2021 3 view .LVU809
 2259 006e 2368     		ldr	r3, [r4]
 2260 0070 5322     		movs	r2, #83
 2261 0072 5A62     		str	r2, [r3, #36]
2021:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2262              		.loc 1 2021 3 view .LVU810
2024:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2263              		.loc 1 2024 3 view .LVU811
2024:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2264              		.loc 1 2024 13 is_stmt 0 view .LVU812
 2265 0074 AB6A     		ldr	r3, [r5, #40]
2024:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2266              		.loc 1 2024 6 view .LVU813
 2267 0076 B3F5807F 		cmp	r3, #256
 2268 007a 3CD0     		beq	.L141
 2269              	.LBB7:
2063:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2270              		.loc 1 2063 5 is_stmt 1 view .LVU814
 2271 007c 2268     		ldr	r2, [r4]
 2272 007e 9368     		ldr	r3, [r2, #8]
 2273 0080 23F40073 		bic	r3, r3, #512
 2274 0084 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccteFmy9.s 			page 98


2066:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2275              		.loc 1 2066 5 view .LVU815
 2276 0086 2268     		ldr	r2, [r4]
 2277 0088 D368     		ldr	r3, [r2, #12]
 2278 008a DBB2     		uxtb	r3, r3
 2279 008c 63F42073 		orn	r3, r3, #640
 2280 0090 D360     		str	r3, [r2, #12]
2069:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 2281              		.loc 1 2069 5 view .LVU816
2069:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 2282              		.loc 1 2069 26 is_stmt 0 view .LVU817
 2283 0092 FFF7FEFF 		bl	HAL_GetTick
 2284              	.LVL144:
 2285 0096 0546     		mov	r5, r0
 2286              	.LVL145:
2071:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2287              		.loc 1 2071 5 is_stmt 1 view .LVU818
 2288              	.L137:
2071:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2289              		.loc 1 2071 60 view .LVU819
2071:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2290              		.loc 1 2071 12 is_stmt 0 view .LVU820
 2291 0098 2368     		ldr	r3, [r4]
 2292 009a DA68     		ldr	r2, [r3, #12]
2071:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2293              		.loc 1 2071 60 view .LVU821
 2294 009c 12F0020F 		tst	r2, #2
 2295 00a0 5AD1     		bne	.L142
2073:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2296              		.loc 1 2073 7 is_stmt 1 view .LVU822
2073:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2297              		.loc 1 2073 12 is_stmt 0 view .LVU823
 2298 00a2 FFF7FEFF 		bl	HAL_GetTick
 2299              	.LVL146:
2073:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2300              		.loc 1 2073 26 view .LVU824
 2301 00a6 401B     		subs	r0, r0, r5
2073:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2302              		.loc 1 2073 10 view .LVU825
 2303 00a8 B0F57A7F 		cmp	r0, #1000
 2304 00ac F4D9     		bls	.L137
2076:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2305              		.loc 1 2076 9 is_stmt 1 view .LVU826
2076:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2306              		.loc 1 2076 9 view .LVU827
 2307 00ae 2368     		ldr	r3, [r4]
 2308 00b0 FF22     		movs	r2, #255
 2309 00b2 5A62     		str	r2, [r3, #36]
2076:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2310              		.loc 1 2076 9 view .LVU828
2078:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2311              		.loc 1 2078 9 view .LVU829
2078:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2312              		.loc 1 2078 21 is_stmt 0 view .LVU830
 2313 00b4 0320     		movs	r0, #3
 2314 00b6 84F82100 		strb	r0, [r4, #33]
2081:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccteFmy9.s 			page 99


 2315              		.loc 1 2081 9 is_stmt 1 view .LVU831
2081:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2316              		.loc 1 2081 9 view .LVU832
 2317 00ba 0023     		movs	r3, #0
 2318 00bc 84F82030 		strb	r3, [r4, #32]
2081:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2319              		.loc 1 2081 9 view .LVU833
2083:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 2320              		.loc 1 2083 9 view .LVU834
2083:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 2321              		.loc 1 2083 16 is_stmt 0 view .LVU835
 2322 00c0 69E0     		b	.L128
 2323              	.LVL147:
 2324              	.L129:
2083:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 2325              		.loc 1 2083 16 view .LVU836
 2326              	.LBE7:
1984:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2327              		.loc 1 1984 5 is_stmt 1 view .LVU837
1984:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2328              		.loc 1 1984 14 is_stmt 0 view .LVU838
 2329 00c2 0368     		ldr	r3, [r0]
1984:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2330              		.loc 1 1984 24 view .LVU839
 2331 00c4 9B68     		ldr	r3, [r3, #8]
1984:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2332              		.loc 1 1984 8 view .LVU840
 2333 00c6 13F0400F 		tst	r3, #64
 2334 00ca 01D1     		bne	.L132
1991:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 2335              		.loc 1 1991 7 is_stmt 1 view .LVU841
1991:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 2336              		.loc 1 1991 36 is_stmt 0 view .LVU842
 2337 00cc 0023     		movs	r3, #0
 2338 00ce CB70     		strb	r3, [r1, #3]
 2339              	.L132:
1992:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 2340              		.loc 1 1992 7 is_stmt 1 view .LVU843
1995:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 2341              		.loc 1 1995 5 view .LVU844
1996:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2342              		.loc 1 1996 5 view .LVU845
2009:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2343              		.loc 1 2009 5 view .LVU846
2009:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2344              		.loc 1 2009 44 is_stmt 0 view .LVU847
 2345 00d0 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
2010:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 2346              		.loc 1 2010 44 view .LVU848
 2347 00d2 6E78     		ldrb	r6, [r5, #1]	@ zero_extendqisi2
2010:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 2348              		.loc 1 2010 54 view .LVU849
 2349 00d4 3602     		lsls	r6, r6, #8
2009:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2350              		.loc 1 2009 74 view .LVU850
 2351 00d6 46EA0346 		orr	r6, r6, r3, lsl #16
2011:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
ARM GAS  /tmp/ccteFmy9.s 			page 100


 2352              		.loc 1 2011 44 view .LVU851
 2353 00da AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
2010:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 2354              		.loc 1 2010 77 view .LVU852
 2355 00dc 1E43     		orrs	r6, r6, r3
2012:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 2356              		.loc 1 2012 44 view .LVU853
 2357 00de EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2
2011:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 2358              		.loc 1 2011 76 view .LVU854
 2359 00e0 46EA8356 		orr	r6, r6, r3, lsl #22
2013:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 2360              		.loc 1 2013 33 view .LVU855
 2361 00e4 95F82430 		ldrb	r3, [r5, #36]	@ zero_extendqisi2
2012:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 2362              		.loc 1 2012 79 view .LVU856
 2363 00e8 46EA0366 		orr	r6, r6, r3, lsl #24
2014:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 2364              		.loc 1 2014 32 view .LVU857
 2365 00ec 2B6A     		ldr	r3, [r5, #32]
2013:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 2366              		.loc 1 2013 75 view .LVU858
 2367 00ee 1E43     		orrs	r6, r6, r3
2015:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2368              		.loc 1 2015 32 view .LVU859
 2369 00f0 6B69     		ldr	r3, [r5, #20]
2009:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2370              		.loc 1 2009 12 view .LVU860
 2371 00f2 1E43     		orrs	r6, r6, r3
 2372              	.LVL148:
2009:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 2373              		.loc 1 2009 12 view .LVU861
 2374 00f4 B5E7     		b	.L131
 2375              	.LVL149:
 2376              	.L141:
 2377              	.LBB8:
2027:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2378              		.loc 1 2027 5 is_stmt 1 view .LVU862
 2379 00f6 2268     		ldr	r2, [r4]
 2380 00f8 9368     		ldr	r3, [r2, #8]
 2381 00fa 23F48073 		bic	r3, r3, #256
 2382 00fe 9360     		str	r3, [r2, #8]
2030:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2383              		.loc 1 2030 5 view .LVU863
 2384 0100 2268     		ldr	r2, [r4]
 2385 0102 D368     		ldr	r3, [r2, #12]
 2386 0104 DBB2     		uxtb	r3, r3
 2387 0106 63F4C073 		orn	r3, r3, #384
 2388 010a D360     		str	r3, [r2, #12]
2033:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 2389              		.loc 1 2033 5 view .LVU864
2033:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 2390              		.loc 1 2033 26 is_stmt 0 view .LVU865
 2391 010c FFF7FEFF 		bl	HAL_GetTick
 2392              	.LVL150:
 2393 0110 0546     		mov	r5, r0
 2394              	.LVL151:
ARM GAS  /tmp/ccteFmy9.s 			page 101


2035:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2395              		.loc 1 2035 5 is_stmt 1 view .LVU866
 2396              	.L134:
2035:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2397              		.loc 1 2035 60 view .LVU867
2035:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2398              		.loc 1 2035 12 is_stmt 0 view .LVU868
 2399 0112 2368     		ldr	r3, [r4]
 2400 0114 DA68     		ldr	r2, [r3, #12]
2035:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2401              		.loc 1 2035 60 view .LVU869
 2402 0116 12F0010F 		tst	r2, #1
 2403 011a 0FD1     		bne	.L143
2037:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2404              		.loc 1 2037 7 is_stmt 1 view .LVU870
2037:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2405              		.loc 1 2037 12 is_stmt 0 view .LVU871
 2406 011c FFF7FEFF 		bl	HAL_GetTick
 2407              	.LVL152:
2037:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2408              		.loc 1 2037 26 view .LVU872
 2409 0120 401B     		subs	r0, r0, r5
2037:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 2410              		.loc 1 2037 10 view .LVU873
 2411 0122 B0F57A7F 		cmp	r0, #1000
 2412 0126 F4D9     		bls	.L134
2040:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2413              		.loc 1 2040 9 is_stmt 1 view .LVU874
2040:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2414              		.loc 1 2040 9 view .LVU875
 2415 0128 2368     		ldr	r3, [r4]
 2416 012a FF22     		movs	r2, #255
 2417 012c 5A62     		str	r2, [r3, #36]
2040:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2418              		.loc 1 2040 9 view .LVU876
2042:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2419              		.loc 1 2042 9 view .LVU877
2042:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2420              		.loc 1 2042 21 is_stmt 0 view .LVU878
 2421 012e 0320     		movs	r0, #3
 2422 0130 84F82100 		strb	r0, [r4, #33]
2045:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2423              		.loc 1 2045 9 is_stmt 1 view .LVU879
2045:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2424              		.loc 1 2045 9 view .LVU880
 2425 0134 0023     		movs	r3, #0
 2426 0136 84F82030 		strb	r3, [r4, #32]
2045:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2427              		.loc 1 2045 9 view .LVU881
2047:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 2428              		.loc 1 2047 9 view .LVU882
2047:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 2429              		.loc 1 2047 16 is_stmt 0 view .LVU883
 2430 013a 2CE0     		b	.L128
 2431              	.L143:
2052:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 2432              		.loc 1 2052 5 is_stmt 1 view .LVU884
ARM GAS  /tmp/ccteFmy9.s 			page 102


2052:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 2433              		.loc 1 2052 28 is_stmt 0 view .LVU885
 2434 013c DE61     		str	r6, [r3, #28]
2054:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2435              		.loc 1 2054 5 is_stmt 1 view .LVU886
2054:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2436              		.loc 1 2054 9 is_stmt 0 view .LVU887
 2437 013e 2368     		ldr	r3, [r4]
2054:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2438              		.loc 1 2054 30 view .LVU888
 2439 0140 5F64     		str	r7, [r3, #68]
2056:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 2440              		.loc 1 2056 5 is_stmt 1 view .LVU889
 2441 0142 2268     		ldr	r2, [r4]
 2442 0144 9368     		ldr	r3, [r2, #8]
 2443 0146 43F48073 		orr	r3, r3, #256
 2444 014a 9360     		str	r3, [r2, #8]
2058:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2445              		.loc 1 2058 5 view .LVU890
 2446 014c 2268     		ldr	r2, [r4]
 2447 014e 9368     		ldr	r3, [r2, #8]
 2448 0150 43F48053 		orr	r3, r3, #4096
 2449 0154 9360     		str	r3, [r2, #8]
 2450              	.LBE8:
 2451 0156 0CE0     		b	.L136
 2452              	.LVL153:
 2453              	.L142:
 2454              	.LBB9:
2088:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 2455              		.loc 1 2088 5 view .LVU891
2088:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 2456              		.loc 1 2088 28 is_stmt 0 view .LVU892
 2457 0158 1E62     		str	r6, [r3, #32]
2090:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2458              		.loc 1 2090 5 is_stmt 1 view .LVU893
2090:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2459              		.loc 1 2090 9 is_stmt 0 view .LVU894
 2460 015a 2368     		ldr	r3, [r4]
2090:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2461              		.loc 1 2090 30 view .LVU895
 2462 015c 9F64     		str	r7, [r3, #72]
2092:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 2463              		.loc 1 2092 5 is_stmt 1 view .LVU896
 2464 015e 2268     		ldr	r2, [r4]
 2465 0160 9368     		ldr	r3, [r2, #8]
 2466 0162 43F40073 		orr	r3, r3, #512
 2467 0166 9360     		str	r3, [r2, #8]
2094:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2468              		.loc 1 2094 5 view .LVU897
 2469 0168 2268     		ldr	r2, [r4]
 2470 016a 9368     		ldr	r3, [r2, #8]
 2471 016c 43F40053 		orr	r3, r3, #8192
 2472 0170 9360     		str	r3, [r2, #8]
 2473              	.LVL154:
 2474              	.L136:
2094:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2475              		.loc 1 2094 5 is_stmt 0 view .LVU898
ARM GAS  /tmp/ccteFmy9.s 			page 103


 2476              	.LBE9:
2098:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
 2477              		.loc 1 2098 3 is_stmt 1 view .LVU899
 2478 0172 0A4B     		ldr	r3, .L144
 2479 0174 1A68     		ldr	r2, [r3]
 2480 0176 42F48022 		orr	r2, r2, #262144
 2481 017a 1A60     		str	r2, [r3]
2099:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2482              		.loc 1 2099 3 view .LVU900
 2483 017c 9A68     		ldr	r2, [r3, #8]
 2484 017e 42F48022 		orr	r2, r2, #262144
 2485 0182 9A60     		str	r2, [r3, #8]
2102:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2486              		.loc 1 2102 3 view .LVU901
2102:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2487              		.loc 1 2102 3 view .LVU902
 2488 0184 2368     		ldr	r3, [r4]
 2489 0186 FF22     		movs	r2, #255
 2490 0188 5A62     		str	r2, [r3, #36]
2102:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2491              		.loc 1 2102 3 view .LVU903
2104:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2492              		.loc 1 2104 3 view .LVU904
2104:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2493              		.loc 1 2104 15 is_stmt 0 view .LVU905
 2494 018a 0123     		movs	r3, #1
 2495 018c 84F82130 		strb	r3, [r4, #33]
2107:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2496              		.loc 1 2107 3 is_stmt 1 view .LVU906
2107:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2497              		.loc 1 2107 3 view .LVU907
 2498 0190 0020     		movs	r0, #0
 2499 0192 84F82000 		strb	r0, [r4, #32]
2107:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2500              		.loc 1 2107 3 view .LVU908
2109:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2501              		.loc 1 2109 3 view .LVU909
 2502              	.LVL155:
 2503              	.L128:
2110:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2504              		.loc 1 2110 1 is_stmt 0 view .LVU910
 2505 0196 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2506              	.LVL156:
 2507              	.L139:
1946:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2508              		.loc 1 1946 3 view .LVU911
 2509 0198 0220     		movs	r0, #2
 2510              	.LVL157:
1946:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2511              		.loc 1 1946 3 view .LVU912
 2512 019a FCE7     		b	.L128
 2513              	.L145:
 2514              		.align	2
 2515              	.L144:
 2516 019c 00040140 		.word	1073808384
 2517              		.cfi_endproc
 2518              	.LFE297:
ARM GAS  /tmp/ccteFmy9.s 			page 104


 2520              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 2521              		.align	1
 2522              		.global	RTC_Bcd2ToByte
 2523              		.syntax unified
 2524              		.thumb
 2525              		.thumb_func
 2527              	RTC_Bcd2ToByte:
 2528              	.LVL158:
 2529              	.LFB313:
2690:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2691:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2692:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
2693:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Value BCD value to be converted
2694:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval Converted word
2695:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2696:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** uint8_t RTC_Bcd2ToByte(uint8_t Value)
2697:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 2530              		.loc 1 2697 1 is_stmt 1 view -0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 0
 2533              		@ frame_needed = 0, uses_anonymous_args = 0
 2534              		@ link register save eliminated.
2698:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint8_t tmp;
 2535              		.loc 1 2698 3 view .LVU914
2699:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   tmp = ((Value & 0xF0U) >> 4U) * 10U;
 2536              		.loc 1 2699 3 view .LVU915
 2537              		.loc 1 2699 26 is_stmt 0 view .LVU916
 2538 0000 0309     		lsrs	r3, r0, #4
 2539              		.loc 1 2699 7 view .LVU917
 2540 0002 03EB8303 		add	r3, r3, r3, lsl #2
 2541              	.LVL159:
2700:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return (tmp + (Value & 0x0FU));
 2542              		.loc 1 2700 3 is_stmt 1 view .LVU918
 2543              		.loc 1 2700 24 is_stmt 0 view .LVU919
 2544 0006 00F00F00 		and	r0, r0, #15
 2545              	.LVL160:
 2546              		.loc 1 2700 15 view .LVU920
 2547 000a 00EB4300 		add	r0, r0, r3, lsl #1
2701:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2548              		.loc 1 2701 1 view .LVU921
 2549 000e C0B2     		uxtb	r0, r0
 2550 0010 7047     		bx	lr
 2551              		.cfi_endproc
 2552              	.LFE313:
 2554              		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 2555              		.align	1
 2556              		.global	HAL_RTC_GetTime
 2557              		.syntax unified
 2558              		.thumb
 2559              		.thumb_func
 2561              	HAL_RTC_GetTime:
 2562              	.LVL161:
 2563              	.LFB293:
1565:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 2564              		.loc 1 1565 1 is_stmt 1 view -0
 2565              		.cfi_startproc
 2566              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccteFmy9.s 			page 105


 2567              		@ frame_needed = 0, uses_anonymous_args = 0
1565:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 2568              		.loc 1 1565 1 is_stmt 0 view .LVU923
 2569 0000 70B5     		push	{r4, r5, r6, lr}
 2570              	.LCFI15:
 2571              		.cfi_def_cfa_offset 16
 2572              		.cfi_offset 4, -16
 2573              		.cfi_offset 5, -12
 2574              		.cfi_offset 6, -8
 2575              		.cfi_offset 14, -4
1566:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2576              		.loc 1 1566 3 is_stmt 1 view .LVU924
1569:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2577              		.loc 1 1569 3 view .LVU925
1572:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2578              		.loc 1 1572 3 view .LVU926
1572:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2579              		.loc 1 1572 38 is_stmt 0 view .LVU927
 2580 0002 0368     		ldr	r3, [r0]
1572:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2581              		.loc 1 1572 48 view .LVU928
 2582 0004 9B6A     		ldr	r3, [r3, #40]
1572:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2583              		.loc 1 1572 21 view .LVU929
 2584 0006 4B60     		str	r3, [r1, #4]
1575:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2585              		.loc 1 1575 3 is_stmt 1 view .LVU930
1575:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2586              		.loc 1 1575 42 is_stmt 0 view .LVU931
 2587 0008 0368     		ldr	r3, [r0]
1575:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2588              		.loc 1 1575 52 view .LVU932
 2589 000a 1B69     		ldr	r3, [r3, #16]
1575:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2590              		.loc 1 1575 27 view .LVU933
 2591 000c C3F30E03 		ubfx	r3, r3, #0, #15
1575:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2592              		.loc 1 1575 25 view .LVU934
 2593 0010 8B60     		str	r3, [r1, #8]
1578:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2594              		.loc 1 1578 3 is_stmt 1 view .LVU935
1578:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2595              		.loc 1 1578 27 is_stmt 0 view .LVU936
 2596 0012 0368     		ldr	r3, [r0]
1578:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2597              		.loc 1 1578 37 view .LVU937
 2598 0014 1B68     		ldr	r3, [r3]
 2599              	.LVL162:
1581:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
 2600              		.loc 1 1581 3 is_stmt 1 view .LVU938
1581:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
 2601              		.loc 1 1581 18 is_stmt 0 view .LVU939
 2602 0016 C3F30540 		ubfx	r0, r3, #16, #6
 2603              	.LVL163:
1581:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
 2604              		.loc 1 1581 16 view .LVU940
 2605 001a 0870     		strb	r0, [r1]
ARM GAS  /tmp/ccteFmy9.s 			page 106


1582:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)((tmpreg & (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos);
 2606              		.loc 1 1582 3 is_stmt 1 view .LVU941
1582:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)((tmpreg & (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos);
 2607              		.loc 1 1582 20 is_stmt 0 view .LVU942
 2608 001c C3F30626 		ubfx	r6, r3, #8, #7
1582:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)((tmpreg & (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos);
 2609              		.loc 1 1582 18 view .LVU943
 2610 0020 4E70     		strb	r6, [r1, #1]
1583:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> RTC_TR_PM_Pos);
 2611              		.loc 1 1583 3 is_stmt 1 view .LVU944
1583:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> RTC_TR_PM_Pos);
 2612              		.loc 1 1583 20 is_stmt 0 view .LVU945
 2613 0022 03F07F05 		and	r5, r3, #127
1583:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> RTC_TR_PM_Pos);
 2614              		.loc 1 1583 18 view .LVU946
 2615 0026 8D70     		strb	r5, [r1, #2]
1584:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2616              		.loc 1 1584 3 is_stmt 1 view .LVU947
1584:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2617              		.loc 1 1584 23 is_stmt 0 view .LVU948
 2618 0028 C3F38053 		ubfx	r3, r3, #22, #1
 2619              	.LVL164:
1584:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2620              		.loc 1 1584 21 view .LVU949
 2621 002c CB70     		strb	r3, [r1, #3]
1587:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2622              		.loc 1 1587 3 is_stmt 1 view .LVU950
1587:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2623              		.loc 1 1587 6 is_stmt 0 view .LVU951
 2624 002e 5AB9     		cbnz	r2, .L148
 2625 0030 0C46     		mov	r4, r1
1590:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 2626              		.loc 1 1590 5 is_stmt 1 view .LVU952
1590:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 2627              		.loc 1 1590 29 is_stmt 0 view .LVU953
 2628 0032 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2629              	.LVL165:
1590:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 2630              		.loc 1 1590 18 view .LVU954
 2631 0036 2070     		strb	r0, [r4]
1591:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
 2632              		.loc 1 1591 5 is_stmt 1 view .LVU955
1591:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
 2633              		.loc 1 1591 31 is_stmt 0 view .LVU956
 2634 0038 3046     		mov	r0, r6
 2635 003a FFF7FEFF 		bl	RTC_Bcd2ToByte
 2636              	.LVL166:
1591:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
 2637              		.loc 1 1591 20 view .LVU957
 2638 003e 6070     		strb	r0, [r4, #1]
1592:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2639              		.loc 1 1592 5 is_stmt 1 view .LVU958
1592:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2640              		.loc 1 1592 31 is_stmt 0 view .LVU959
 2641 0040 2846     		mov	r0, r5
 2642 0042 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2643              	.LVL167:
ARM GAS  /tmp/ccteFmy9.s 			page 107


1592:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2644              		.loc 1 1592 20 view .LVU960
 2645 0046 A070     		strb	r0, [r4, #2]
 2646              	.LVL168:
 2647              	.L148:
1595:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2648              		.loc 1 1595 3 is_stmt 1 view .LVU961
1596:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2649              		.loc 1 1596 1 is_stmt 0 view .LVU962
 2650 0048 0020     		movs	r0, #0
 2651 004a 70BD     		pop	{r4, r5, r6, pc}
 2652              		.cfi_endproc
 2653              	.LFE293:
 2655              		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 2656              		.align	1
 2657              		.global	HAL_RTC_GetDate
 2658              		.syntax unified
 2659              		.thumb
 2660              		.thumb_func
 2662              	HAL_RTC_GetDate:
 2663              	.LVL169:
 2664              	.LFB295:
1693:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
 2665              		.loc 1 1693 1 is_stmt 1 view -0
 2666              		.cfi_startproc
 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
1693:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
 2669              		.loc 1 1693 1 is_stmt 0 view .LVU964
 2670 0000 70B5     		push	{r4, r5, r6, lr}
 2671              	.LCFI16:
 2672              		.cfi_def_cfa_offset 16
 2673              		.cfi_offset 4, -16
 2674              		.cfi_offset 5, -12
 2675              		.cfi_offset 6, -8
 2676              		.cfi_offset 14, -4
1694:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2677              		.loc 1 1694 3 is_stmt 1 view .LVU965
1697:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2678              		.loc 1 1697 3 view .LVU966
1700:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2679              		.loc 1 1700 3 view .LVU967
1700:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2680              		.loc 1 1700 31 is_stmt 0 view .LVU968
 2681 0002 0368     		ldr	r3, [r0]
1700:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2682              		.loc 1 1700 41 view .LVU969
 2683 0004 5B68     		ldr	r3, [r3, #4]
 2684              	.LVL170:
1703:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
 2685              		.loc 1 1703 3 is_stmt 1 view .LVU970
1703:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
 2686              		.loc 1 1703 17 is_stmt 0 view .LVU971
 2687 0006 C3F30740 		ubfx	r0, r3, #16, #8
 2688              	.LVL171:
1703:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
 2689              		.loc 1 1703 15 view .LVU972
ARM GAS  /tmp/ccteFmy9.s 			page 108


 2690 000a C870     		strb	r0, [r1, #3]
1704:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Date = (uint8_t)((datetmpreg & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos);
 2691              		.loc 1 1704 3 is_stmt 1 view .LVU973
1704:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Date = (uint8_t)((datetmpreg & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos);
 2692              		.loc 1 1704 18 is_stmt 0 view .LVU974
 2693 000c C3F30426 		ubfx	r6, r3, #8, #5
1704:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Date = (uint8_t)((datetmpreg & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos);
 2694              		.loc 1 1704 16 view .LVU975
 2695 0010 4E70     		strb	r6, [r1, #1]
1705:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> RTC_DR_WDU_Pos);
 2696              		.loc 1 1705 3 is_stmt 1 view .LVU976
1705:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> RTC_DR_WDU_Pos);
 2697              		.loc 1 1705 17 is_stmt 0 view .LVU977
 2698 0012 03F03F05 		and	r5, r3, #63
1705:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> RTC_DR_WDU_Pos);
 2699              		.loc 1 1705 15 view .LVU978
 2700 0016 8D70     		strb	r5, [r1, #2]
1706:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2701              		.loc 1 1706 3 is_stmt 1 view .LVU979
1706:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2702              		.loc 1 1706 20 is_stmt 0 view .LVU980
 2703 0018 C3F34233 		ubfx	r3, r3, #13, #3
 2704              	.LVL172:
1706:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2705              		.loc 1 1706 18 view .LVU981
 2706 001c 0B70     		strb	r3, [r1]
1709:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2707              		.loc 1 1709 3 is_stmt 1 view .LVU982
1709:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2708              		.loc 1 1709 6 is_stmt 0 view .LVU983
 2709 001e 5AB9     		cbnz	r2, .L151
 2710 0020 0C46     		mov	r4, r1
1712:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 2711              		.loc 1 1712 5 is_stmt 1 view .LVU984
1712:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 2712              		.loc 1 1712 28 is_stmt 0 view .LVU985
 2713 0022 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2714              	.LVL173:
1712:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 2715              		.loc 1 1712 17 view .LVU986
 2716 0026 E070     		strb	r0, [r4, #3]
1713:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
 2717              		.loc 1 1713 5 is_stmt 1 view .LVU987
1713:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
 2718              		.loc 1 1713 29 is_stmt 0 view .LVU988
 2719 0028 3046     		mov	r0, r6
 2720 002a FFF7FEFF 		bl	RTC_Bcd2ToByte
 2721              	.LVL174:
1713:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
 2722              		.loc 1 1713 18 view .LVU989
 2723 002e 6070     		strb	r0, [r4, #1]
1714:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2724              		.loc 1 1714 5 is_stmt 1 view .LVU990
1714:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2725              		.loc 1 1714 28 is_stmt 0 view .LVU991
 2726 0030 2846     		mov	r0, r5
 2727 0032 FFF7FEFF 		bl	RTC_Bcd2ToByte
ARM GAS  /tmp/ccteFmy9.s 			page 109


 2728              	.LVL175:
1714:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2729              		.loc 1 1714 17 view .LVU992
 2730 0036 A070     		strb	r0, [r4, #2]
 2731              	.LVL176:
 2732              	.L151:
1716:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2733              		.loc 1 1716 3 is_stmt 1 view .LVU993
1717:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2734              		.loc 1 1717 1 is_stmt 0 view .LVU994
 2735 0038 0020     		movs	r0, #0
 2736 003a 70BD     		pop	{r4, r5, r6, pc}
 2737              		.cfi_endproc
 2738              	.LFE295:
 2740              		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 2741              		.align	1
 2742              		.global	HAL_RTC_GetAlarm
 2743              		.syntax unified
 2744              		.thumb
 2745              		.thumb_func
 2747              	HAL_RTC_GetAlarm:
 2748              	.LVL177:
 2749              	.LFB299:
2226:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
 2750              		.loc 1 2226 1 is_stmt 1 view -0
 2751              		.cfi_startproc
 2752              		@ args = 0, pretend = 0, frame = 0
 2753              		@ frame_needed = 0, uses_anonymous_args = 0
2226:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
 2754              		.loc 1 2226 1 is_stmt 0 view .LVU996
 2755 0000 10B5     		push	{r4, lr}
 2756              	.LCFI17:
 2757              		.cfi_def_cfa_offset 8
 2758              		.cfi_offset 4, -8
 2759              		.cfi_offset 14, -4
 2760 0002 0C46     		mov	r4, r1
2227:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2761              		.loc 1 2227 3 is_stmt 1 view .LVU997
2230:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
 2762              		.loc 1 2230 3 view .LVU998
2231:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2763              		.loc 1 2231 3 view .LVU999
2233:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2764              		.loc 1 2233 3 view .LVU1000
2233:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2765              		.loc 1 2233 6 is_stmt 0 view .LVU1001
 2766 0004 B2F5807F 		cmp	r2, #256
 2767 0008 33D0     		beq	.L158
2253:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2768              		.loc 1 2253 5 is_stmt 1 view .LVU1002
2253:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2769              		.loc 1 2253 19 is_stmt 0 view .LVU1003
 2770 000a 4FF40072 		mov	r2, #512
 2771              	.LVL178:
2253:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2772              		.loc 1 2253 19 view .LVU1004
 2773 000e 8A62     		str	r2, [r1, #40]
ARM GAS  /tmp/ccteFmy9.s 			page 110


2255:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
 2774              		.loc 1 2255 5 is_stmt 1 view .LVU1005
2255:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
 2775              		.loc 1 2255 29 is_stmt 0 view .LVU1006
 2776 0010 0168     		ldr	r1, [r0]
 2777              	.LVL179:
2255:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
 2778              		.loc 1 2255 12 view .LVU1007
 2779 0012 0A6A     		ldr	r2, [r1, #32]
 2780              	.LVL180:
2256:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2781              		.loc 1 2256 5 is_stmt 1 view .LVU1008
2256:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2782              		.loc 1 2256 49 is_stmt 0 view .LVU1009
 2783 0014 896C     		ldr	r1, [r1, #72]
2256:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2784              		.loc 1 2256 21 view .LVU1010
 2785 0016 C1F30E01 		ubfx	r1, r1, #0, #15
 2786              	.LVL181:
2259:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU)) >> RTC_ALRMB
 2787              		.loc 1 2259 5 is_stmt 1 view .LVU1011
2259:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU)) >> RTC_ALRMB
 2788              		.loc 1 2259 31 is_stmt 0 view .LVU1012
 2789 001a C2F30540 		ubfx	r0, r2, #16, #6
 2790              	.LVL182:
2259:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU)) >> RTC_ALRMB
 2791              		.loc 1 2259 29 view .LVU1013
 2792 001e 2070     		strb	r0, [r4]
2260:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMBR_ST | RTC_ALRMBR_SU)) >> RTC_ALRMBR_
 2793              		.loc 1 2260 5 is_stmt 1 view .LVU1014
2260:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMBR_ST | RTC_ALRMBR_SU)) >> RTC_ALRMBR_
 2794              		.loc 1 2260 33 is_stmt 0 view .LVU1015
 2795 0020 C2F30620 		ubfx	r0, r2, #8, #7
2260:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMBR_ST | RTC_ALRMBR_SU)) >> RTC_ALRMBR_
 2796              		.loc 1 2260 31 view .LVU1016
 2797 0024 6070     		strb	r0, [r4, #1]
2261:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMBR_PM) >> RTC_ALRMBR_PM_Pos);
 2798              		.loc 1 2261 5 is_stmt 1 view .LVU1017
2261:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMBR_PM) >> RTC_ALRMBR_PM_Pos);
 2799              		.loc 1 2261 33 is_stmt 0 view .LVU1018
 2800 0026 02F07F00 		and	r0, r2, #127
2261:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMBR_PM) >> RTC_ALRMBR_PM_Pos);
 2801              		.loc 1 2261 31 view .LVU1019
 2802 002a A070     		strb	r0, [r4, #2]
2262:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2803              		.loc 1 2262 5 is_stmt 1 view .LVU1020
2262:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2804              		.loc 1 2262 36 is_stmt 0 view .LVU1021
 2805 002c C2F38050 		ubfx	r0, r2, #22, #1
2262:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2806              		.loc 1 2262 34 view .LVU1022
 2807 0030 E070     		strb	r0, [r4, #3]
2263:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMBR_DT | RTC_ALRMBR_DU)) >> RTC_ALRMBR_D
 2808              		.loc 1 2263 5 is_stmt 1 view .LVU1023
2263:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMBR_DT | RTC_ALRMBR_DU)) >> RTC_ALRMBR_D
 2809              		.loc 1 2263 34 is_stmt 0 view .LVU1024
 2810 0032 6160     		str	r1, [r4, #4]
ARM GAS  /tmp/ccteFmy9.s 			page 111


2264:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMBR_WDSEL);
 2811              		.loc 1 2264 5 is_stmt 1 view .LVU1025
2264:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMBR_WDSEL);
 2812              		.loc 1 2264 32 is_stmt 0 view .LVU1026
 2813 0034 C2F30561 		ubfx	r1, r2, #24, #6
 2814              	.LVL183:
2264:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMBR_WDSEL);
 2815              		.loc 1 2264 30 view .LVU1027
 2816 0038 84F82410 		strb	r1, [r4, #36]
2265:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2817              		.loc 1 2265 5 is_stmt 1 view .LVU1028
2265:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2818              		.loc 1 2265 35 is_stmt 0 view .LVU1029
 2819 003c 02F08041 		and	r1, r2, #1073741824
2265:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2820              		.loc 1 2265 33 view .LVU1030
 2821 0040 2162     		str	r1, [r4, #32]
2266:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2822              		.loc 1 2266 5 is_stmt 1 view .LVU1031
2266:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2823              		.loc 1 2266 25 is_stmt 0 view .LVU1032
 2824 0042 02F08032 		and	r2, r2, #-2139062144
 2825              	.LVL184:
2266:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2826              		.loc 1 2266 23 view .LVU1033
 2827 0046 6261     		str	r2, [r4, #20]
 2828              	.LVL185:
 2829              	.L155:
2269:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2830              		.loc 1 2269 3 is_stmt 1 view .LVU1034
2269:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2831              		.loc 1 2269 6 is_stmt 0 view .LVU1035
 2832 0048 8BB9     		cbnz	r3, .L156
2271:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
 2833              		.loc 1 2271 5 is_stmt 1 view .LVU1036
2271:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
 2834              		.loc 1 2271 31 is_stmt 0 view .LVU1037
 2835 004a 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 2836 004c FFF7FEFF 		bl	RTC_Bcd2ToByte
 2837              	.LVL186:
2271:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
 2838              		.loc 1 2271 29 view .LVU1038
 2839 0050 2070     		strb	r0, [r4]
2272:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
 2840              		.loc 1 2272 5 is_stmt 1 view .LVU1039
2272:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
 2841              		.loc 1 2272 33 is_stmt 0 view .LVU1040
 2842 0052 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2843 0054 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2844              	.LVL187:
2272:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
 2845              		.loc 1 2272 31 view .LVU1041
 2846 0058 6070     		strb	r0, [r4, #1]
2273:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 2847              		.loc 1 2273 5 is_stmt 1 view .LVU1042
2273:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 2848              		.loc 1 2273 33 is_stmt 0 view .LVU1043
ARM GAS  /tmp/ccteFmy9.s 			page 112


 2849 005a A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 2850 005c FFF7FEFF 		bl	RTC_Bcd2ToByte
 2851              	.LVL188:
2273:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 2852              		.loc 1 2273 31 view .LVU1044
 2853 0060 A070     		strb	r0, [r4, #2]
2274:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2854              		.loc 1 2274 5 is_stmt 1 view .LVU1045
2274:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2855              		.loc 1 2274 32 is_stmt 0 view .LVU1046
 2856 0062 94F82400 		ldrb	r0, [r4, #36]	@ zero_extendqisi2
 2857 0066 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2858              	.LVL189:
2274:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2859              		.loc 1 2274 30 view .LVU1047
 2860 006a 84F82400 		strb	r0, [r4, #36]
 2861              	.L156:
2277:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2862              		.loc 1 2277 3 is_stmt 1 view .LVU1048
2278:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2863              		.loc 1 2278 1 is_stmt 0 view .LVU1049
 2864 006e 0020     		movs	r0, #0
 2865 0070 10BD     		pop	{r4, pc}
 2866              	.LVL190:
 2867              	.L158:
2236:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2868              		.loc 1 2236 5 is_stmt 1 view .LVU1050
2236:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2869              		.loc 1 2236 19 is_stmt 0 view .LVU1051
 2870 0072 8A62     		str	r2, [r1, #40]
2238:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR) & RTC_ALRMASSR_SS);
 2871              		.loc 1 2238 5 is_stmt 1 view .LVU1052
2238:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR) & RTC_ALRMASSR_SS);
 2872              		.loc 1 2238 29 is_stmt 0 view .LVU1053
 2873 0074 0168     		ldr	r1, [r0]
 2874              	.LVL191:
2238:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR) & RTC_ALRMASSR_SS);
 2875              		.loc 1 2238 12 view .LVU1054
 2876 0076 CA69     		ldr	r2, [r1, #28]
 2877              	.LVL192:
2239:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2878              		.loc 1 2239 5 is_stmt 1 view .LVU1055
2239:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2879              		.loc 1 2239 49 is_stmt 0 view .LVU1056
 2880 0078 496C     		ldr	r1, [r1, #68]
2239:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2881              		.loc 1 2239 21 view .LVU1057
 2882 007a C1F30E01 		ubfx	r1, r1, #0, #15
 2883              	.LVL193:
2242:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> RTC_ALRMA
 2884              		.loc 1 2242 5 is_stmt 1 view .LVU1058
2242:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> RTC_ALRMA
 2885              		.loc 1 2242 31 is_stmt 0 view .LVU1059
 2886 007e C2F30540 		ubfx	r0, r2, #16, #6
 2887              	.LVL194:
2242:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> RTC_ALRMA
 2888              		.loc 1 2242 29 view .LVU1060
ARM GAS  /tmp/ccteFmy9.s 			page 113


 2889 0082 2070     		strb	r0, [r4]
2243:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU)) >> RTC_ALRMAR_
 2890              		.loc 1 2243 5 is_stmt 1 view .LVU1061
2243:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU)) >> RTC_ALRMAR_
 2891              		.loc 1 2243 33 is_stmt 0 view .LVU1062
 2892 0084 C2F30620 		ubfx	r0, r2, #8, #7
2243:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU)) >> RTC_ALRMAR_
 2893              		.loc 1 2243 31 view .LVU1063
 2894 0088 6070     		strb	r0, [r4, #1]
2244:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMAR_PM) >> RTC_ALRMAR_PM_Pos);
 2895              		.loc 1 2244 5 is_stmt 1 view .LVU1064
2244:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMAR_PM) >> RTC_ALRMAR_PM_Pos);
 2896              		.loc 1 2244 33 is_stmt 0 view .LVU1065
 2897 008a 02F07F00 		and	r0, r2, #127
2244:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMAR_PM) >> RTC_ALRMAR_PM_Pos);
 2898              		.loc 1 2244 31 view .LVU1066
 2899 008e A070     		strb	r0, [r4, #2]
2245:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2900              		.loc 1 2245 5 is_stmt 1 view .LVU1067
2245:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2901              		.loc 1 2245 36 is_stmt 0 view .LVU1068
 2902 0090 C2F38050 		ubfx	r0, r2, #22, #1
2245:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2903              		.loc 1 2245 34 view .LVU1069
 2904 0094 E070     		strb	r0, [r4, #3]
2246:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> RTC_ALRMAR_D
 2905              		.loc 1 2246 5 is_stmt 1 view .LVU1070
2246:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> RTC_ALRMAR_D
 2906              		.loc 1 2246 34 is_stmt 0 view .LVU1071
 2907 0096 6160     		str	r1, [r4, #4]
2247:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2908              		.loc 1 2247 5 is_stmt 1 view .LVU1072
2247:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2909              		.loc 1 2247 32 is_stmt 0 view .LVU1073
 2910 0098 C2F30561 		ubfx	r1, r2, #24, #6
 2911              	.LVL195:
2247:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2912              		.loc 1 2247 30 view .LVU1074
 2913 009c 84F82410 		strb	r1, [r4, #36]
2248:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2914              		.loc 1 2248 5 is_stmt 1 view .LVU1075
2248:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2915              		.loc 1 2248 35 is_stmt 0 view .LVU1076
 2916 00a0 02F08041 		and	r1, r2, #1073741824
2248:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2917              		.loc 1 2248 33 view .LVU1077
 2918 00a4 2162     		str	r1, [r4, #32]
2249:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2919              		.loc 1 2249 5 is_stmt 1 view .LVU1078
2249:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2920              		.loc 1 2249 25 is_stmt 0 view .LVU1079
 2921 00a6 02F08032 		and	r2, r2, #-2139062144
 2922              	.LVL196:
2249:stm/stm32l4xx/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2923              		.loc 1 2249 23 view .LVU1080
 2924 00aa 6261     		str	r2, [r4, #20]
 2925 00ac CCE7     		b	.L155
ARM GAS  /tmp/ccteFmy9.s 			page 114


 2926              		.cfi_endproc
 2927              	.LFE299:
 2929              		.text
 2930              	.Letext0:
 2931              		.file 2 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/machine/_default_types.h"
 2932              		.file 3 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/sys/_stdint.h"
 2933              		.file 4 "stm/stm32l4xx/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 2934              		.file 5 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2935              		.file 6 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rtc.h"
 2936              		.file 7 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rtc_ex.h"
 2937              		.file 8 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccteFmy9.s 			page 115


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_rtc.c
     /tmp/ccteFmy9.s:21     .text.HAL_RTC_MspInit:0000000000000000 $t
     /tmp/ccteFmy9.s:27     .text.HAL_RTC_MspInit:0000000000000000 HAL_RTC_MspInit
     /tmp/ccteFmy9.s:42     .text.HAL_RTC_MspDeInit:0000000000000000 $t
     /tmp/ccteFmy9.s:48     .text.HAL_RTC_MspDeInit:0000000000000000 HAL_RTC_MspDeInit
     /tmp/ccteFmy9.s:63     .text.HAL_RTC_DeactivateAlarm:0000000000000000 $t
     /tmp/ccteFmy9.s:69     .text.HAL_RTC_DeactivateAlarm:0000000000000000 HAL_RTC_DeactivateAlarm
     /tmp/ccteFmy9.s:260    .text.HAL_RTC_DST_Add1Hour:0000000000000000 $t
     /tmp/ccteFmy9.s:266    .text.HAL_RTC_DST_Add1Hour:0000000000000000 HAL_RTC_DST_Add1Hour
     /tmp/ccteFmy9.s:301    .text.HAL_RTC_DST_Sub1Hour:0000000000000000 $t
     /tmp/ccteFmy9.s:307    .text.HAL_RTC_DST_Sub1Hour:0000000000000000 HAL_RTC_DST_Sub1Hour
     /tmp/ccteFmy9.s:342    .text.HAL_RTC_DST_SetStoreOperation:0000000000000000 $t
     /tmp/ccteFmy9.s:348    .text.HAL_RTC_DST_SetStoreOperation:0000000000000000 HAL_RTC_DST_SetStoreOperation
     /tmp/ccteFmy9.s:383    .text.HAL_RTC_DST_ClearStoreOperation:0000000000000000 $t
     /tmp/ccteFmy9.s:389    .text.HAL_RTC_DST_ClearStoreOperation:0000000000000000 HAL_RTC_DST_ClearStoreOperation
     /tmp/ccteFmy9.s:424    .text.HAL_RTC_DST_ReadStoreOperation:0000000000000000 $t
     /tmp/ccteFmy9.s:430    .text.HAL_RTC_DST_ReadStoreOperation:0000000000000000 HAL_RTC_DST_ReadStoreOperation
     /tmp/ccteFmy9.s:450    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
     /tmp/ccteFmy9.s:456    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
     /tmp/ccteFmy9.s:471    .text.HAL_RTC_AlarmIRQHandler:0000000000000000 $t
     /tmp/ccteFmy9.s:477    .text.HAL_RTC_AlarmIRQHandler:0000000000000000 HAL_RTC_AlarmIRQHandler
     /tmp/ccteFmy9.s:556    .text.HAL_RTC_AlarmIRQHandler:000000000000005c $d
     /tmp/ccteFmy9.s:561    .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 $t
     /tmp/ccteFmy9.s:567    .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 HAL_RTC_PollForAlarmAEvent
     /tmp/ccteFmy9.s:645    .text.HAL_RTC_WaitForSynchro:0000000000000000 $t
     /tmp/ccteFmy9.s:651    .text.HAL_RTC_WaitForSynchro:0000000000000000 HAL_RTC_WaitForSynchro
     /tmp/ccteFmy9.s:714    .text.HAL_RTC_WaitForSynchro:0000000000000030 $d
     /tmp/ccteFmy9.s:719    .text.HAL_RTC_GetState:0000000000000000 $t
     /tmp/ccteFmy9.s:725    .text.HAL_RTC_GetState:0000000000000000 HAL_RTC_GetState
     /tmp/ccteFmy9.s:743    .text.RTC_EnterInitMode:0000000000000000 $t
     /tmp/ccteFmy9.s:749    .text.RTC_EnterInitMode:0000000000000000 RTC_EnterInitMode
     /tmp/ccteFmy9.s:833    .text.RTC_ExitInitMode:0000000000000000 $t
     /tmp/ccteFmy9.s:839    .text.RTC_ExitInitMode:0000000000000000 RTC_ExitInitMode
     /tmp/ccteFmy9.s:915    .text.RTC_ExitInitMode:0000000000000048 $d
     /tmp/ccteFmy9.s:920    .text.HAL_RTC_Init:0000000000000000 $t
     /tmp/ccteFmy9.s:926    .text.HAL_RTC_Init:0000000000000000 HAL_RTC_Init
     /tmp/ccteFmy9.s:1119   .text.HAL_RTC_DeInit:0000000000000000 $t
     /tmp/ccteFmy9.s:1125   .text.HAL_RTC_DeInit:0000000000000000 HAL_RTC_DeInit
     /tmp/ccteFmy9.s:1289   .text.HAL_RTC_DeInit:0000000000000090 $d
     /tmp/ccteFmy9.s:1294   .text.RTC_ByteToBcd2:0000000000000000 $t
     /tmp/ccteFmy9.s:1300   .text.RTC_ByteToBcd2:0000000000000000 RTC_ByteToBcd2
     /tmp/ccteFmy9.s:1347   .text.HAL_RTC_SetTime:0000000000000000 $t
     /tmp/ccteFmy9.s:1353   .text.HAL_RTC_SetTime:0000000000000000 HAL_RTC_SetTime
     /tmp/ccteFmy9.s:1572   .text.HAL_RTC_SetDate:0000000000000000 $t
     /tmp/ccteFmy9.s:1578   .text.HAL_RTC_SetDate:0000000000000000 HAL_RTC_SetDate
     /tmp/ccteFmy9.s:1766   .text.HAL_RTC_SetAlarm:0000000000000000 $t
     /tmp/ccteFmy9.s:1772   .text.HAL_RTC_SetAlarm:0000000000000000 HAL_RTC_SetAlarm
     /tmp/ccteFmy9.s:2137   .text.HAL_RTC_SetAlarm_IT:0000000000000000 $t
     /tmp/ccteFmy9.s:2143   .text.HAL_RTC_SetAlarm_IT:0000000000000000 HAL_RTC_SetAlarm_IT
     /tmp/ccteFmy9.s:2516   .text.HAL_RTC_SetAlarm_IT:000000000000019c $d
     /tmp/ccteFmy9.s:2521   .text.RTC_Bcd2ToByte:0000000000000000 $t
     /tmp/ccteFmy9.s:2527   .text.RTC_Bcd2ToByte:0000000000000000 RTC_Bcd2ToByte
     /tmp/ccteFmy9.s:2555   .text.HAL_RTC_GetTime:0000000000000000 $t
     /tmp/ccteFmy9.s:2561   .text.HAL_RTC_GetTime:0000000000000000 HAL_RTC_GetTime
     /tmp/ccteFmy9.s:2656   .text.HAL_RTC_GetDate:0000000000000000 $t
     /tmp/ccteFmy9.s:2662   .text.HAL_RTC_GetDate:0000000000000000 HAL_RTC_GetDate
ARM GAS  /tmp/ccteFmy9.s 			page 116


     /tmp/ccteFmy9.s:2741   .text.HAL_RTC_GetAlarm:0000000000000000 $t
     /tmp/ccteFmy9.s:2747   .text.HAL_RTC_GetAlarm:0000000000000000 HAL_RTC_GetAlarm

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RTCEx_AlarmBEventCallback
