ARM GAS  /tmp/ccbspmyw.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"timers.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "FreeRTOS-Kernel/timers.c"
  20              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	prvGetNextExpireTime:
  27              	.LVL0:
  28              	.LFB22:
   1:FreeRTOS-Kernel/timers.c **** /*
   2:FreeRTOS-Kernel/timers.c ****  * FreeRTOS Kernel V11.1.0
   3:FreeRTOS-Kernel/timers.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.
   4:FreeRTOS-Kernel/timers.c ****  *
   5:FreeRTOS-Kernel/timers.c ****  * SPDX-License-Identifier: MIT
   6:FreeRTOS-Kernel/timers.c ****  *
   7:FreeRTOS-Kernel/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:FreeRTOS-Kernel/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:FreeRTOS-Kernel/timers.c ****  * the Software without restriction, including without limitation the rights to
  10:FreeRTOS-Kernel/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:FreeRTOS-Kernel/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:FreeRTOS-Kernel/timers.c ****  * subject to the following conditions:
  13:FreeRTOS-Kernel/timers.c ****  *
  14:FreeRTOS-Kernel/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  15:FreeRTOS-Kernel/timers.c ****  * copies or substantial portions of the Software.
  16:FreeRTOS-Kernel/timers.c ****  *
  17:FreeRTOS-Kernel/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:FreeRTOS-Kernel/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:FreeRTOS-Kernel/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:FreeRTOS-Kernel/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:FreeRTOS-Kernel/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:FreeRTOS-Kernel/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:FreeRTOS-Kernel/timers.c ****  *
  24:FreeRTOS-Kernel/timers.c ****  * https://www.FreeRTOS.org
  25:FreeRTOS-Kernel/timers.c ****  * https://github.com/FreeRTOS
  26:FreeRTOS-Kernel/timers.c ****  *
  27:FreeRTOS-Kernel/timers.c ****  */
  28:FreeRTOS-Kernel/timers.c **** 
  29:FreeRTOS-Kernel/timers.c **** /* Standard includes. */
  30:FreeRTOS-Kernel/timers.c **** #include <stdlib.h>
ARM GAS  /tmp/ccbspmyw.s 			page 2


  31:FreeRTOS-Kernel/timers.c **** 
  32:FreeRTOS-Kernel/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:FreeRTOS-Kernel/timers.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  34:FreeRTOS-Kernel/timers.c ****  * task.h is included from an application file. */
  35:FreeRTOS-Kernel/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:FreeRTOS-Kernel/timers.c **** 
  37:FreeRTOS-Kernel/timers.c **** #include "FreeRTOS.h"
  38:FreeRTOS-Kernel/timers.c **** #include "task.h"
  39:FreeRTOS-Kernel/timers.c **** #include "queue.h"
  40:FreeRTOS-Kernel/timers.c **** #include "timers.h"
  41:FreeRTOS-Kernel/timers.c **** 
  42:FreeRTOS-Kernel/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  43:FreeRTOS-Kernel/timers.c ****     #error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function availabl
  44:FreeRTOS-Kernel/timers.c **** #endif
  45:FreeRTOS-Kernel/timers.c **** 
  46:FreeRTOS-Kernel/timers.c **** /* The MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  47:FreeRTOS-Kernel/timers.c ****  * for the header files above, but not in this file, in order to generate the
  48:FreeRTOS-Kernel/timers.c ****  * correct privileged Vs unprivileged linkage and placement. */
  49:FreeRTOS-Kernel/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  50:FreeRTOS-Kernel/timers.c **** 
  51:FreeRTOS-Kernel/timers.c **** 
  52:FreeRTOS-Kernel/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:FreeRTOS-Kernel/timers.c ****  * to include software timer functionality.  This #if is closed at the very bottom
  54:FreeRTOS-Kernel/timers.c ****  * of this file.  If you want to include software timer functionality then ensure
  55:FreeRTOS-Kernel/timers.c ****  * configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:FreeRTOS-Kernel/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:FreeRTOS-Kernel/timers.c **** 
  58:FreeRTOS-Kernel/timers.c **** /* Misc definitions. */
  59:FreeRTOS-Kernel/timers.c ****     #define tmrNO_DELAY                    ( ( TickType_t ) 0U )
  60:FreeRTOS-Kernel/timers.c ****     #define tmrMAX_TIME_BEFORE_OVERFLOW    ( ( TickType_t ) -1 )
  61:FreeRTOS-Kernel/timers.c **** 
  62:FreeRTOS-Kernel/timers.c **** /* The name assigned to the timer service task. This can be overridden by
  63:FreeRTOS-Kernel/timers.c ****  * defining configTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  64:FreeRTOS-Kernel/timers.c ****     #ifndef configTIMER_SERVICE_TASK_NAME
  65:FreeRTOS-Kernel/timers.c ****         #define configTIMER_SERVICE_TASK_NAME    "Tmr Svc"
  66:FreeRTOS-Kernel/timers.c ****     #endif
  67:FreeRTOS-Kernel/timers.c **** 
  68:FreeRTOS-Kernel/timers.c ****     #if ( ( configNUMBER_OF_CORES > 1 ) && ( configUSE_CORE_AFFINITY == 1 ) )
  69:FreeRTOS-Kernel/timers.c **** 
  70:FreeRTOS-Kernel/timers.c **** /* The core affinity assigned to the timer service task on SMP systems.
  71:FreeRTOS-Kernel/timers.c ****  * This can be overridden by defining configTIMER_SERVICE_TASK_CORE_AFFINITY in FreeRTOSConfig.h. *
  72:FreeRTOS-Kernel/timers.c ****         #ifndef configTIMER_SERVICE_TASK_CORE_AFFINITY
  73:FreeRTOS-Kernel/timers.c ****             #define configTIMER_SERVICE_TASK_CORE_AFFINITY    tskNO_AFFINITY
  74:FreeRTOS-Kernel/timers.c ****         #endif
  75:FreeRTOS-Kernel/timers.c ****     #endif /* #if ( ( configNUMBER_OF_CORES > 1 ) && ( configUSE_CORE_AFFINITY == 1 ) ) */
  76:FreeRTOS-Kernel/timers.c **** 
  77:FreeRTOS-Kernel/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  78:FreeRTOS-Kernel/timers.c ****     #define tmrSTATUS_IS_ACTIVE                  ( 0x01U )
  79:FreeRTOS-Kernel/timers.c ****     #define tmrSTATUS_IS_STATICALLY_ALLOCATED    ( 0x02U )
  80:FreeRTOS-Kernel/timers.c ****     #define tmrSTATUS_IS_AUTORELOAD              ( 0x04U )
  81:FreeRTOS-Kernel/timers.c **** 
  82:FreeRTOS-Kernel/timers.c **** /* The definition of the timers themselves. */
  83:FreeRTOS-Kernel/timers.c ****     typedef struct tmrTimerControl                                               /* The old naming 
  84:FreeRTOS-Kernel/timers.c ****     {
  85:FreeRTOS-Kernel/timers.c ****         const char * pcTimerName;                                                /**< Text name.  T
  86:FreeRTOS-Kernel/timers.c ****         ListItem_t xTimerListItem;                                               /**< Standard link
  87:FreeRTOS-Kernel/timers.c ****         TickType_t xTimerPeriodInTicks;                                          /**< How quickly a
ARM GAS  /tmp/ccbspmyw.s 			page 3


  88:FreeRTOS-Kernel/timers.c ****         void * pvTimerID;                                                        /**< An ID to iden
  89:FreeRTOS-Kernel/timers.c ****         portTIMER_CALLBACK_ATTRIBUTE TimerCallbackFunction_t pxCallbackFunction; /**< The function 
  90:FreeRTOS-Kernel/timers.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
  91:FreeRTOS-Kernel/timers.c ****             UBaseType_t uxTimerNumber;                                           /**< An ID assigne
  92:FreeRTOS-Kernel/timers.c ****         #endif
  93:FreeRTOS-Kernel/timers.c ****         uint8_t ucStatus;                                                        /**< Holds bits to
  94:FreeRTOS-Kernel/timers.c ****     } xTIMER;
  95:FreeRTOS-Kernel/timers.c **** 
  96:FreeRTOS-Kernel/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  97:FreeRTOS-Kernel/timers.c ****  * name below to enable the use of older kernel aware debuggers. */
  98:FreeRTOS-Kernel/timers.c ****     typedef xTIMER Timer_t;
  99:FreeRTOS-Kernel/timers.c **** 
 100:FreeRTOS-Kernel/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
 101:FreeRTOS-Kernel/timers.c ****  * Two types of message can be queued - messages that manipulate a software timer,
 102:FreeRTOS-Kernel/timers.c ****  * and messages that request the execution of a non-timer related callback.  The
 103:FreeRTOS-Kernel/timers.c ****  * two message types are defined in two separate structures, xTimerParametersType
 104:FreeRTOS-Kernel/timers.c ****  * and xCallbackParametersType respectively. */
 105:FreeRTOS-Kernel/timers.c ****     typedef struct tmrTimerParameters
 106:FreeRTOS-Kernel/timers.c ****     {
 107:FreeRTOS-Kernel/timers.c ****         TickType_t xMessageValue; /**< An optional value used by a subset of commands, for example,
 108:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer;        /**< The timer to which the command will be applied. */
 109:FreeRTOS-Kernel/timers.c ****     } TimerParameter_t;
 110:FreeRTOS-Kernel/timers.c **** 
 111:FreeRTOS-Kernel/timers.c **** 
 112:FreeRTOS-Kernel/timers.c ****     typedef struct tmrCallbackParameters
 113:FreeRTOS-Kernel/timers.c ****     {
 114:FreeRTOS-Kernel/timers.c ****         portTIMER_CALLBACK_ATTRIBUTE
 115:FreeRTOS-Kernel/timers.c ****         PendedFunction_t pxCallbackFunction; /* << The callback function to execute. */
 116:FreeRTOS-Kernel/timers.c ****         void * pvParameter1;                 /* << The value that will be used as the callback func
 117:FreeRTOS-Kernel/timers.c ****         uint32_t ulParameter2;               /* << The value that will be used as the callback func
 118:FreeRTOS-Kernel/timers.c ****     } CallbackParameters_t;
 119:FreeRTOS-Kernel/timers.c **** 
 120:FreeRTOS-Kernel/timers.c **** /* The structure that contains the two message types, along with an identifier
 121:FreeRTOS-Kernel/timers.c ****  * that is used to determine which message type is valid. */
 122:FreeRTOS-Kernel/timers.c ****     typedef struct tmrTimerQueueMessage
 123:FreeRTOS-Kernel/timers.c ****     {
 124:FreeRTOS-Kernel/timers.c ****         BaseType_t xMessageID; /**< The command being sent to the timer service task. */
 125:FreeRTOS-Kernel/timers.c ****         union
 126:FreeRTOS-Kernel/timers.c ****         {
 127:FreeRTOS-Kernel/timers.c ****             TimerParameter_t xTimerParameters;
 128:FreeRTOS-Kernel/timers.c **** 
 129:FreeRTOS-Kernel/timers.c ****             /* Don't include xCallbackParameters if it is not going to be used as
 130:FreeRTOS-Kernel/timers.c ****              * it makes the structure (and therefore the timer queue) larger. */
 131:FreeRTOS-Kernel/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 132:FreeRTOS-Kernel/timers.c ****                 CallbackParameters_t xCallbackParameters;
 133:FreeRTOS-Kernel/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 134:FreeRTOS-Kernel/timers.c ****         } u;
 135:FreeRTOS-Kernel/timers.c ****     } DaemonTaskMessage_t;
 136:FreeRTOS-Kernel/timers.c **** 
 137:FreeRTOS-Kernel/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 138:FreeRTOS-Kernel/timers.c ****  * time order, with the nearest expiry time at the front of the list.  Only the
 139:FreeRTOS-Kernel/timers.c ****  * timer service task is allowed to access these lists.
 140:FreeRTOS-Kernel/timers.c ****  * xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 141:FreeRTOS-Kernel/timers.c ****  * breaks some kernel aware debuggers, and debuggers that reply on removing the
 142:FreeRTOS-Kernel/timers.c ****  * static qualifier. */
 143:FreeRTOS-Kernel/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList1;
 144:FreeRTOS-Kernel/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList2;
ARM GAS  /tmp/ccbspmyw.s 			page 4


 145:FreeRTOS-Kernel/timers.c ****     PRIVILEGED_DATA static List_t * pxCurrentTimerList;
 146:FreeRTOS-Kernel/timers.c ****     PRIVILEGED_DATA static List_t * pxOverflowTimerList;
 147:FreeRTOS-Kernel/timers.c **** 
 148:FreeRTOS-Kernel/timers.c **** /* A queue that is used to send commands to the timer service task. */
 149:FreeRTOS-Kernel/timers.c ****     PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 150:FreeRTOS-Kernel/timers.c ****     PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 151:FreeRTOS-Kernel/timers.c **** 
 152:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 153:FreeRTOS-Kernel/timers.c **** 
 154:FreeRTOS-Kernel/timers.c **** /*
 155:FreeRTOS-Kernel/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 156:FreeRTOS-Kernel/timers.c ****  * been initialised already.
 157:FreeRTOS-Kernel/timers.c ****  */
 158:FreeRTOS-Kernel/timers.c ****     static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 159:FreeRTOS-Kernel/timers.c **** 
 160:FreeRTOS-Kernel/timers.c **** /*
 161:FreeRTOS-Kernel/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 162:FreeRTOS-Kernel/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 163:FreeRTOS-Kernel/timers.c ****  * xTimerQueue queue.
 164:FreeRTOS-Kernel/timers.c ****  */
 165:FreeRTOS-Kernel/timers.c ****     static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 166:FreeRTOS-Kernel/timers.c **** 
 167:FreeRTOS-Kernel/timers.c **** /*
 168:FreeRTOS-Kernel/timers.c ****  * Called by the timer service task to interpret and process a command it
 169:FreeRTOS-Kernel/timers.c ****  * received on the timer queue.
 170:FreeRTOS-Kernel/timers.c ****  */
 171:FreeRTOS-Kernel/timers.c ****     static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 172:FreeRTOS-Kernel/timers.c **** 
 173:FreeRTOS-Kernel/timers.c **** /*
 174:FreeRTOS-Kernel/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 175:FreeRTOS-Kernel/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 176:FreeRTOS-Kernel/timers.c ****  */
 177:FreeRTOS-Kernel/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 178:FreeRTOS-Kernel/timers.c ****                                                   const TickType_t xNextExpiryTime,
 179:FreeRTOS-Kernel/timers.c ****                                                   const TickType_t xTimeNow,
 180:FreeRTOS-Kernel/timers.c ****                                                   const TickType_t xCommandTime ) PRIVILEGED_FUNCTI
 181:FreeRTOS-Kernel/timers.c **** 
 182:FreeRTOS-Kernel/timers.c **** /*
 183:FreeRTOS-Kernel/timers.c ****  * Reload the specified auto-reload timer.  If the reloading is backlogged,
 184:FreeRTOS-Kernel/timers.c ****  * clear the backlog, calling the callback for each additional reload.  When
 185:FreeRTOS-Kernel/timers.c ****  * this function returns, the next expiry time is after xTimeNow.
 186:FreeRTOS-Kernel/timers.c ****  */
 187:FreeRTOS-Kernel/timers.c ****     static void prvReloadTimer( Timer_t * const pxTimer,
 188:FreeRTOS-Kernel/timers.c ****                                 TickType_t xExpiredTime,
 189:FreeRTOS-Kernel/timers.c ****                                 const TickType_t xTimeNow ) PRIVILEGED_FUNCTION;
 190:FreeRTOS-Kernel/timers.c **** 
 191:FreeRTOS-Kernel/timers.c **** /*
 192:FreeRTOS-Kernel/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 193:FreeRTOS-Kernel/timers.c ****  * auto-reload timer, then call its callback.
 194:FreeRTOS-Kernel/timers.c ****  */
 195:FreeRTOS-Kernel/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 196:FreeRTOS-Kernel/timers.c ****                                         const TickType_t xTimeNow ) PRIVILEGED_FUNCTION;
 197:FreeRTOS-Kernel/timers.c **** 
 198:FreeRTOS-Kernel/timers.c **** /*
 199:FreeRTOS-Kernel/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 200:FreeRTOS-Kernel/timers.c ****  * current timer list does not still reference some timers.
 201:FreeRTOS-Kernel/timers.c ****  */
ARM GAS  /tmp/ccbspmyw.s 			page 5


 202:FreeRTOS-Kernel/timers.c ****     static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 203:FreeRTOS-Kernel/timers.c **** 
 204:FreeRTOS-Kernel/timers.c **** /*
 205:FreeRTOS-Kernel/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 206:FreeRTOS-Kernel/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 207:FreeRTOS-Kernel/timers.c ****  */
 208:FreeRTOS-Kernel/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FU
 209:FreeRTOS-Kernel/timers.c **** 
 210:FreeRTOS-Kernel/timers.c **** /*
 211:FreeRTOS-Kernel/timers.c ****  * If the timer list contains any active timers then return the expire time of
 212:FreeRTOS-Kernel/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 213:FreeRTOS-Kernel/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 214:FreeRTOS-Kernel/timers.c ****  * to pdTRUE.
 215:FreeRTOS-Kernel/timers.c ****  */
 216:FreeRTOS-Kernel/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION
 217:FreeRTOS-Kernel/timers.c **** 
 218:FreeRTOS-Kernel/timers.c **** /*
 219:FreeRTOS-Kernel/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 220:FreeRTOS-Kernel/timers.c ****  * until either a timer does expire or a command is received.
 221:FreeRTOS-Kernel/timers.c ****  */
 222:FreeRTOS-Kernel/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 223:FreeRTOS-Kernel/timers.c ****                                             BaseType_t xListWasEmpty ) PRIVILEGED_FUNCTION;
 224:FreeRTOS-Kernel/timers.c **** 
 225:FreeRTOS-Kernel/timers.c **** /*
 226:FreeRTOS-Kernel/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 227:FreeRTOS-Kernel/timers.c ****  * dynamically to fill in the structure's members.
 228:FreeRTOS-Kernel/timers.c ****  */
 229:FreeRTOS-Kernel/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName,
 230:FreeRTOS-Kernel/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 231:FreeRTOS-Kernel/timers.c ****                                        const BaseType_t xAutoReload,
 232:FreeRTOS-Kernel/timers.c ****                                        void * const pvTimerID,
 233:FreeRTOS-Kernel/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 234:FreeRTOS-Kernel/timers.c ****                                        Timer_t * pxNewTimer ) PRIVILEGED_FUNCTION;
 235:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 236:FreeRTOS-Kernel/timers.c **** 
 237:FreeRTOS-Kernel/timers.c ****     BaseType_t xTimerCreateTimerTask( void )
 238:FreeRTOS-Kernel/timers.c ****     {
 239:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn = pdFAIL;
 240:FreeRTOS-Kernel/timers.c **** 
 241:FreeRTOS-Kernel/timers.c ****         traceENTER_xTimerCreateTimerTask();
 242:FreeRTOS-Kernel/timers.c **** 
 243:FreeRTOS-Kernel/timers.c ****         /* This function is called when the scheduler is started if
 244:FreeRTOS-Kernel/timers.c ****          * configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 245:FreeRTOS-Kernel/timers.c ****          * timer service task has been created/initialised.  If timers have already
 246:FreeRTOS-Kernel/timers.c ****          * been created then the initialisation will already have been performed. */
 247:FreeRTOS-Kernel/timers.c ****         prvCheckForValidListAndQueue();
 248:FreeRTOS-Kernel/timers.c **** 
 249:FreeRTOS-Kernel/timers.c ****         if( xTimerQueue != NULL )
 250:FreeRTOS-Kernel/timers.c ****         {
 251:FreeRTOS-Kernel/timers.c ****             #if ( ( configNUMBER_OF_CORES > 1 ) && ( configUSE_CORE_AFFINITY == 1 ) )
 252:FreeRTOS-Kernel/timers.c ****             {
 253:FreeRTOS-Kernel/timers.c ****                 #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 254:FreeRTOS-Kernel/timers.c ****                 {
 255:FreeRTOS-Kernel/timers.c ****                     StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 256:FreeRTOS-Kernel/timers.c ****                     StackType_t * pxTimerTaskStackBuffer = NULL;
 257:FreeRTOS-Kernel/timers.c ****                     configSTACK_DEPTH_TYPE uxTimerTaskStackSize;
 258:FreeRTOS-Kernel/timers.c **** 
ARM GAS  /tmp/ccbspmyw.s 			page 6


 259:FreeRTOS-Kernel/timers.c ****                     vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer,
 260:FreeRTOS-Kernel/timers.c ****                     xTimerTaskHandle = xTaskCreateStaticAffinitySet( prvTimerTask,
 261:FreeRTOS-Kernel/timers.c ****                                                                      configTIMER_SERVICE_TASK_NAME,
 262:FreeRTOS-Kernel/timers.c ****                                                                      uxTimerTaskStackSize,
 263:FreeRTOS-Kernel/timers.c ****                                                                      NULL,
 264:FreeRTOS-Kernel/timers.c ****                                                                      ( ( UBaseType_t ) configTIMER_
 265:FreeRTOS-Kernel/timers.c ****                                                                      pxTimerTaskStackBuffer,
 266:FreeRTOS-Kernel/timers.c ****                                                                      pxTimerTaskTCBBuffer,
 267:FreeRTOS-Kernel/timers.c ****                                                                      configTIMER_SERVICE_TASK_CORE_
 268:FreeRTOS-Kernel/timers.c **** 
 269:FreeRTOS-Kernel/timers.c ****                     if( xTimerTaskHandle != NULL )
 270:FreeRTOS-Kernel/timers.c ****                     {
 271:FreeRTOS-Kernel/timers.c ****                         xReturn = pdPASS;
 272:FreeRTOS-Kernel/timers.c ****                     }
 273:FreeRTOS-Kernel/timers.c ****                 }
 274:FreeRTOS-Kernel/timers.c ****                 #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 275:FreeRTOS-Kernel/timers.c ****                 {
 276:FreeRTOS-Kernel/timers.c ****                     xReturn = xTaskCreateAffinitySet( prvTimerTask,
 277:FreeRTOS-Kernel/timers.c ****                                                       configTIMER_SERVICE_TASK_NAME,
 278:FreeRTOS-Kernel/timers.c ****                                                       configTIMER_TASK_STACK_DEPTH,
 279:FreeRTOS-Kernel/timers.c ****                                                       NULL,
 280:FreeRTOS-Kernel/timers.c ****                                                       ( ( UBaseType_t ) configTIMER_TASK_PRIORITY )
 281:FreeRTOS-Kernel/timers.c ****                                                       configTIMER_SERVICE_TASK_CORE_AFFINITY,
 282:FreeRTOS-Kernel/timers.c ****                                                       &xTimerTaskHandle );
 283:FreeRTOS-Kernel/timers.c ****                 }
 284:FreeRTOS-Kernel/timers.c ****                 #endif /* configSUPPORT_STATIC_ALLOCATION */
 285:FreeRTOS-Kernel/timers.c ****             }
 286:FreeRTOS-Kernel/timers.c ****             #else /* #if ( ( configNUMBER_OF_CORES > 1 ) && ( configUSE_CORE_AFFINITY == 1 ) ) */
 287:FreeRTOS-Kernel/timers.c ****             {
 288:FreeRTOS-Kernel/timers.c ****                 #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 289:FreeRTOS-Kernel/timers.c ****                 {
 290:FreeRTOS-Kernel/timers.c ****                     StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 291:FreeRTOS-Kernel/timers.c ****                     StackType_t * pxTimerTaskStackBuffer = NULL;
 292:FreeRTOS-Kernel/timers.c ****                     configSTACK_DEPTH_TYPE uxTimerTaskStackSize;
 293:FreeRTOS-Kernel/timers.c **** 
 294:FreeRTOS-Kernel/timers.c ****                     vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer,
 295:FreeRTOS-Kernel/timers.c ****                     xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 296:FreeRTOS-Kernel/timers.c ****                                                           configTIMER_SERVICE_TASK_NAME,
 297:FreeRTOS-Kernel/timers.c ****                                                           uxTimerTaskStackSize,
 298:FreeRTOS-Kernel/timers.c ****                                                           NULL,
 299:FreeRTOS-Kernel/timers.c ****                                                           ( ( UBaseType_t ) configTIMER_TASK_PRIORI
 300:FreeRTOS-Kernel/timers.c ****                                                           pxTimerTaskStackBuffer,
 301:FreeRTOS-Kernel/timers.c ****                                                           pxTimerTaskTCBBuffer );
 302:FreeRTOS-Kernel/timers.c **** 
 303:FreeRTOS-Kernel/timers.c ****                     if( xTimerTaskHandle != NULL )
 304:FreeRTOS-Kernel/timers.c ****                     {
 305:FreeRTOS-Kernel/timers.c ****                         xReturn = pdPASS;
 306:FreeRTOS-Kernel/timers.c ****                     }
 307:FreeRTOS-Kernel/timers.c ****                 }
 308:FreeRTOS-Kernel/timers.c ****                 #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 309:FreeRTOS-Kernel/timers.c ****                 {
 310:FreeRTOS-Kernel/timers.c ****                     xReturn = xTaskCreate( prvTimerTask,
 311:FreeRTOS-Kernel/timers.c ****                                            configTIMER_SERVICE_TASK_NAME,
 312:FreeRTOS-Kernel/timers.c ****                                            configTIMER_TASK_STACK_DEPTH,
 313:FreeRTOS-Kernel/timers.c ****                                            NULL,
 314:FreeRTOS-Kernel/timers.c ****                                            ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIV
 315:FreeRTOS-Kernel/timers.c ****                                            &xTimerTaskHandle );
ARM GAS  /tmp/ccbspmyw.s 			page 7


 316:FreeRTOS-Kernel/timers.c ****                 }
 317:FreeRTOS-Kernel/timers.c ****                 #endif /* configSUPPORT_STATIC_ALLOCATION */
 318:FreeRTOS-Kernel/timers.c ****             }
 319:FreeRTOS-Kernel/timers.c ****             #endif /* #if ( ( configNUMBER_OF_CORES > 1 ) && ( configUSE_CORE_AFFINITY == 1 ) ) */
 320:FreeRTOS-Kernel/timers.c ****         }
 321:FreeRTOS-Kernel/timers.c ****         else
 322:FreeRTOS-Kernel/timers.c ****         {
 323:FreeRTOS-Kernel/timers.c ****             mtCOVERAGE_TEST_MARKER();
 324:FreeRTOS-Kernel/timers.c ****         }
 325:FreeRTOS-Kernel/timers.c **** 
 326:FreeRTOS-Kernel/timers.c ****         configASSERT( xReturn );
 327:FreeRTOS-Kernel/timers.c **** 
 328:FreeRTOS-Kernel/timers.c ****         traceRETURN_xTimerCreateTimerTask( xReturn );
 329:FreeRTOS-Kernel/timers.c **** 
 330:FreeRTOS-Kernel/timers.c ****         return xReturn;
 331:FreeRTOS-Kernel/timers.c ****     }
 332:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 333:FreeRTOS-Kernel/timers.c **** 
 334:FreeRTOS-Kernel/timers.c ****     #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 335:FreeRTOS-Kernel/timers.c **** 
 336:FreeRTOS-Kernel/timers.c ****         TimerHandle_t xTimerCreate( const char * const pcTimerName,
 337:FreeRTOS-Kernel/timers.c ****                                     const TickType_t xTimerPeriodInTicks,
 338:FreeRTOS-Kernel/timers.c ****                                     const BaseType_t xAutoReload,
 339:FreeRTOS-Kernel/timers.c ****                                     void * const pvTimerID,
 340:FreeRTOS-Kernel/timers.c ****                                     TimerCallbackFunction_t pxCallbackFunction )
 341:FreeRTOS-Kernel/timers.c ****         {
 342:FreeRTOS-Kernel/timers.c ****             Timer_t * pxNewTimer;
 343:FreeRTOS-Kernel/timers.c **** 
 344:FreeRTOS-Kernel/timers.c ****             traceENTER_xTimerCreate( pcTimerName, xTimerPeriodInTicks, xAutoReload, pvTimerID, pxCa
 345:FreeRTOS-Kernel/timers.c **** 
 346:FreeRTOS-Kernel/timers.c ****             /* MISRA Ref 11.5.1 [Malloc memory assignment] */
 347:FreeRTOS-Kernel/timers.c ****             /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#rule
 348:FreeRTOS-Kernel/timers.c ****             /* coverity[misra_c_2012_rule_11_5_violation] */
 349:FreeRTOS-Kernel/timers.c ****             pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 350:FreeRTOS-Kernel/timers.c **** 
 351:FreeRTOS-Kernel/timers.c ****             if( pxNewTimer != NULL )
 352:FreeRTOS-Kernel/timers.c ****             {
 353:FreeRTOS-Kernel/timers.c ****                 /* Status is thus far zero as the timer is not created statically
 354:FreeRTOS-Kernel/timers.c ****                  * and has not been started.  The auto-reload bit may get set in
 355:FreeRTOS-Kernel/timers.c ****                  * prvInitialiseNewTimer. */
 356:FreeRTOS-Kernel/timers.c ****                 pxNewTimer->ucStatus = 0x00;
 357:FreeRTOS-Kernel/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, xAutoReload, pvTimerID, px
 358:FreeRTOS-Kernel/timers.c ****             }
 359:FreeRTOS-Kernel/timers.c **** 
 360:FreeRTOS-Kernel/timers.c ****             traceRETURN_xTimerCreate( pxNewTimer );
 361:FreeRTOS-Kernel/timers.c **** 
 362:FreeRTOS-Kernel/timers.c ****             return pxNewTimer;
 363:FreeRTOS-Kernel/timers.c ****         }
 364:FreeRTOS-Kernel/timers.c **** 
 365:FreeRTOS-Kernel/timers.c ****     #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 366:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 367:FreeRTOS-Kernel/timers.c **** 
 368:FreeRTOS-Kernel/timers.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 369:FreeRTOS-Kernel/timers.c **** 
 370:FreeRTOS-Kernel/timers.c ****         TimerHandle_t xTimerCreateStatic( const char * const pcTimerName,
 371:FreeRTOS-Kernel/timers.c ****                                           const TickType_t xTimerPeriodInTicks,
 372:FreeRTOS-Kernel/timers.c ****                                           const BaseType_t xAutoReload,
ARM GAS  /tmp/ccbspmyw.s 			page 8


 373:FreeRTOS-Kernel/timers.c ****                                           void * const pvTimerID,
 374:FreeRTOS-Kernel/timers.c ****                                           TimerCallbackFunction_t pxCallbackFunction,
 375:FreeRTOS-Kernel/timers.c ****                                           StaticTimer_t * pxTimerBuffer )
 376:FreeRTOS-Kernel/timers.c ****         {
 377:FreeRTOS-Kernel/timers.c ****             Timer_t * pxNewTimer;
 378:FreeRTOS-Kernel/timers.c **** 
 379:FreeRTOS-Kernel/timers.c ****             traceENTER_xTimerCreateStatic( pcTimerName, xTimerPeriodInTicks, xAutoReload, pvTimerID
 380:FreeRTOS-Kernel/timers.c **** 
 381:FreeRTOS-Kernel/timers.c ****             #if ( configASSERT_DEFINED == 1 )
 382:FreeRTOS-Kernel/timers.c ****             {
 383:FreeRTOS-Kernel/timers.c ****                 /* Sanity check that the size of the structure used to declare a
 384:FreeRTOS-Kernel/timers.c ****                  * variable of type StaticTimer_t equals the size of the real timer
 385:FreeRTOS-Kernel/timers.c ****                  * structure. */
 386:FreeRTOS-Kernel/timers.c ****                 volatile size_t xSize = sizeof( StaticTimer_t );
 387:FreeRTOS-Kernel/timers.c ****                 configASSERT( xSize == sizeof( Timer_t ) );
 388:FreeRTOS-Kernel/timers.c ****                 ( void ) xSize; /* Prevent unused variable warning when configASSERT() is not defin
 389:FreeRTOS-Kernel/timers.c ****             }
 390:FreeRTOS-Kernel/timers.c ****             #endif /* configASSERT_DEFINED */
 391:FreeRTOS-Kernel/timers.c **** 
 392:FreeRTOS-Kernel/timers.c ****             /* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 393:FreeRTOS-Kernel/timers.c ****             configASSERT( pxTimerBuffer );
 394:FreeRTOS-Kernel/timers.c ****             /* MISRA Ref 11.3.1 [Misaligned access] */
 395:FreeRTOS-Kernel/timers.c ****             /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#rule
 396:FreeRTOS-Kernel/timers.c ****             /* coverity[misra_c_2012_rule_11_3_violation] */
 397:FreeRTOS-Kernel/timers.c ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer;
 398:FreeRTOS-Kernel/timers.c **** 
 399:FreeRTOS-Kernel/timers.c ****             if( pxNewTimer != NULL )
 400:FreeRTOS-Kernel/timers.c ****             {
 401:FreeRTOS-Kernel/timers.c ****                 /* Timers can be created statically or dynamically so note this
 402:FreeRTOS-Kernel/timers.c ****                  * timer was created statically in case it is later deleted.  The
 403:FreeRTOS-Kernel/timers.c ****                  * auto-reload bit may get set in prvInitialiseNewTimer(). */
 404:FreeRTOS-Kernel/timers.c ****                 pxNewTimer->ucStatus = ( uint8_t ) tmrSTATUS_IS_STATICALLY_ALLOCATED;
 405:FreeRTOS-Kernel/timers.c **** 
 406:FreeRTOS-Kernel/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, xAutoReload, pvTimerID, px
 407:FreeRTOS-Kernel/timers.c ****             }
 408:FreeRTOS-Kernel/timers.c **** 
 409:FreeRTOS-Kernel/timers.c ****             traceRETURN_xTimerCreateStatic( pxNewTimer );
 410:FreeRTOS-Kernel/timers.c **** 
 411:FreeRTOS-Kernel/timers.c ****             return pxNewTimer;
 412:FreeRTOS-Kernel/timers.c ****         }
 413:FreeRTOS-Kernel/timers.c **** 
 414:FreeRTOS-Kernel/timers.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
 415:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 416:FreeRTOS-Kernel/timers.c **** 
 417:FreeRTOS-Kernel/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName,
 418:FreeRTOS-Kernel/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 419:FreeRTOS-Kernel/timers.c ****                                        const BaseType_t xAutoReload,
 420:FreeRTOS-Kernel/timers.c ****                                        void * const pvTimerID,
 421:FreeRTOS-Kernel/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 422:FreeRTOS-Kernel/timers.c ****                                        Timer_t * pxNewTimer )
 423:FreeRTOS-Kernel/timers.c ****     {
 424:FreeRTOS-Kernel/timers.c ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 425:FreeRTOS-Kernel/timers.c ****         configASSERT( ( xTimerPeriodInTicks > 0 ) );
 426:FreeRTOS-Kernel/timers.c **** 
 427:FreeRTOS-Kernel/timers.c ****         /* Ensure the infrastructure used by the timer service task has been
 428:FreeRTOS-Kernel/timers.c ****          * created/initialised. */
 429:FreeRTOS-Kernel/timers.c ****         prvCheckForValidListAndQueue();
ARM GAS  /tmp/ccbspmyw.s 			page 9


 430:FreeRTOS-Kernel/timers.c **** 
 431:FreeRTOS-Kernel/timers.c ****         /* Initialise the timer structure members using the function
 432:FreeRTOS-Kernel/timers.c ****          * parameters. */
 433:FreeRTOS-Kernel/timers.c ****         pxNewTimer->pcTimerName = pcTimerName;
 434:FreeRTOS-Kernel/timers.c ****         pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 435:FreeRTOS-Kernel/timers.c ****         pxNewTimer->pvTimerID = pvTimerID;
 436:FreeRTOS-Kernel/timers.c ****         pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 437:FreeRTOS-Kernel/timers.c ****         vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 438:FreeRTOS-Kernel/timers.c **** 
 439:FreeRTOS-Kernel/timers.c ****         if( xAutoReload != pdFALSE )
 440:FreeRTOS-Kernel/timers.c ****         {
 441:FreeRTOS-Kernel/timers.c ****             pxNewTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_AUTORELOAD;
 442:FreeRTOS-Kernel/timers.c ****         }
 443:FreeRTOS-Kernel/timers.c **** 
 444:FreeRTOS-Kernel/timers.c ****         traceTIMER_CREATE( pxNewTimer );
 445:FreeRTOS-Kernel/timers.c ****     }
 446:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 447:FreeRTOS-Kernel/timers.c **** 
 448:FreeRTOS-Kernel/timers.c ****     BaseType_t xTimerGenericCommandFromTask( TimerHandle_t xTimer,
 449:FreeRTOS-Kernel/timers.c ****                                              const BaseType_t xCommandID,
 450:FreeRTOS-Kernel/timers.c ****                                              const TickType_t xOptionalValue,
 451:FreeRTOS-Kernel/timers.c ****                                              BaseType_t * const pxHigherPriorityTaskWoken,
 452:FreeRTOS-Kernel/timers.c ****                                              const TickType_t xTicksToWait )
 453:FreeRTOS-Kernel/timers.c ****     {
 454:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn = pdFAIL;
 455:FreeRTOS-Kernel/timers.c ****         DaemonTaskMessage_t xMessage;
 456:FreeRTOS-Kernel/timers.c **** 
 457:FreeRTOS-Kernel/timers.c ****         ( void ) pxHigherPriorityTaskWoken;
 458:FreeRTOS-Kernel/timers.c **** 
 459:FreeRTOS-Kernel/timers.c ****         traceENTER_xTimerGenericCommandFromTask( xTimer, xCommandID, xOptionalValue, pxHigherPriori
 460:FreeRTOS-Kernel/timers.c **** 
 461:FreeRTOS-Kernel/timers.c ****         configASSERT( xTimer );
 462:FreeRTOS-Kernel/timers.c **** 
 463:FreeRTOS-Kernel/timers.c ****         /* Send a message to the timer service task to perform a particular action
 464:FreeRTOS-Kernel/timers.c ****          * on a particular timer definition. */
 465:FreeRTOS-Kernel/timers.c ****         if( xTimerQueue != NULL )
 466:FreeRTOS-Kernel/timers.c ****         {
 467:FreeRTOS-Kernel/timers.c ****             /* Send a command to the timer service task to start the xTimer timer. */
 468:FreeRTOS-Kernel/timers.c ****             xMessage.xMessageID = xCommandID;
 469:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 470:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 471:FreeRTOS-Kernel/timers.c **** 
 472:FreeRTOS-Kernel/timers.c ****             configASSERT( xCommandID < tmrFIRST_FROM_ISR_COMMAND );
 473:FreeRTOS-Kernel/timers.c **** 
 474:FreeRTOS-Kernel/timers.c ****             if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 475:FreeRTOS-Kernel/timers.c ****             {
 476:FreeRTOS-Kernel/timers.c ****                 if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 477:FreeRTOS-Kernel/timers.c ****                 {
 478:FreeRTOS-Kernel/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 479:FreeRTOS-Kernel/timers.c ****                 }
 480:FreeRTOS-Kernel/timers.c ****                 else
 481:FreeRTOS-Kernel/timers.c ****                 {
 482:FreeRTOS-Kernel/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 483:FreeRTOS-Kernel/timers.c ****                 }
 484:FreeRTOS-Kernel/timers.c ****             }
 485:FreeRTOS-Kernel/timers.c **** 
 486:FreeRTOS-Kernel/timers.c ****             traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
ARM GAS  /tmp/ccbspmyw.s 			page 10


 487:FreeRTOS-Kernel/timers.c ****         }
 488:FreeRTOS-Kernel/timers.c ****         else
 489:FreeRTOS-Kernel/timers.c ****         {
 490:FreeRTOS-Kernel/timers.c ****             mtCOVERAGE_TEST_MARKER();
 491:FreeRTOS-Kernel/timers.c ****         }
 492:FreeRTOS-Kernel/timers.c **** 
 493:FreeRTOS-Kernel/timers.c ****         traceRETURN_xTimerGenericCommandFromTask( xReturn );
 494:FreeRTOS-Kernel/timers.c **** 
 495:FreeRTOS-Kernel/timers.c ****         return xReturn;
 496:FreeRTOS-Kernel/timers.c ****     }
 497:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 498:FreeRTOS-Kernel/timers.c **** 
 499:FreeRTOS-Kernel/timers.c ****     BaseType_t xTimerGenericCommandFromISR( TimerHandle_t xTimer,
 500:FreeRTOS-Kernel/timers.c ****                                             const BaseType_t xCommandID,
 501:FreeRTOS-Kernel/timers.c ****                                             const TickType_t xOptionalValue,
 502:FreeRTOS-Kernel/timers.c ****                                             BaseType_t * const pxHigherPriorityTaskWoken,
 503:FreeRTOS-Kernel/timers.c ****                                             const TickType_t xTicksToWait )
 504:FreeRTOS-Kernel/timers.c ****     {
 505:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn = pdFAIL;
 506:FreeRTOS-Kernel/timers.c ****         DaemonTaskMessage_t xMessage;
 507:FreeRTOS-Kernel/timers.c **** 
 508:FreeRTOS-Kernel/timers.c ****         ( void ) xTicksToWait;
 509:FreeRTOS-Kernel/timers.c **** 
 510:FreeRTOS-Kernel/timers.c ****         traceENTER_xTimerGenericCommandFromISR( xTimer, xCommandID, xOptionalValue, pxHigherPriorit
 511:FreeRTOS-Kernel/timers.c **** 
 512:FreeRTOS-Kernel/timers.c ****         configASSERT( xTimer );
 513:FreeRTOS-Kernel/timers.c **** 
 514:FreeRTOS-Kernel/timers.c ****         /* Send a message to the timer service task to perform a particular action
 515:FreeRTOS-Kernel/timers.c ****          * on a particular timer definition. */
 516:FreeRTOS-Kernel/timers.c ****         if( xTimerQueue != NULL )
 517:FreeRTOS-Kernel/timers.c ****         {
 518:FreeRTOS-Kernel/timers.c ****             /* Send a command to the timer service task to start the xTimer timer. */
 519:FreeRTOS-Kernel/timers.c ****             xMessage.xMessageID = xCommandID;
 520:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 521:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 522:FreeRTOS-Kernel/timers.c **** 
 523:FreeRTOS-Kernel/timers.c ****             configASSERT( xCommandID >= tmrFIRST_FROM_ISR_COMMAND );
 524:FreeRTOS-Kernel/timers.c **** 
 525:FreeRTOS-Kernel/timers.c ****             if( xCommandID >= tmrFIRST_FROM_ISR_COMMAND )
 526:FreeRTOS-Kernel/timers.c ****             {
 527:FreeRTOS-Kernel/timers.c ****                 xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoke
 528:FreeRTOS-Kernel/timers.c ****             }
 529:FreeRTOS-Kernel/timers.c **** 
 530:FreeRTOS-Kernel/timers.c ****             traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 531:FreeRTOS-Kernel/timers.c ****         }
 532:FreeRTOS-Kernel/timers.c ****         else
 533:FreeRTOS-Kernel/timers.c ****         {
 534:FreeRTOS-Kernel/timers.c ****             mtCOVERAGE_TEST_MARKER();
 535:FreeRTOS-Kernel/timers.c ****         }
 536:FreeRTOS-Kernel/timers.c **** 
 537:FreeRTOS-Kernel/timers.c ****         traceRETURN_xTimerGenericCommandFromISR( xReturn );
 538:FreeRTOS-Kernel/timers.c **** 
 539:FreeRTOS-Kernel/timers.c ****         return xReturn;
 540:FreeRTOS-Kernel/timers.c ****     }
 541:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 542:FreeRTOS-Kernel/timers.c **** 
 543:FreeRTOS-Kernel/timers.c ****     TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
ARM GAS  /tmp/ccbspmyw.s 			page 11


 544:FreeRTOS-Kernel/timers.c ****     {
 545:FreeRTOS-Kernel/timers.c ****         traceENTER_xTimerGetTimerDaemonTaskHandle();
 546:FreeRTOS-Kernel/timers.c **** 
 547:FreeRTOS-Kernel/timers.c ****         /* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 548:FreeRTOS-Kernel/timers.c ****          * started, then xTimerTaskHandle will be NULL. */
 549:FreeRTOS-Kernel/timers.c ****         configASSERT( ( xTimerTaskHandle != NULL ) );
 550:FreeRTOS-Kernel/timers.c **** 
 551:FreeRTOS-Kernel/timers.c ****         traceRETURN_xTimerGetTimerDaemonTaskHandle( xTimerTaskHandle );
 552:FreeRTOS-Kernel/timers.c **** 
 553:FreeRTOS-Kernel/timers.c ****         return xTimerTaskHandle;
 554:FreeRTOS-Kernel/timers.c ****     }
 555:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 556:FreeRTOS-Kernel/timers.c **** 
 557:FreeRTOS-Kernel/timers.c ****     TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 558:FreeRTOS-Kernel/timers.c ****     {
 559:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 560:FreeRTOS-Kernel/timers.c **** 
 561:FreeRTOS-Kernel/timers.c ****         traceENTER_xTimerGetPeriod( xTimer );
 562:FreeRTOS-Kernel/timers.c **** 
 563:FreeRTOS-Kernel/timers.c ****         configASSERT( xTimer );
 564:FreeRTOS-Kernel/timers.c **** 
 565:FreeRTOS-Kernel/timers.c ****         traceRETURN_xTimerGetPeriod( pxTimer->xTimerPeriodInTicks );
 566:FreeRTOS-Kernel/timers.c **** 
 567:FreeRTOS-Kernel/timers.c ****         return pxTimer->xTimerPeriodInTicks;
 568:FreeRTOS-Kernel/timers.c ****     }
 569:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 570:FreeRTOS-Kernel/timers.c **** 
 571:FreeRTOS-Kernel/timers.c ****     void vTimerSetReloadMode( TimerHandle_t xTimer,
 572:FreeRTOS-Kernel/timers.c ****                               const BaseType_t xAutoReload )
 573:FreeRTOS-Kernel/timers.c ****     {
 574:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 575:FreeRTOS-Kernel/timers.c **** 
 576:FreeRTOS-Kernel/timers.c ****         traceENTER_vTimerSetReloadMode( xTimer, xAutoReload );
 577:FreeRTOS-Kernel/timers.c **** 
 578:FreeRTOS-Kernel/timers.c ****         configASSERT( xTimer );
 579:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 580:FreeRTOS-Kernel/timers.c ****         {
 581:FreeRTOS-Kernel/timers.c ****             if( xAutoReload != pdFALSE )
 582:FreeRTOS-Kernel/timers.c ****             {
 583:FreeRTOS-Kernel/timers.c ****                 pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_AUTORELOAD;
 584:FreeRTOS-Kernel/timers.c ****             }
 585:FreeRTOS-Kernel/timers.c ****             else
 586:FreeRTOS-Kernel/timers.c ****             {
 587:FreeRTOS-Kernel/timers.c ****                 pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_AUTORELOAD );
 588:FreeRTOS-Kernel/timers.c ****             }
 589:FreeRTOS-Kernel/timers.c ****         }
 590:FreeRTOS-Kernel/timers.c ****         taskEXIT_CRITICAL();
 591:FreeRTOS-Kernel/timers.c **** 
 592:FreeRTOS-Kernel/timers.c ****         traceRETURN_vTimerSetReloadMode();
 593:FreeRTOS-Kernel/timers.c ****     }
 594:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 595:FreeRTOS-Kernel/timers.c **** 
 596:FreeRTOS-Kernel/timers.c ****     BaseType_t xTimerGetReloadMode( TimerHandle_t xTimer )
 597:FreeRTOS-Kernel/timers.c ****     {
 598:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 599:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn;
 600:FreeRTOS-Kernel/timers.c **** 
ARM GAS  /tmp/ccbspmyw.s 			page 12


 601:FreeRTOS-Kernel/timers.c ****         traceENTER_xTimerGetReloadMode( xTimer );
 602:FreeRTOS-Kernel/timers.c **** 
 603:FreeRTOS-Kernel/timers.c ****         configASSERT( xTimer );
 604:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 605:FreeRTOS-Kernel/timers.c ****         {
 606:FreeRTOS-Kernel/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) == 0U )
 607:FreeRTOS-Kernel/timers.c ****             {
 608:FreeRTOS-Kernel/timers.c ****                 /* Not an auto-reload timer. */
 609:FreeRTOS-Kernel/timers.c ****                 xReturn = pdFALSE;
 610:FreeRTOS-Kernel/timers.c ****             }
 611:FreeRTOS-Kernel/timers.c ****             else
 612:FreeRTOS-Kernel/timers.c ****             {
 613:FreeRTOS-Kernel/timers.c ****                 /* Is an auto-reload timer. */
 614:FreeRTOS-Kernel/timers.c ****                 xReturn = pdTRUE;
 615:FreeRTOS-Kernel/timers.c ****             }
 616:FreeRTOS-Kernel/timers.c ****         }
 617:FreeRTOS-Kernel/timers.c ****         taskEXIT_CRITICAL();
 618:FreeRTOS-Kernel/timers.c **** 
 619:FreeRTOS-Kernel/timers.c ****         traceRETURN_xTimerGetReloadMode( xReturn );
 620:FreeRTOS-Kernel/timers.c **** 
 621:FreeRTOS-Kernel/timers.c ****         return xReturn;
 622:FreeRTOS-Kernel/timers.c ****     }
 623:FreeRTOS-Kernel/timers.c **** 
 624:FreeRTOS-Kernel/timers.c ****     UBaseType_t uxTimerGetReloadMode( TimerHandle_t xTimer )
 625:FreeRTOS-Kernel/timers.c ****     {
 626:FreeRTOS-Kernel/timers.c ****         UBaseType_t uxReturn;
 627:FreeRTOS-Kernel/timers.c **** 
 628:FreeRTOS-Kernel/timers.c ****         traceENTER_uxTimerGetReloadMode( xTimer );
 629:FreeRTOS-Kernel/timers.c **** 
 630:FreeRTOS-Kernel/timers.c ****         uxReturn = ( UBaseType_t ) xTimerGetReloadMode( xTimer );
 631:FreeRTOS-Kernel/timers.c **** 
 632:FreeRTOS-Kernel/timers.c ****         traceRETURN_uxTimerGetReloadMode( uxReturn );
 633:FreeRTOS-Kernel/timers.c **** 
 634:FreeRTOS-Kernel/timers.c ****         return uxReturn;
 635:FreeRTOS-Kernel/timers.c ****     }
 636:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 637:FreeRTOS-Kernel/timers.c **** 
 638:FreeRTOS-Kernel/timers.c ****     TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 639:FreeRTOS-Kernel/timers.c ****     {
 640:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 641:FreeRTOS-Kernel/timers.c ****         TickType_t xReturn;
 642:FreeRTOS-Kernel/timers.c **** 
 643:FreeRTOS-Kernel/timers.c ****         traceENTER_xTimerGetExpiryTime( xTimer );
 644:FreeRTOS-Kernel/timers.c **** 
 645:FreeRTOS-Kernel/timers.c ****         configASSERT( xTimer );
 646:FreeRTOS-Kernel/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 647:FreeRTOS-Kernel/timers.c **** 
 648:FreeRTOS-Kernel/timers.c ****         traceRETURN_xTimerGetExpiryTime( xReturn );
 649:FreeRTOS-Kernel/timers.c **** 
 650:FreeRTOS-Kernel/timers.c ****         return xReturn;
 651:FreeRTOS-Kernel/timers.c ****     }
 652:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 653:FreeRTOS-Kernel/timers.c **** 
 654:FreeRTOS-Kernel/timers.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 655:FreeRTOS-Kernel/timers.c ****         BaseType_t xTimerGetStaticBuffer( TimerHandle_t xTimer,
 656:FreeRTOS-Kernel/timers.c ****                                           StaticTimer_t ** ppxTimerBuffer )
 657:FreeRTOS-Kernel/timers.c ****         {
ARM GAS  /tmp/ccbspmyw.s 			page 13


 658:FreeRTOS-Kernel/timers.c ****             BaseType_t xReturn;
 659:FreeRTOS-Kernel/timers.c ****             Timer_t * pxTimer = xTimer;
 660:FreeRTOS-Kernel/timers.c **** 
 661:FreeRTOS-Kernel/timers.c ****             traceENTER_xTimerGetStaticBuffer( xTimer, ppxTimerBuffer );
 662:FreeRTOS-Kernel/timers.c **** 
 663:FreeRTOS-Kernel/timers.c ****             configASSERT( ppxTimerBuffer != NULL );
 664:FreeRTOS-Kernel/timers.c **** 
 665:FreeRTOS-Kernel/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) != 0U )
 666:FreeRTOS-Kernel/timers.c ****             {
 667:FreeRTOS-Kernel/timers.c ****                 /* MISRA Ref 11.3.1 [Misaligned access] */
 668:FreeRTOS-Kernel/timers.c ****                 /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#
 669:FreeRTOS-Kernel/timers.c ****                 /* coverity[misra_c_2012_rule_11_3_violation] */
 670:FreeRTOS-Kernel/timers.c ****                 *ppxTimerBuffer = ( StaticTimer_t * ) pxTimer;
 671:FreeRTOS-Kernel/timers.c ****                 xReturn = pdTRUE;
 672:FreeRTOS-Kernel/timers.c ****             }
 673:FreeRTOS-Kernel/timers.c ****             else
 674:FreeRTOS-Kernel/timers.c ****             {
 675:FreeRTOS-Kernel/timers.c ****                 xReturn = pdFALSE;
 676:FreeRTOS-Kernel/timers.c ****             }
 677:FreeRTOS-Kernel/timers.c **** 
 678:FreeRTOS-Kernel/timers.c ****             traceRETURN_xTimerGetStaticBuffer( xReturn );
 679:FreeRTOS-Kernel/timers.c **** 
 680:FreeRTOS-Kernel/timers.c ****             return xReturn;
 681:FreeRTOS-Kernel/timers.c ****         }
 682:FreeRTOS-Kernel/timers.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
 683:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 684:FreeRTOS-Kernel/timers.c **** 
 685:FreeRTOS-Kernel/timers.c ****     const char * pcTimerGetName( TimerHandle_t xTimer )
 686:FreeRTOS-Kernel/timers.c ****     {
 687:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 688:FreeRTOS-Kernel/timers.c **** 
 689:FreeRTOS-Kernel/timers.c ****         traceENTER_pcTimerGetName( xTimer );
 690:FreeRTOS-Kernel/timers.c **** 
 691:FreeRTOS-Kernel/timers.c ****         configASSERT( xTimer );
 692:FreeRTOS-Kernel/timers.c **** 
 693:FreeRTOS-Kernel/timers.c ****         traceRETURN_pcTimerGetName( pxTimer->pcTimerName );
 694:FreeRTOS-Kernel/timers.c **** 
 695:FreeRTOS-Kernel/timers.c ****         return pxTimer->pcTimerName;
 696:FreeRTOS-Kernel/timers.c ****     }
 697:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 698:FreeRTOS-Kernel/timers.c **** 
 699:FreeRTOS-Kernel/timers.c ****     static void prvReloadTimer( Timer_t * const pxTimer,
 700:FreeRTOS-Kernel/timers.c ****                                 TickType_t xExpiredTime,
 701:FreeRTOS-Kernel/timers.c ****                                 const TickType_t xTimeNow )
 702:FreeRTOS-Kernel/timers.c ****     {
 703:FreeRTOS-Kernel/timers.c ****         /* Insert the timer into the appropriate list for the next expiry time.
 704:FreeRTOS-Kernel/timers.c ****          * If the next expiry time has already passed, advance the expiry time,
 705:FreeRTOS-Kernel/timers.c ****          * call the callback function, and try again. */
 706:FreeRTOS-Kernel/timers.c ****         while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks )
 707:FreeRTOS-Kernel/timers.c ****         {
 708:FreeRTOS-Kernel/timers.c ****             /* Advance the expiry time. */
 709:FreeRTOS-Kernel/timers.c ****             xExpiredTime += pxTimer->xTimerPeriodInTicks;
 710:FreeRTOS-Kernel/timers.c **** 
 711:FreeRTOS-Kernel/timers.c ****             /* Call the timer callback. */
 712:FreeRTOS-Kernel/timers.c ****             traceTIMER_EXPIRED( pxTimer );
 713:FreeRTOS-Kernel/timers.c ****             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 714:FreeRTOS-Kernel/timers.c ****         }
ARM GAS  /tmp/ccbspmyw.s 			page 14


 715:FreeRTOS-Kernel/timers.c ****     }
 716:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 717:FreeRTOS-Kernel/timers.c **** 
 718:FreeRTOS-Kernel/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 719:FreeRTOS-Kernel/timers.c ****                                         const TickType_t xTimeNow )
 720:FreeRTOS-Kernel/timers.c ****     {
 721:FreeRTOS-Kernel/timers.c ****         /* MISRA Ref 11.5.3 [Void pointer assignment] */
 722:FreeRTOS-Kernel/timers.c ****         /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#rule-115
 723:FreeRTOS-Kernel/timers.c ****         /* coverity[misra_c_2012_rule_11_5_violation] */
 724:FreeRTOS-Kernel/timers.c ****         Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 725:FreeRTOS-Kernel/timers.c **** 
 726:FreeRTOS-Kernel/timers.c ****         /* Remove the timer from the list of active timers.  A check has already
 727:FreeRTOS-Kernel/timers.c ****          * been performed to ensure the list is not empty. */
 728:FreeRTOS-Kernel/timers.c **** 
 729:FreeRTOS-Kernel/timers.c ****         ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 730:FreeRTOS-Kernel/timers.c **** 
 731:FreeRTOS-Kernel/timers.c ****         /* If the timer is an auto-reload timer then calculate the next
 732:FreeRTOS-Kernel/timers.c ****          * expiry time and re-insert the timer in the list of active timers. */
 733:FreeRTOS-Kernel/timers.c ****         if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
 734:FreeRTOS-Kernel/timers.c ****         {
 735:FreeRTOS-Kernel/timers.c ****             prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
 736:FreeRTOS-Kernel/timers.c ****         }
 737:FreeRTOS-Kernel/timers.c ****         else
 738:FreeRTOS-Kernel/timers.c ****         {
 739:FreeRTOS-Kernel/timers.c ****             pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 740:FreeRTOS-Kernel/timers.c ****         }
 741:FreeRTOS-Kernel/timers.c **** 
 742:FreeRTOS-Kernel/timers.c ****         /* Call the timer callback. */
 743:FreeRTOS-Kernel/timers.c ****         traceTIMER_EXPIRED( pxTimer );
 744:FreeRTOS-Kernel/timers.c ****         pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 745:FreeRTOS-Kernel/timers.c ****     }
 746:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 747:FreeRTOS-Kernel/timers.c **** 
 748:FreeRTOS-Kernel/timers.c ****     static portTASK_FUNCTION( prvTimerTask, pvParameters )
 749:FreeRTOS-Kernel/timers.c ****     {
 750:FreeRTOS-Kernel/timers.c ****         TickType_t xNextExpireTime;
 751:FreeRTOS-Kernel/timers.c ****         BaseType_t xListWasEmpty;
 752:FreeRTOS-Kernel/timers.c **** 
 753:FreeRTOS-Kernel/timers.c ****         /* Just to avoid compiler warnings. */
 754:FreeRTOS-Kernel/timers.c ****         ( void ) pvParameters;
 755:FreeRTOS-Kernel/timers.c **** 
 756:FreeRTOS-Kernel/timers.c ****         #if ( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 757:FreeRTOS-Kernel/timers.c ****         {
 758:FreeRTOS-Kernel/timers.c ****             /* Allow the application writer to execute some code in the context of
 759:FreeRTOS-Kernel/timers.c ****              * this task at the point the task starts executing.  This is useful if the
 760:FreeRTOS-Kernel/timers.c ****              * application includes initialisation code that would benefit from
 761:FreeRTOS-Kernel/timers.c ****              * executing after the scheduler has been started. */
 762:FreeRTOS-Kernel/timers.c ****             vApplicationDaemonTaskStartupHook();
 763:FreeRTOS-Kernel/timers.c ****         }
 764:FreeRTOS-Kernel/timers.c ****         #endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 765:FreeRTOS-Kernel/timers.c **** 
 766:FreeRTOS-Kernel/timers.c ****         for( ; configCONTROL_INFINITE_LOOP(); )
 767:FreeRTOS-Kernel/timers.c ****         {
 768:FreeRTOS-Kernel/timers.c ****             /* Query the timers list to see if it contains any timers, and if so,
 769:FreeRTOS-Kernel/timers.c ****              * obtain the time at which the next timer will expire. */
 770:FreeRTOS-Kernel/timers.c ****             xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 771:FreeRTOS-Kernel/timers.c **** 
ARM GAS  /tmp/ccbspmyw.s 			page 15


 772:FreeRTOS-Kernel/timers.c ****             /* If a timer has expired, process it.  Otherwise, block this task
 773:FreeRTOS-Kernel/timers.c ****              * until either a timer does expire, or a command is received. */
 774:FreeRTOS-Kernel/timers.c ****             prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 775:FreeRTOS-Kernel/timers.c **** 
 776:FreeRTOS-Kernel/timers.c ****             /* Empty the command queue. */
 777:FreeRTOS-Kernel/timers.c ****             prvProcessReceivedCommands();
 778:FreeRTOS-Kernel/timers.c ****         }
 779:FreeRTOS-Kernel/timers.c ****     }
 780:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 781:FreeRTOS-Kernel/timers.c **** 
 782:FreeRTOS-Kernel/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 783:FreeRTOS-Kernel/timers.c ****                                             BaseType_t xListWasEmpty )
 784:FreeRTOS-Kernel/timers.c ****     {
 785:FreeRTOS-Kernel/timers.c ****         TickType_t xTimeNow;
 786:FreeRTOS-Kernel/timers.c ****         BaseType_t xTimerListsWereSwitched;
 787:FreeRTOS-Kernel/timers.c **** 
 788:FreeRTOS-Kernel/timers.c ****         vTaskSuspendAll();
 789:FreeRTOS-Kernel/timers.c ****         {
 790:FreeRTOS-Kernel/timers.c ****             /* Obtain the time now to make an assessment as to whether the timer
 791:FreeRTOS-Kernel/timers.c ****              * has expired or not.  If obtaining the time causes the lists to switch
 792:FreeRTOS-Kernel/timers.c ****              * then don't process this timer as any timers that remained in the list
 793:FreeRTOS-Kernel/timers.c ****              * when the lists were switched will have been processed within the
 794:FreeRTOS-Kernel/timers.c ****              * prvSampleTimeNow() function. */
 795:FreeRTOS-Kernel/timers.c ****             xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 796:FreeRTOS-Kernel/timers.c **** 
 797:FreeRTOS-Kernel/timers.c ****             if( xTimerListsWereSwitched == pdFALSE )
 798:FreeRTOS-Kernel/timers.c ****             {
 799:FreeRTOS-Kernel/timers.c ****                 /* The tick count has not overflowed, has the timer expired? */
 800:FreeRTOS-Kernel/timers.c ****                 if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 801:FreeRTOS-Kernel/timers.c ****                 {
 802:FreeRTOS-Kernel/timers.c ****                     ( void ) xTaskResumeAll();
 803:FreeRTOS-Kernel/timers.c ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 804:FreeRTOS-Kernel/timers.c ****                 }
 805:FreeRTOS-Kernel/timers.c ****                 else
 806:FreeRTOS-Kernel/timers.c ****                 {
 807:FreeRTOS-Kernel/timers.c ****                     /* The tick count has not overflowed, and the next expire
 808:FreeRTOS-Kernel/timers.c ****                      * time has not been reached yet.  This task should therefore
 809:FreeRTOS-Kernel/timers.c ****                      * block to wait for the next expire time or a command to be
 810:FreeRTOS-Kernel/timers.c ****                      * received - whichever comes first.  The following line cannot
 811:FreeRTOS-Kernel/timers.c ****                      * be reached unless xNextExpireTime > xTimeNow, except in the
 812:FreeRTOS-Kernel/timers.c ****                      * case when the current timer list is empty. */
 813:FreeRTOS-Kernel/timers.c ****                     if( xListWasEmpty != pdFALSE )
 814:FreeRTOS-Kernel/timers.c ****                     {
 815:FreeRTOS-Kernel/timers.c ****                         /* The current timer list is empty - is the overflow list
 816:FreeRTOS-Kernel/timers.c ****                          * also empty? */
 817:FreeRTOS-Kernel/timers.c ****                         xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 818:FreeRTOS-Kernel/timers.c ****                     }
 819:FreeRTOS-Kernel/timers.c **** 
 820:FreeRTOS-Kernel/timers.c ****                     vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xL
 821:FreeRTOS-Kernel/timers.c **** 
 822:FreeRTOS-Kernel/timers.c ****                     if( xTaskResumeAll() == pdFALSE )
 823:FreeRTOS-Kernel/timers.c ****                     {
 824:FreeRTOS-Kernel/timers.c ****                         /* Yield to wait for either a command to arrive, or the
 825:FreeRTOS-Kernel/timers.c ****                          * block time to expire.  If a command arrived between the
 826:FreeRTOS-Kernel/timers.c ****                          * critical section being exited and this yield then the yield
 827:FreeRTOS-Kernel/timers.c ****                          * will not cause the task to block. */
 828:FreeRTOS-Kernel/timers.c ****                         taskYIELD_WITHIN_API();
ARM GAS  /tmp/ccbspmyw.s 			page 16


 829:FreeRTOS-Kernel/timers.c ****                     }
 830:FreeRTOS-Kernel/timers.c ****                     else
 831:FreeRTOS-Kernel/timers.c ****                     {
 832:FreeRTOS-Kernel/timers.c ****                         mtCOVERAGE_TEST_MARKER();
 833:FreeRTOS-Kernel/timers.c ****                     }
 834:FreeRTOS-Kernel/timers.c ****                 }
 835:FreeRTOS-Kernel/timers.c ****             }
 836:FreeRTOS-Kernel/timers.c ****             else
 837:FreeRTOS-Kernel/timers.c ****             {
 838:FreeRTOS-Kernel/timers.c ****                 ( void ) xTaskResumeAll();
 839:FreeRTOS-Kernel/timers.c ****             }
 840:FreeRTOS-Kernel/timers.c ****         }
 841:FreeRTOS-Kernel/timers.c ****     }
 842:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 843:FreeRTOS-Kernel/timers.c **** 
 844:FreeRTOS-Kernel/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 845:FreeRTOS-Kernel/timers.c ****     {
  29              		.loc 1 845 5 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 846:FreeRTOS-Kernel/timers.c ****         TickType_t xNextExpireTime;
  34              		.loc 1 846 9 view .LVU1
 847:FreeRTOS-Kernel/timers.c **** 
 848:FreeRTOS-Kernel/timers.c ****         /* Timers are listed in expiry time order, with the head of the list
 849:FreeRTOS-Kernel/timers.c ****          * referencing the task that will expire first.  Obtain the time at which
 850:FreeRTOS-Kernel/timers.c ****          * the timer with the nearest expiry time will expire.  If there are no
 851:FreeRTOS-Kernel/timers.c ****          * active timers then just set the next expire time to 0.  That will cause
 852:FreeRTOS-Kernel/timers.c ****          * this task to unblock when the tick count overflows, at which point the
 853:FreeRTOS-Kernel/timers.c ****          * timer lists will be switched and the next expiry time can be
 854:FreeRTOS-Kernel/timers.c ****          * re-assessed.  */
 855:FreeRTOS-Kernel/timers.c ****         *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  35              		.loc 1 855 9 view .LVU2
  36              		.loc 1 855 27 is_stmt 0 view .LVU3
  37 0000 064B     		ldr	r3, .L6
  38 0002 1A68     		ldr	r2, [r3]
  39 0004 1368     		ldr	r3, [r2]
  40 0006 2BB9     		cbnz	r3, .L4
  41 0008 0123     		movs	r3, #1
  42              	.L2:
  43              		.loc 1 855 25 discriminator 4 view .LVU4
  44 000a 0360     		str	r3, [r0]
 856:FreeRTOS-Kernel/timers.c **** 
 857:FreeRTOS-Kernel/timers.c ****         if( *pxListWasEmpty == pdFALSE )
  45              		.loc 1 857 9 is_stmt 1 discriminator 4 view .LVU5
  46              		.loc 1 857 11 is_stmt 0 discriminator 4 view .LVU6
  47 000c 23B9     		cbnz	r3, .L5
 858:FreeRTOS-Kernel/timers.c ****         {
 859:FreeRTOS-Kernel/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  48              		.loc 1 859 13 is_stmt 1 view .LVU7
  49              		.loc 1 859 31 is_stmt 0 view .LVU8
  50 000e D368     		ldr	r3, [r2, #12]
  51              		.loc 1 859 29 view .LVU9
  52 0010 1868     		ldr	r0, [r3]
  53              	.LVL1:
  54              		.loc 1 859 29 view .LVU10
ARM GAS  /tmp/ccbspmyw.s 			page 17


  55 0012 7047     		bx	lr
  56              	.LVL2:
  57              	.L4:
 855:FreeRTOS-Kernel/timers.c **** 
  58              		.loc 1 855 27 view .LVU11
  59 0014 0023     		movs	r3, #0
  60 0016 F8E7     		b	.L2
  61              	.L5:
 860:FreeRTOS-Kernel/timers.c ****         }
 861:FreeRTOS-Kernel/timers.c ****         else
 862:FreeRTOS-Kernel/timers.c ****         {
 863:FreeRTOS-Kernel/timers.c ****             /* Ensure the task unblocks when the tick count rolls over. */
 864:FreeRTOS-Kernel/timers.c ****             xNextExpireTime = ( TickType_t ) 0U;
  62              		.loc 1 864 29 view .LVU12
  63 0018 0020     		movs	r0, #0
  64              	.LVL3:
 865:FreeRTOS-Kernel/timers.c ****         }
 866:FreeRTOS-Kernel/timers.c **** 
 867:FreeRTOS-Kernel/timers.c ****         return xNextExpireTime;
  65              		.loc 1 867 9 is_stmt 1 view .LVU13
 868:FreeRTOS-Kernel/timers.c ****     }
  66              		.loc 1 868 5 is_stmt 0 view .LVU14
  67 001a 7047     		bx	lr
  68              	.L7:
  69              		.align	2
  70              	.L6:
  71 001c 00000000 		.word	pxCurrentTimerList
  72              		.cfi_endproc
  73              	.LFE22:
  75              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	prvInsertTimerInActiveList:
  82              	.LVL4:
  83              	.LFB24:
 869:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 870:FreeRTOS-Kernel/timers.c **** 
 871:FreeRTOS-Kernel/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 872:FreeRTOS-Kernel/timers.c ****     {
 873:FreeRTOS-Kernel/timers.c ****         TickType_t xTimeNow;
 874:FreeRTOS-Kernel/timers.c ****         PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U;
 875:FreeRTOS-Kernel/timers.c **** 
 876:FreeRTOS-Kernel/timers.c ****         xTimeNow = xTaskGetTickCount();
 877:FreeRTOS-Kernel/timers.c **** 
 878:FreeRTOS-Kernel/timers.c ****         if( xTimeNow < xLastTime )
 879:FreeRTOS-Kernel/timers.c ****         {
 880:FreeRTOS-Kernel/timers.c ****             prvSwitchTimerLists();
 881:FreeRTOS-Kernel/timers.c ****             *pxTimerListsWereSwitched = pdTRUE;
 882:FreeRTOS-Kernel/timers.c ****         }
 883:FreeRTOS-Kernel/timers.c ****         else
 884:FreeRTOS-Kernel/timers.c ****         {
 885:FreeRTOS-Kernel/timers.c ****             *pxTimerListsWereSwitched = pdFALSE;
 886:FreeRTOS-Kernel/timers.c ****         }
 887:FreeRTOS-Kernel/timers.c **** 
 888:FreeRTOS-Kernel/timers.c ****         xLastTime = xTimeNow;
ARM GAS  /tmp/ccbspmyw.s 			page 18


 889:FreeRTOS-Kernel/timers.c **** 
 890:FreeRTOS-Kernel/timers.c ****         return xTimeNow;
 891:FreeRTOS-Kernel/timers.c ****     }
 892:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 893:FreeRTOS-Kernel/timers.c **** 
 894:FreeRTOS-Kernel/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 895:FreeRTOS-Kernel/timers.c ****                                                   const TickType_t xNextExpiryTime,
 896:FreeRTOS-Kernel/timers.c ****                                                   const TickType_t xTimeNow,
 897:FreeRTOS-Kernel/timers.c ****                                                   const TickType_t xCommandTime )
 898:FreeRTOS-Kernel/timers.c ****     {
  84              		.loc 1 898 5 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		.loc 1 898 5 is_stmt 0 view .LVU16
  89 0000 08B5     		push	{r3, lr}
  90              	.LCFI0:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 3, -8
  93              		.cfi_offset 14, -4
 899:FreeRTOS-Kernel/timers.c ****         BaseType_t xProcessTimerNow = pdFALSE;
  94              		.loc 1 899 9 is_stmt 1 view .LVU17
  95              	.LVL5:
 900:FreeRTOS-Kernel/timers.c **** 
 901:FreeRTOS-Kernel/timers.c ****         listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  96              		.loc 1 901 9 view .LVU18
  97 0002 4160     		str	r1, [r0, #4]
 902:FreeRTOS-Kernel/timers.c ****         listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  98              		.loc 1 902 9 view .LVU19
  99 0004 0061     		str	r0, [r0, #16]
 903:FreeRTOS-Kernel/timers.c **** 
 904:FreeRTOS-Kernel/timers.c ****         if( xNextExpiryTime <= xTimeNow )
 100              		.loc 1 904 9 view .LVU20
 101              		.loc 1 904 11 is_stmt 0 view .LVU21
 102 0006 9142     		cmp	r1, r2
 103 0008 0CD8     		bhi	.L9
 905:FreeRTOS-Kernel/timers.c ****         {
 906:FreeRTOS-Kernel/timers.c ****             /* Has the expiry time elapsed between the command to start/reset a
 907:FreeRTOS-Kernel/timers.c ****              * timer was issued, and the time the command was processed? */
 908:FreeRTOS-Kernel/timers.c ****             if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks )
 104              		.loc 1 908 13 is_stmt 1 view .LVU22
 105              		.loc 1 908 45 is_stmt 0 view .LVU23
 106 000a D21A     		subs	r2, r2, r3
 107              	.LVL6:
 108              		.loc 1 908 74 view .LVU24
 109 000c 8369     		ldr	r3, [r0, #24]
 110              	.LVL7:
 111              		.loc 1 908 15 view .LVU25
 112 000e 9A42     		cmp	r2, r3
 113 0010 01D3     		bcc	.L15
 909:FreeRTOS-Kernel/timers.c ****             {
 910:FreeRTOS-Kernel/timers.c ****                 /* The time between a command being issued and the command being
 911:FreeRTOS-Kernel/timers.c ****                  * processed actually exceeds the timers period.  */
 912:FreeRTOS-Kernel/timers.c ****                 xProcessTimerNow = pdTRUE;
 114              		.loc 1 912 34 view .LVU26
 115 0012 0120     		movs	r0, #1
 116              	.LVL8:
ARM GAS  /tmp/ccbspmyw.s 			page 19


 117              	.L8:
 913:FreeRTOS-Kernel/timers.c ****             }
 914:FreeRTOS-Kernel/timers.c ****             else
 915:FreeRTOS-Kernel/timers.c ****             {
 916:FreeRTOS-Kernel/timers.c ****                 vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 917:FreeRTOS-Kernel/timers.c ****             }
 918:FreeRTOS-Kernel/timers.c ****         }
 919:FreeRTOS-Kernel/timers.c ****         else
 920:FreeRTOS-Kernel/timers.c ****         {
 921:FreeRTOS-Kernel/timers.c ****             if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 922:FreeRTOS-Kernel/timers.c ****             {
 923:FreeRTOS-Kernel/timers.c ****                 /* If, since the command was issued, the tick count has overflowed
 924:FreeRTOS-Kernel/timers.c ****                  * but the expiry time has not, then the timer must have already passed
 925:FreeRTOS-Kernel/timers.c ****                  * its expiry time and should be processed immediately. */
 926:FreeRTOS-Kernel/timers.c ****                 xProcessTimerNow = pdTRUE;
 927:FreeRTOS-Kernel/timers.c ****             }
 928:FreeRTOS-Kernel/timers.c ****             else
 929:FreeRTOS-Kernel/timers.c ****             {
 930:FreeRTOS-Kernel/timers.c ****                 vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 931:FreeRTOS-Kernel/timers.c ****             }
 932:FreeRTOS-Kernel/timers.c ****         }
 933:FreeRTOS-Kernel/timers.c **** 
 934:FreeRTOS-Kernel/timers.c ****         return xProcessTimerNow;
 935:FreeRTOS-Kernel/timers.c ****     }
 118              		.loc 1 935 5 view .LVU27
 119 0014 08BD     		pop	{r3, pc}
 120              	.LVL9:
 121              	.L15:
 916:FreeRTOS-Kernel/timers.c ****             }
 122              		.loc 1 916 17 is_stmt 1 view .LVU28
 123 0016 011D     		adds	r1, r0, #4
 124              	.LVL10:
 916:FreeRTOS-Kernel/timers.c ****             }
 125              		.loc 1 916 17 is_stmt 0 view .LVU29
 126 0018 094B     		ldr	r3, .L16
 127 001a 1868     		ldr	r0, [r3]
 128              	.LVL11:
 916:FreeRTOS-Kernel/timers.c ****             }
 129              		.loc 1 916 17 view .LVU30
 130 001c FFF7FEFF 		bl	vListInsert
 131              	.LVL12:
 899:FreeRTOS-Kernel/timers.c **** 
 132              		.loc 1 899 20 view .LVU31
 133 0020 0020     		movs	r0, #0
 134 0022 F7E7     		b	.L8
 135              	.LVL13:
 136              	.L9:
 921:FreeRTOS-Kernel/timers.c ****             {
 137              		.loc 1 921 13 is_stmt 1 view .LVU32
 921:FreeRTOS-Kernel/timers.c ****             {
 138              		.loc 1 921 15 is_stmt 0 view .LVU33
 139 0024 9A42     		cmp	r2, r3
 140 0026 01D2     		bcs	.L11
 921:FreeRTOS-Kernel/timers.c ****             {
 141              		.loc 1 921 45 discriminator 1 view .LVU34
 142 0028 9942     		cmp	r1, r3
 143 002a 06D2     		bcs	.L13
ARM GAS  /tmp/ccbspmyw.s 			page 20


 144              	.L11:
 930:FreeRTOS-Kernel/timers.c ****             }
 145              		.loc 1 930 17 is_stmt 1 view .LVU35
 146 002c 011D     		adds	r1, r0, #4
 147              	.LVL14:
 930:FreeRTOS-Kernel/timers.c ****             }
 148              		.loc 1 930 17 is_stmt 0 view .LVU36
 149 002e 054B     		ldr	r3, .L16+4
 150              	.LVL15:
 930:FreeRTOS-Kernel/timers.c ****             }
 151              		.loc 1 930 17 view .LVU37
 152 0030 1868     		ldr	r0, [r3]
 153              	.LVL16:
 930:FreeRTOS-Kernel/timers.c ****             }
 154              		.loc 1 930 17 view .LVU38
 155 0032 FFF7FEFF 		bl	vListInsert
 156              	.LVL17:
 899:FreeRTOS-Kernel/timers.c **** 
 157              		.loc 1 899 20 view .LVU39
 158 0036 0020     		movs	r0, #0
 159 0038 ECE7     		b	.L8
 160              	.LVL18:
 161              	.L13:
 926:FreeRTOS-Kernel/timers.c ****             }
 162              		.loc 1 926 34 view .LVU40
 163 003a 0120     		movs	r0, #1
 164              	.LVL19:
 934:FreeRTOS-Kernel/timers.c ****     }
 165              		.loc 1 934 9 is_stmt 1 view .LVU41
 934:FreeRTOS-Kernel/timers.c ****     }
 166              		.loc 1 934 16 is_stmt 0 view .LVU42
 167 003c EAE7     		b	.L8
 168              	.L17:
 169 003e 00BF     		.align	2
 170              	.L16:
 171 0040 00000000 		.word	pxOverflowTimerList
 172 0044 00000000 		.word	pxCurrentTimerList
 173              		.cfi_endproc
 174              	.LFE24:
 176              		.section	.text.prvReloadTimer,"ax",%progbits
 177              		.align	1
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 182              	prvReloadTimer:
 183              	.LVL20:
 184              	.LFB18:
 702:FreeRTOS-Kernel/timers.c ****         /* Insert the timer into the appropriate list for the next expiry time.
 185              		.loc 1 702 5 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 702:FreeRTOS-Kernel/timers.c ****         /* Insert the timer into the appropriate list for the next expiry time.
 189              		.loc 1 702 5 is_stmt 0 view .LVU44
 190 0000 70B5     		push	{r4, r5, r6, lr}
 191              	.LCFI1:
 192              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccbspmyw.s 			page 21


 193              		.cfi_offset 4, -16
 194              		.cfi_offset 5, -12
 195              		.cfi_offset 6, -8
 196              		.cfi_offset 14, -4
 197 0002 0446     		mov	r4, r0
 198 0004 0D46     		mov	r5, r1
 199 0006 1646     		mov	r6, r2
 706:FreeRTOS-Kernel/timers.c ****         {
 200              		.loc 1 706 9 is_stmt 1 view .LVU45
 706:FreeRTOS-Kernel/timers.c ****         {
 201              		.loc 1 706 14 is_stmt 0 view .LVU46
 202 0008 04E0     		b	.L19
 203              	.LVL21:
 204              	.L20:
 709:FreeRTOS-Kernel/timers.c **** 
 205              		.loc 1 709 13 is_stmt 1 view .LVU47
 709:FreeRTOS-Kernel/timers.c **** 
 206              		.loc 1 709 36 is_stmt 0 view .LVU48
 207 000a A369     		ldr	r3, [r4, #24]
 709:FreeRTOS-Kernel/timers.c **** 
 208              		.loc 1 709 26 view .LVU49
 209 000c 1D44     		add	r5, r5, r3
 210              	.LVL22:
 712:FreeRTOS-Kernel/timers.c ****             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 211              		.loc 1 712 42 is_stmt 1 view .LVU50
 713:FreeRTOS-Kernel/timers.c ****         }
 212              		.loc 1 713 13 view .LVU51
 713:FreeRTOS-Kernel/timers.c ****         }
 213              		.loc 1 713 20 is_stmt 0 view .LVU52
 214 000e 236A     		ldr	r3, [r4, #32]
 713:FreeRTOS-Kernel/timers.c ****         }
 215              		.loc 1 713 13 view .LVU53
 216 0010 2046     		mov	r0, r4
 217 0012 9847     		blx	r3
 218              	.LVL23:
 219              	.L19:
 706:FreeRTOS-Kernel/timers.c ****         {
 220              		.loc 1 706 127 is_stmt 1 view .LVU54
 706:FreeRTOS-Kernel/timers.c ****         {
 221              		.loc 1 706 77 is_stmt 0 view .LVU55
 222 0014 A169     		ldr	r1, [r4, #24]
 706:FreeRTOS-Kernel/timers.c ****         {
 223              		.loc 1 706 16 view .LVU56
 224 0016 2B46     		mov	r3, r5
 225 0018 3246     		mov	r2, r6
 226 001a 2944     		add	r1, r1, r5
 227 001c 2046     		mov	r0, r4
 228 001e FFF7FEFF 		bl	prvInsertTimerInActiveList
 229              	.LVL24:
 706:FreeRTOS-Kernel/timers.c ****         {
 230              		.loc 1 706 127 view .LVU57
 231 0022 0028     		cmp	r0, #0
 232 0024 F1D1     		bne	.L20
 715:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 233              		.loc 1 715 5 view .LVU58
 234 0026 70BD     		pop	{r4, r5, r6, pc}
 715:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccbspmyw.s 			page 22


 235              		.loc 1 715 5 view .LVU59
 236              		.cfi_endproc
 237              	.LFE18:
 239              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 240              		.align	1
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 245              	prvProcessExpiredTimer:
 246              	.LVL25:
 247              	.LFB19:
 720:FreeRTOS-Kernel/timers.c ****         /* MISRA Ref 11.5.3 [Void pointer assignment] */
 248              		.loc 1 720 5 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 720:FreeRTOS-Kernel/timers.c ****         /* MISRA Ref 11.5.3 [Void pointer assignment] */
 252              		.loc 1 720 5 is_stmt 0 view .LVU61
 253 0000 70B5     		push	{r4, r5, r6, lr}
 254              	.LCFI2:
 255              		.cfi_def_cfa_offset 16
 256              		.cfi_offset 4, -16
 257              		.cfi_offset 5, -12
 258              		.cfi_offset 6, -8
 259              		.cfi_offset 14, -4
 260 0002 0546     		mov	r5, r0
 261 0004 0E46     		mov	r6, r1
 724:FreeRTOS-Kernel/timers.c **** 
 262              		.loc 1 724 9 is_stmt 1 view .LVU62
 724:FreeRTOS-Kernel/timers.c **** 
 263              		.loc 1 724 49 is_stmt 0 view .LVU63
 264 0006 0D4B     		ldr	r3, .L27
 265 0008 1B68     		ldr	r3, [r3]
 266 000a DB68     		ldr	r3, [r3, #12]
 724:FreeRTOS-Kernel/timers.c **** 
 267              		.loc 1 724 25 view .LVU64
 268 000c DC68     		ldr	r4, [r3, #12]
 269              	.LVL26:
 729:FreeRTOS-Kernel/timers.c **** 
 270              		.loc 1 729 9 is_stmt 1 view .LVU65
 729:FreeRTOS-Kernel/timers.c **** 
 271              		.loc 1 729 18 is_stmt 0 view .LVU66
 272 000e 201D     		adds	r0, r4, #4
 273              	.LVL27:
 729:FreeRTOS-Kernel/timers.c **** 
 274              		.loc 1 729 18 view .LVU67
 275 0010 FFF7FEFF 		bl	uxListRemove
 276              	.LVL28:
 733:FreeRTOS-Kernel/timers.c ****         {
 277              		.loc 1 733 9 is_stmt 1 view .LVU68
 733:FreeRTOS-Kernel/timers.c ****         {
 278              		.loc 1 733 22 is_stmt 0 view .LVU69
 279 0014 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 733:FreeRTOS-Kernel/timers.c ****         {
 280              		.loc 1 733 11 view .LVU70
 281 0018 13F0040F 		tst	r3, #4
 282 001c 07D1     		bne	.L26
ARM GAS  /tmp/ccbspmyw.s 			page 23


 739:FreeRTOS-Kernel/timers.c ****         }
 283              		.loc 1 739 13 is_stmt 1 view .LVU71
 739:FreeRTOS-Kernel/timers.c ****         }
 284              		.loc 1 739 31 is_stmt 0 view .LVU72
 285 001e 23F00103 		bic	r3, r3, #1
 286 0022 84F82430 		strb	r3, [r4, #36]
 287              	.L24:
 743:FreeRTOS-Kernel/timers.c ****         pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 288              		.loc 1 743 38 is_stmt 1 view .LVU73
 744:FreeRTOS-Kernel/timers.c ****     }
 289              		.loc 1 744 9 view .LVU74
 744:FreeRTOS-Kernel/timers.c ****     }
 290              		.loc 1 744 16 is_stmt 0 view .LVU75
 291 0026 236A     		ldr	r3, [r4, #32]
 744:FreeRTOS-Kernel/timers.c ****     }
 292              		.loc 1 744 9 view .LVU76
 293 0028 2046     		mov	r0, r4
 294 002a 9847     		blx	r3
 295              	.LVL29:
 745:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 296              		.loc 1 745 5 view .LVU77
 297 002c 70BD     		pop	{r4, r5, r6, pc}
 298              	.LVL30:
 299              	.L26:
 735:FreeRTOS-Kernel/timers.c ****         }
 300              		.loc 1 735 13 is_stmt 1 view .LVU78
 301 002e 3246     		mov	r2, r6
 302 0030 2946     		mov	r1, r5
 303 0032 2046     		mov	r0, r4
 304 0034 FFF7FEFF 		bl	prvReloadTimer
 305              	.LVL31:
 306 0038 F5E7     		b	.L24
 307              	.L28:
 308 003a 00BF     		.align	2
 309              	.L27:
 310 003c 00000000 		.word	pxCurrentTimerList
 311              		.cfi_endproc
 312              	.LFE19:
 314              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 315              		.align	1
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 320              	prvSwitchTimerLists:
 321              	.LFB26:
 936:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 937:FreeRTOS-Kernel/timers.c **** 
 938:FreeRTOS-Kernel/timers.c ****     static void prvProcessReceivedCommands( void )
 939:FreeRTOS-Kernel/timers.c ****     {
 940:FreeRTOS-Kernel/timers.c ****         DaemonTaskMessage_t xMessage = { 0 };
 941:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer;
 942:FreeRTOS-Kernel/timers.c ****         BaseType_t xTimerListsWereSwitched;
 943:FreeRTOS-Kernel/timers.c ****         TickType_t xTimeNow;
 944:FreeRTOS-Kernel/timers.c **** 
 945:FreeRTOS-Kernel/timers.c ****         while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
 946:FreeRTOS-Kernel/timers.c ****         {
 947:FreeRTOS-Kernel/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
ARM GAS  /tmp/ccbspmyw.s 			page 24


 948:FreeRTOS-Kernel/timers.c ****             {
 949:FreeRTOS-Kernel/timers.c ****                 /* Negative commands are pended function calls rather than timer
 950:FreeRTOS-Kernel/timers.c ****                  * commands. */
 951:FreeRTOS-Kernel/timers.c ****                 if( xMessage.xMessageID < ( BaseType_t ) 0 )
 952:FreeRTOS-Kernel/timers.c ****                 {
 953:FreeRTOS-Kernel/timers.c ****                     const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParamete
 954:FreeRTOS-Kernel/timers.c **** 
 955:FreeRTOS-Kernel/timers.c ****                     /* The timer uses the xCallbackParameters member to request a
 956:FreeRTOS-Kernel/timers.c ****                      * callback be executed.  Check the callback is not NULL. */
 957:FreeRTOS-Kernel/timers.c ****                     configASSERT( pxCallback );
 958:FreeRTOS-Kernel/timers.c **** 
 959:FreeRTOS-Kernel/timers.c ****                     /* Call the function. */
 960:FreeRTOS-Kernel/timers.c ****                     pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParamet
 961:FreeRTOS-Kernel/timers.c ****                 }
 962:FreeRTOS-Kernel/timers.c ****                 else
 963:FreeRTOS-Kernel/timers.c ****                 {
 964:FreeRTOS-Kernel/timers.c ****                     mtCOVERAGE_TEST_MARKER();
 965:FreeRTOS-Kernel/timers.c ****                 }
 966:FreeRTOS-Kernel/timers.c ****             }
 967:FreeRTOS-Kernel/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 968:FreeRTOS-Kernel/timers.c **** 
 969:FreeRTOS-Kernel/timers.c ****             /* Commands that are positive are timer commands rather than pended
 970:FreeRTOS-Kernel/timers.c ****              * function calls. */
 971:FreeRTOS-Kernel/timers.c ****             if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 972:FreeRTOS-Kernel/timers.c ****             {
 973:FreeRTOS-Kernel/timers.c ****                 /* The messages uses the xTimerParameters member to work on a
 974:FreeRTOS-Kernel/timers.c ****                  * software timer. */
 975:FreeRTOS-Kernel/timers.c ****                 pxTimer = xMessage.u.xTimerParameters.pxTimer;
 976:FreeRTOS-Kernel/timers.c **** 
 977:FreeRTOS-Kernel/timers.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
 978:FreeRTOS-Kernel/timers.c ****                 {
 979:FreeRTOS-Kernel/timers.c ****                     /* The timer is in a list, remove it. */
 980:FreeRTOS-Kernel/timers.c ****                     ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 981:FreeRTOS-Kernel/timers.c ****                 }
 982:FreeRTOS-Kernel/timers.c ****                 else
 983:FreeRTOS-Kernel/timers.c ****                 {
 984:FreeRTOS-Kernel/timers.c ****                     mtCOVERAGE_TEST_MARKER();
 985:FreeRTOS-Kernel/timers.c ****                 }
 986:FreeRTOS-Kernel/timers.c **** 
 987:FreeRTOS-Kernel/timers.c ****                 traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParamet
 988:FreeRTOS-Kernel/timers.c **** 
 989:FreeRTOS-Kernel/timers.c ****                 /* In this case the xTimerListsWereSwitched parameter is not used, but
 990:FreeRTOS-Kernel/timers.c ****                  *  it must be present in the function call.  prvSampleTimeNow() must be
 991:FreeRTOS-Kernel/timers.c ****                  *  called after the message is received from xTimerQueue so there is no
 992:FreeRTOS-Kernel/timers.c ****                  *  possibility of a higher priority task adding a message to the message
 993:FreeRTOS-Kernel/timers.c ****                  *  queue with a time that is ahead of the timer daemon task (because it
 994:FreeRTOS-Kernel/timers.c ****                  *  pre-empted the timer daemon task after the xTimeNow value was set). */
 995:FreeRTOS-Kernel/timers.c ****                 xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 996:FreeRTOS-Kernel/timers.c **** 
 997:FreeRTOS-Kernel/timers.c ****                 switch( xMessage.xMessageID )
 998:FreeRTOS-Kernel/timers.c ****                 {
 999:FreeRTOS-Kernel/timers.c ****                     case tmrCOMMAND_START:
1000:FreeRTOS-Kernel/timers.c ****                     case tmrCOMMAND_START_FROM_ISR:
1001:FreeRTOS-Kernel/timers.c ****                     case tmrCOMMAND_RESET:
1002:FreeRTOS-Kernel/timers.c ****                     case tmrCOMMAND_RESET_FROM_ISR:
1003:FreeRTOS-Kernel/timers.c ****                         /* Start or restart a timer. */
1004:FreeRTOS-Kernel/timers.c ****                         pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
ARM GAS  /tmp/ccbspmyw.s 			page 25


1005:FreeRTOS-Kernel/timers.c **** 
1006:FreeRTOS-Kernel/timers.c ****                         if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessa
1007:FreeRTOS-Kernel/timers.c ****                         {
1008:FreeRTOS-Kernel/timers.c ****                             /* The timer expired before it was added to the active
1009:FreeRTOS-Kernel/timers.c ****                              * timer list.  Process it now. */
1010:FreeRTOS-Kernel/timers.c ****                             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
1011:FreeRTOS-Kernel/timers.c ****                             {
1012:FreeRTOS-Kernel/timers.c ****                                 prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue 
1013:FreeRTOS-Kernel/timers.c ****                             }
1014:FreeRTOS-Kernel/timers.c ****                             else
1015:FreeRTOS-Kernel/timers.c ****                             {
1016:FreeRTOS-Kernel/timers.c ****                                 pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
1017:FreeRTOS-Kernel/timers.c ****                             }
1018:FreeRTOS-Kernel/timers.c **** 
1019:FreeRTOS-Kernel/timers.c ****                             /* Call the timer callback. */
1020:FreeRTOS-Kernel/timers.c ****                             traceTIMER_EXPIRED( pxTimer );
1021:FreeRTOS-Kernel/timers.c ****                             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
1022:FreeRTOS-Kernel/timers.c ****                         }
1023:FreeRTOS-Kernel/timers.c ****                         else
1024:FreeRTOS-Kernel/timers.c ****                         {
1025:FreeRTOS-Kernel/timers.c ****                             mtCOVERAGE_TEST_MARKER();
1026:FreeRTOS-Kernel/timers.c ****                         }
1027:FreeRTOS-Kernel/timers.c **** 
1028:FreeRTOS-Kernel/timers.c ****                         break;
1029:FreeRTOS-Kernel/timers.c **** 
1030:FreeRTOS-Kernel/timers.c ****                     case tmrCOMMAND_STOP:
1031:FreeRTOS-Kernel/timers.c ****                     case tmrCOMMAND_STOP_FROM_ISR:
1032:FreeRTOS-Kernel/timers.c ****                         /* The timer has already been removed from the active list. */
1033:FreeRTOS-Kernel/timers.c ****                         pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
1034:FreeRTOS-Kernel/timers.c ****                         break;
1035:FreeRTOS-Kernel/timers.c **** 
1036:FreeRTOS-Kernel/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD:
1037:FreeRTOS-Kernel/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR:
1038:FreeRTOS-Kernel/timers.c ****                         pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
1039:FreeRTOS-Kernel/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
1040:FreeRTOS-Kernel/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
1041:FreeRTOS-Kernel/timers.c **** 
1042:FreeRTOS-Kernel/timers.c ****                         /* The new period does not really have a reference, and can
1043:FreeRTOS-Kernel/timers.c ****                          * be longer or shorter than the old one.  The command time is
1044:FreeRTOS-Kernel/timers.c ****                          * therefore set to the current time, and as the period cannot
1045:FreeRTOS-Kernel/timers.c ****                          * be zero the next expiry time can only be in the future,
1046:FreeRTOS-Kernel/timers.c ****                          * meaning (unlike for the xTimerStart() case above) there is
1047:FreeRTOS-Kernel/timers.c ****                          * no fail case that needs to be handled here. */
1048:FreeRTOS-Kernel/timers.c ****                         ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerP
1049:FreeRTOS-Kernel/timers.c ****                         break;
1050:FreeRTOS-Kernel/timers.c **** 
1051:FreeRTOS-Kernel/timers.c ****                     case tmrCOMMAND_DELETE:
1052:FreeRTOS-Kernel/timers.c ****                         #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
1053:FreeRTOS-Kernel/timers.c ****                         {
1054:FreeRTOS-Kernel/timers.c ****                             /* The timer has already been removed from the active list,
1055:FreeRTOS-Kernel/timers.c ****                              * just free up the memory if the memory was dynamically
1056:FreeRTOS-Kernel/timers.c ****                              * allocated. */
1057:FreeRTOS-Kernel/timers.c ****                             if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint
1058:FreeRTOS-Kernel/timers.c ****                             {
1059:FreeRTOS-Kernel/timers.c ****                                 vPortFree( pxTimer );
1060:FreeRTOS-Kernel/timers.c ****                             }
1061:FreeRTOS-Kernel/timers.c ****                             else
ARM GAS  /tmp/ccbspmyw.s 			page 26


1062:FreeRTOS-Kernel/timers.c ****                             {
1063:FreeRTOS-Kernel/timers.c ****                                 pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
1064:FreeRTOS-Kernel/timers.c ****                             }
1065:FreeRTOS-Kernel/timers.c ****                         }
1066:FreeRTOS-Kernel/timers.c ****                         #else /* if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) */
1067:FreeRTOS-Kernel/timers.c ****                         {
1068:FreeRTOS-Kernel/timers.c ****                             /* If dynamic allocation is not enabled, the memory
1069:FreeRTOS-Kernel/timers.c ****                              * could not have been dynamically allocated. So there is
1070:FreeRTOS-Kernel/timers.c ****                              * no need to free the memory - just mark the timer as
1071:FreeRTOS-Kernel/timers.c ****                              * "not active". */
1072:FreeRTOS-Kernel/timers.c ****                             pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
1073:FreeRTOS-Kernel/timers.c ****                         }
1074:FreeRTOS-Kernel/timers.c ****                         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1075:FreeRTOS-Kernel/timers.c ****                         break;
1076:FreeRTOS-Kernel/timers.c **** 
1077:FreeRTOS-Kernel/timers.c ****                     default:
1078:FreeRTOS-Kernel/timers.c ****                         /* Don't expect to get here. */
1079:FreeRTOS-Kernel/timers.c ****                         break;
1080:FreeRTOS-Kernel/timers.c ****                 }
1081:FreeRTOS-Kernel/timers.c ****             }
1082:FreeRTOS-Kernel/timers.c ****         }
1083:FreeRTOS-Kernel/timers.c ****     }
1084:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
1085:FreeRTOS-Kernel/timers.c **** 
1086:FreeRTOS-Kernel/timers.c ****     static void prvSwitchTimerLists( void )
1087:FreeRTOS-Kernel/timers.c ****     {
 322              		.loc 1 1087 5 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 08B5     		push	{r3, lr}
 327              	.LCFI3:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 3, -8
 330              		.cfi_offset 14, -4
1088:FreeRTOS-Kernel/timers.c ****         TickType_t xNextExpireTime;
 331              		.loc 1 1088 9 view .LVU80
1089:FreeRTOS-Kernel/timers.c ****         List_t * pxTemp;
 332              		.loc 1 1089 9 view .LVU81
1090:FreeRTOS-Kernel/timers.c **** 
1091:FreeRTOS-Kernel/timers.c ****         /* The tick count has overflowed.  The timer lists must be switched.
1092:FreeRTOS-Kernel/timers.c ****          * If there are any timers still referenced from the current timer list
1093:FreeRTOS-Kernel/timers.c ****          * then they must have expired and should be processed before the lists
1094:FreeRTOS-Kernel/timers.c ****          * are switched. */
1095:FreeRTOS-Kernel/timers.c ****         while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 333              		.loc 1 1095 9 view .LVU82
 334              		.loc 1 1095 14 is_stmt 0 view .LVU83
 335 0002 05E0     		b	.L30
 336              	.L31:
1096:FreeRTOS-Kernel/timers.c ****         {
1097:FreeRTOS-Kernel/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 337              		.loc 1 1097 13 is_stmt 1 view .LVU84
 338              		.loc 1 1097 31 is_stmt 0 view .LVU85
 339 0004 DB68     		ldr	r3, [r3, #12]
 340              	.LVL32:
1098:FreeRTOS-Kernel/timers.c **** 
1099:FreeRTOS-Kernel/timers.c ****             /* Process the expired timer.  For auto-reload timers, be careful to
ARM GAS  /tmp/ccbspmyw.s 			page 27


1100:FreeRTOS-Kernel/timers.c ****              * process only expirations that occur on the current list.  Further
1101:FreeRTOS-Kernel/timers.c ****              * expirations must wait until after the lists are switched. */
1102:FreeRTOS-Kernel/timers.c ****             prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
 341              		.loc 1 1102 13 is_stmt 1 view .LVU86
 342 0006 4FF0FF31 		mov	r1, #-1
 343 000a 1868     		ldr	r0, [r3]
 344 000c FFF7FEFF 		bl	prvProcessExpiredTimer
 345              	.LVL33:
 346              	.L30:
1095:FreeRTOS-Kernel/timers.c ****         {
 347              		.loc 1 1095 56 view .LVU87
1095:FreeRTOS-Kernel/timers.c ****         {
 348              		.loc 1 1095 16 is_stmt 0 view .LVU88
 349 0010 054B     		ldr	r3, .L33
 350 0012 1B68     		ldr	r3, [r3]
 351 0014 1A68     		ldr	r2, [r3]
1095:FreeRTOS-Kernel/timers.c ****         {
 352              		.loc 1 1095 56 view .LVU89
 353 0016 002A     		cmp	r2, #0
 354 0018 F4D1     		bne	.L31
1103:FreeRTOS-Kernel/timers.c ****         }
1104:FreeRTOS-Kernel/timers.c **** 
1105:FreeRTOS-Kernel/timers.c ****         pxTemp = pxCurrentTimerList;
 355              		.loc 1 1105 9 is_stmt 1 view .LVU90
 356              	.LVL34:
1106:FreeRTOS-Kernel/timers.c ****         pxCurrentTimerList = pxOverflowTimerList;
 357              		.loc 1 1106 9 view .LVU91
 358              		.loc 1 1106 28 is_stmt 0 view .LVU92
 359 001a 044A     		ldr	r2, .L33+4
 360 001c 1068     		ldr	r0, [r2]
 361 001e 0249     		ldr	r1, .L33
 362 0020 0860     		str	r0, [r1]
1107:FreeRTOS-Kernel/timers.c ****         pxOverflowTimerList = pxTemp;
 363              		.loc 1 1107 9 is_stmt 1 view .LVU93
 364              		.loc 1 1107 29 is_stmt 0 view .LVU94
 365 0022 1360     		str	r3, [r2]
1108:FreeRTOS-Kernel/timers.c ****     }
 366              		.loc 1 1108 5 view .LVU95
 367 0024 08BD     		pop	{r3, pc}
 368              	.LVL35:
 369              	.L34:
 370              		.loc 1 1108 5 view .LVU96
 371 0026 00BF     		.align	2
 372              	.L33:
 373 0028 00000000 		.word	pxCurrentTimerList
 374 002c 00000000 		.word	pxOverflowTimerList
 375              		.cfi_endproc
 376              	.LFE26:
 378              		.section	.text.prvSampleTimeNow,"ax",%progbits
 379              		.align	1
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 384              	prvSampleTimeNow:
 385              	.LVL36:
 386              	.LFB23:
 872:FreeRTOS-Kernel/timers.c ****         TickType_t xTimeNow;
ARM GAS  /tmp/ccbspmyw.s 			page 28


 387              		.loc 1 872 5 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 872:FreeRTOS-Kernel/timers.c ****         TickType_t xTimeNow;
 391              		.loc 1 872 5 is_stmt 0 view .LVU98
 392 0000 38B5     		push	{r3, r4, r5, lr}
 393              	.LCFI4:
 394              		.cfi_def_cfa_offset 16
 395              		.cfi_offset 3, -16
 396              		.cfi_offset 4, -12
 397              		.cfi_offset 5, -8
 398              		.cfi_offset 14, -4
 399 0002 0546     		mov	r5, r0
 873:FreeRTOS-Kernel/timers.c ****         PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U;
 400              		.loc 1 873 9 is_stmt 1 view .LVU99
 874:FreeRTOS-Kernel/timers.c **** 
 401              		.loc 1 874 25 view .LVU100
 876:FreeRTOS-Kernel/timers.c **** 
 402              		.loc 1 876 9 view .LVU101
 876:FreeRTOS-Kernel/timers.c **** 
 403              		.loc 1 876 20 is_stmt 0 view .LVU102
 404 0004 FFF7FEFF 		bl	xTaskGetTickCount
 405              	.LVL37:
 876:FreeRTOS-Kernel/timers.c **** 
 406              		.loc 1 876 20 view .LVU103
 407 0008 0446     		mov	r4, r0
 408              	.LVL38:
 878:FreeRTOS-Kernel/timers.c ****         {
 409              		.loc 1 878 9 is_stmt 1 view .LVU104
 878:FreeRTOS-Kernel/timers.c ****         {
 410              		.loc 1 878 22 is_stmt 0 view .LVU105
 411 000a 074B     		ldr	r3, .L40
 412 000c 1B68     		ldr	r3, [r3]
 878:FreeRTOS-Kernel/timers.c ****         {
 413              		.loc 1 878 11 view .LVU106
 414 000e 8342     		cmp	r3, r0
 415 0010 05D8     		bhi	.L39
 885:FreeRTOS-Kernel/timers.c ****         }
 416              		.loc 1 885 13 is_stmt 1 view .LVU107
 885:FreeRTOS-Kernel/timers.c ****         }
 417              		.loc 1 885 39 is_stmt 0 view .LVU108
 418 0012 0023     		movs	r3, #0
 419 0014 2B60     		str	r3, [r5]
 420              	.LVL39:
 421              	.L37:
 888:FreeRTOS-Kernel/timers.c **** 
 422              		.loc 1 888 9 is_stmt 1 view .LVU109
 888:FreeRTOS-Kernel/timers.c **** 
 423              		.loc 1 888 19 is_stmt 0 view .LVU110
 424 0016 044B     		ldr	r3, .L40
 425 0018 1C60     		str	r4, [r3]
 890:FreeRTOS-Kernel/timers.c ****     }
 426              		.loc 1 890 9 is_stmt 1 view .LVU111
 891:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 427              		.loc 1 891 5 is_stmt 0 view .LVU112
 428 001a 2046     		mov	r0, r4
ARM GAS  /tmp/ccbspmyw.s 			page 29


 429 001c 38BD     		pop	{r3, r4, r5, pc}
 430              	.LVL40:
 431              	.L39:
 880:FreeRTOS-Kernel/timers.c ****             *pxTimerListsWereSwitched = pdTRUE;
 432              		.loc 1 880 13 is_stmt 1 view .LVU113
 433 001e FFF7FEFF 		bl	prvSwitchTimerLists
 434              	.LVL41:
 881:FreeRTOS-Kernel/timers.c ****         }
 435              		.loc 1 881 13 view .LVU114
 881:FreeRTOS-Kernel/timers.c ****         }
 436              		.loc 1 881 39 is_stmt 0 view .LVU115
 437 0022 0123     		movs	r3, #1
 438 0024 2B60     		str	r3, [r5]
 439 0026 F6E7     		b	.L37
 440              	.L41:
 441              		.align	2
 442              	.L40:
 443 0028 00000000 		.word	xLastTime.2
 444              		.cfi_endproc
 445              	.LFE23:
 447              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 448              		.align	1
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 453              	prvProcessTimerOrBlockTask:
 454              	.LVL42:
 455              	.LFB21:
 784:FreeRTOS-Kernel/timers.c ****         TickType_t xTimeNow;
 456              		.loc 1 784 5 is_stmt 1 view -0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 8
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 784:FreeRTOS-Kernel/timers.c ****         TickType_t xTimeNow;
 460              		.loc 1 784 5 is_stmt 0 view .LVU117
 461 0000 70B5     		push	{r4, r5, r6, lr}
 462              	.LCFI5:
 463              		.cfi_def_cfa_offset 16
 464              		.cfi_offset 4, -16
 465              		.cfi_offset 5, -12
 466              		.cfi_offset 6, -8
 467              		.cfi_offset 14, -4
 468 0002 82B0     		sub	sp, sp, #8
 469              	.LCFI6:
 470              		.cfi_def_cfa_offset 24
 471 0004 0646     		mov	r6, r0
 472 0006 0C46     		mov	r4, r1
 785:FreeRTOS-Kernel/timers.c ****         BaseType_t xTimerListsWereSwitched;
 473              		.loc 1 785 9 is_stmt 1 view .LVU118
 786:FreeRTOS-Kernel/timers.c **** 
 474              		.loc 1 786 9 view .LVU119
 788:FreeRTOS-Kernel/timers.c ****         {
 475              		.loc 1 788 9 view .LVU120
 476 0008 FFF7FEFF 		bl	vTaskSuspendAll
 477              	.LVL43:
 795:FreeRTOS-Kernel/timers.c **** 
 478              		.loc 1 795 13 view .LVU121
ARM GAS  /tmp/ccbspmyw.s 			page 30


 795:FreeRTOS-Kernel/timers.c **** 
 479              		.loc 1 795 24 is_stmt 0 view .LVU122
 480 000c 01A8     		add	r0, sp, #4
 481 000e FFF7FEFF 		bl	prvSampleTimeNow
 482              	.LVL44:
 797:FreeRTOS-Kernel/timers.c ****             {
 483              		.loc 1 797 13 is_stmt 1 view .LVU123
 797:FreeRTOS-Kernel/timers.c ****             {
 484              		.loc 1 797 41 is_stmt 0 view .LVU124
 485 0012 019B     		ldr	r3, [sp, #4]
 797:FreeRTOS-Kernel/timers.c ****             {
 486              		.loc 1 797 15 view .LVU125
 487 0014 33BB     		cbnz	r3, .L43
 488 0016 0546     		mov	r5, r0
 800:FreeRTOS-Kernel/timers.c ****                 {
 489              		.loc 1 800 17 is_stmt 1 view .LVU126
 800:FreeRTOS-Kernel/timers.c ****                 {
 490              		.loc 1 800 19 is_stmt 0 view .LVU127
 491 0018 E4B9     		cbnz	r4, .L44
 800:FreeRTOS-Kernel/timers.c ****                 {
 492              		.loc 1 800 50 discriminator 1 view .LVU128
 493 001a B042     		cmp	r0, r6
 494 001c 13D2     		bcs	.L49
 495              	.LVL45:
 496              	.L45:
 820:FreeRTOS-Kernel/timers.c **** 
 497              		.loc 1 820 21 is_stmt 1 view .LVU129
 498 001e 2246     		mov	r2, r4
 499 0020 711B     		subs	r1, r6, r5
 500 0022 124B     		ldr	r3, .L50
 501 0024 1868     		ldr	r0, [r3]
 502              	.LVL46:
 820:FreeRTOS-Kernel/timers.c **** 
 503              		.loc 1 820 21 is_stmt 0 view .LVU130
 504 0026 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 505              	.LVL47:
 822:FreeRTOS-Kernel/timers.c ****                     {
 506              		.loc 1 822 21 is_stmt 1 view .LVU131
 822:FreeRTOS-Kernel/timers.c ****                     {
 507              		.loc 1 822 25 is_stmt 0 view .LVU132
 508 002a FFF7FEFF 		bl	xTaskResumeAll
 509              	.LVL48:
 822:FreeRTOS-Kernel/timers.c ****                     {
 510              		.loc 1 822 23 view .LVU133
 511 002e D8B9     		cbnz	r0, .L42
 828:FreeRTOS-Kernel/timers.c ****                     }
 512              		.loc 1 828 25 is_stmt 1 view .LVU134
 513 0030 4FF0E023 		mov	r3, #-536813568
 514 0034 4FF08052 		mov	r2, #268435456
 515 0038 C3F8042D 		str	r2, [r3, #3332]
 828:FreeRTOS-Kernel/timers.c ****                     }
 516              		.loc 1 828 25 view .LVU135
 517              		.syntax unified
 518              	@ 828 "FreeRTOS-Kernel/timers.c" 1
 519 003c BFF34F8F 		dsb
 520              	@ 0 "" 2
 828:FreeRTOS-Kernel/timers.c ****                     }
ARM GAS  /tmp/ccbspmyw.s 			page 31


 521              		.loc 1 828 25 view .LVU136
 522              	@ 828 "FreeRTOS-Kernel/timers.c" 1
 523 0040 BFF36F8F 		isb
 524              	@ 0 "" 2
 828:FreeRTOS-Kernel/timers.c ****                     }
 525              		.loc 1 828 47 view .LVU137
 526              		.thumb
 527              		.syntax unified
 528 0044 10E0     		b	.L42
 529              	.LVL49:
 530              	.L49:
 802:FreeRTOS-Kernel/timers.c ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 531              		.loc 1 802 21 view .LVU138
 802:FreeRTOS-Kernel/timers.c ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 532              		.loc 1 802 30 is_stmt 0 view .LVU139
 533 0046 FFF7FEFF 		bl	xTaskResumeAll
 534              	.LVL50:
 803:FreeRTOS-Kernel/timers.c ****                 }
 535              		.loc 1 803 21 is_stmt 1 view .LVU140
 536 004a 2946     		mov	r1, r5
 537 004c 3046     		mov	r0, r6
 538 004e FFF7FEFF 		bl	prvProcessExpiredTimer
 539              	.LVL51:
 540 0052 09E0     		b	.L42
 541              	.LVL52:
 542              	.L44:
 817:FreeRTOS-Kernel/timers.c ****                     }
 543              		.loc 1 817 25 view .LVU141
 817:FreeRTOS-Kernel/timers.c ****                     }
 544              		.loc 1 817 41 is_stmt 0 view .LVU142
 545 0054 064A     		ldr	r2, .L50+4
 546 0056 1268     		ldr	r2, [r2]
 547 0058 1268     		ldr	r2, [r2]
 548 005a 0AB9     		cbnz	r2, .L47
 549 005c 0124     		movs	r4, #1
 550              	.LVL53:
 817:FreeRTOS-Kernel/timers.c ****                     }
 551              		.loc 1 817 41 view .LVU143
 552 005e DEE7     		b	.L45
 553              	.LVL54:
 554              	.L47:
 817:FreeRTOS-Kernel/timers.c ****                     }
 555              		.loc 1 817 41 view .LVU144
 556 0060 1C46     		mov	r4, r3
 557              	.LVL55:
 817:FreeRTOS-Kernel/timers.c ****                     }
 558              		.loc 1 817 41 view .LVU145
 559 0062 DCE7     		b	.L45
 560              	.LVL56:
 561              	.L43:
 838:FreeRTOS-Kernel/timers.c ****             }
 562              		.loc 1 838 17 is_stmt 1 view .LVU146
 838:FreeRTOS-Kernel/timers.c ****             }
 563              		.loc 1 838 26 is_stmt 0 view .LVU147
 564 0064 FFF7FEFF 		bl	xTaskResumeAll
 565              	.LVL57:
 566              	.L42:
ARM GAS  /tmp/ccbspmyw.s 			page 32


 841:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 567              		.loc 1 841 5 view .LVU148
 568 0068 02B0     		add	sp, sp, #8
 569              	.LCFI7:
 570              		.cfi_def_cfa_offset 16
 571              		@ sp needed
 572 006a 70BD     		pop	{r4, r5, r6, pc}
 573              	.LVL58:
 574              	.L51:
 841:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 575              		.loc 1 841 5 view .LVU149
 576              		.align	2
 577              	.L50:
 578 006c 00000000 		.word	xTimerQueue
 579 0070 00000000 		.word	pxOverflowTimerList
 580              		.cfi_endproc
 581              	.LFE21:
 583              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 584              		.align	1
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 589              	prvProcessReceivedCommands:
 590              	.LFB25:
 939:FreeRTOS-Kernel/timers.c ****         DaemonTaskMessage_t xMessage = { 0 };
 591              		.loc 1 939 5 is_stmt 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 16
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595 0000 30B5     		push	{r4, r5, lr}
 596              	.LCFI8:
 597              		.cfi_def_cfa_offset 12
 598              		.cfi_offset 4, -12
 599              		.cfi_offset 5, -8
 600              		.cfi_offset 14, -4
 601 0002 85B0     		sub	sp, sp, #20
 602              	.LCFI9:
 603              		.cfi_def_cfa_offset 32
 940:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer;
 604              		.loc 1 940 9 view .LVU151
 940:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer;
 605              		.loc 1 940 29 is_stmt 0 view .LVU152
 606 0004 0023     		movs	r3, #0
 607 0006 0193     		str	r3, [sp, #4]
 608 0008 0293     		str	r3, [sp, #8]
 609 000a 0393     		str	r3, [sp, #12]
 941:FreeRTOS-Kernel/timers.c ****         BaseType_t xTimerListsWereSwitched;
 610              		.loc 1 941 9 is_stmt 1 view .LVU153
 942:FreeRTOS-Kernel/timers.c ****         TickType_t xTimeNow;
 611              		.loc 1 942 9 view .LVU154
 943:FreeRTOS-Kernel/timers.c **** 
 612              		.loc 1 943 9 view .LVU155
 945:FreeRTOS-Kernel/timers.c ****         {
 613              		.loc 1 945 9 view .LVU156
 614              	.L54:
 945:FreeRTOS-Kernel/timers.c ****         {
 615              		.loc 1 945 69 view .LVU157
ARM GAS  /tmp/ccbspmyw.s 			page 33


 945:FreeRTOS-Kernel/timers.c ****         {
 616              		.loc 1 945 16 is_stmt 0 view .LVU158
 617 000c 0022     		movs	r2, #0
 618 000e 01A9     		add	r1, sp, #4
 619 0010 354B     		ldr	r3, .L73
 620 0012 1868     		ldr	r0, [r3]
 621 0014 FFF7FEFF 		bl	xQueueReceive
 622              	.LVL59:
 945:FreeRTOS-Kernel/timers.c ****         {
 623              		.loc 1 945 69 view .LVU159
 624 0018 0028     		cmp	r0, #0
 625 001a 62D0     		beq	.L70
 971:FreeRTOS-Kernel/timers.c ****             {
 626              		.loc 1 971 13 is_stmt 1 view .LVU160
 971:FreeRTOS-Kernel/timers.c ****             {
 627              		.loc 1 971 25 is_stmt 0 view .LVU161
 628 001c 019B     		ldr	r3, [sp, #4]
 971:FreeRTOS-Kernel/timers.c ****             {
 629              		.loc 1 971 15 view .LVU162
 630 001e 002B     		cmp	r3, #0
 631 0020 F4DB     		blt	.L54
 975:FreeRTOS-Kernel/timers.c **** 
 632              		.loc 1 975 17 is_stmt 1 view .LVU163
 975:FreeRTOS-Kernel/timers.c **** 
 633              		.loc 1 975 25 is_stmt 0 view .LVU164
 634 0022 039C     		ldr	r4, [sp, #12]
 635              	.LVL60:
 977:FreeRTOS-Kernel/timers.c ****                 {
 636              		.loc 1 977 17 is_stmt 1 view .LVU165
 977:FreeRTOS-Kernel/timers.c ****                 {
 637              		.loc 1 977 21 is_stmt 0 view .LVU166
 638 0024 6369     		ldr	r3, [r4, #20]
 977:FreeRTOS-Kernel/timers.c ****                 {
 639              		.loc 1 977 19 view .LVU167
 640 0026 13B1     		cbz	r3, .L55
 980:FreeRTOS-Kernel/timers.c ****                 }
 641              		.loc 1 980 21 is_stmt 1 view .LVU168
 980:FreeRTOS-Kernel/timers.c ****                 }
 642              		.loc 1 980 30 is_stmt 0 view .LVU169
 643 0028 201D     		adds	r0, r4, #4
 644 002a FFF7FEFF 		bl	uxListRemove
 645              	.LVL61:
 646              	.L55:
 984:FreeRTOS-Kernel/timers.c ****                 }
 647              		.loc 1 984 45 is_stmt 1 view .LVU170
 987:FreeRTOS-Kernel/timers.c **** 
 648              		.loc 1 987 119 view .LVU171
 995:FreeRTOS-Kernel/timers.c **** 
 649              		.loc 1 995 17 view .LVU172
 995:FreeRTOS-Kernel/timers.c **** 
 650              		.loc 1 995 28 is_stmt 0 view .LVU173
 651 002e 6846     		mov	r0, sp
 652 0030 FFF7FEFF 		bl	prvSampleTimeNow
 653              	.LVL62:
 654 0034 0546     		mov	r5, r0
 655              	.LVL63:
 997:FreeRTOS-Kernel/timers.c ****                 {
ARM GAS  /tmp/ccbspmyw.s 			page 34


 656              		.loc 1 997 17 is_stmt 1 view .LVU174
 997:FreeRTOS-Kernel/timers.c ****                 {
 657              		.loc 1 997 33 is_stmt 0 view .LVU175
 658 0036 019B     		ldr	r3, [sp, #4]
 997:FreeRTOS-Kernel/timers.c ****                 {
 659              		.loc 1 997 17 view .LVU176
 660 0038 013B     		subs	r3, r3, #1
 661 003a 082B     		cmp	r3, #8
 662 003c E6D8     		bhi	.L54
 663 003e DFE803F0 		tbb	[pc, r3]
 664              	.L58:
 665 0042 05       		.byte	(.L60-.L58)/2
 666 0043 05       		.byte	(.L60-.L58)/2
 667 0044 29       		.byte	(.L59-.L58)/2
 668 0045 30       		.byte	(.L57-.L58)/2
 669 0046 49       		.byte	(.L61-.L58)/2
 670 0047 05       		.byte	(.L60-.L58)/2
 671 0048 05       		.byte	(.L60-.L58)/2
 672 0049 29       		.byte	(.L59-.L58)/2
 673 004a 30       		.byte	(.L57-.L58)/2
 674 004b 00       		.p2align 1
 675              	.L60:
1004:FreeRTOS-Kernel/timers.c **** 
 676              		.loc 1 1004 25 is_stmt 1 view .LVU177
1004:FreeRTOS-Kernel/timers.c **** 
 677              		.loc 1 1004 32 is_stmt 0 view .LVU178
 678 004c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
1004:FreeRTOS-Kernel/timers.c **** 
 679              		.loc 1 1004 43 view .LVU179
 680 0050 43F00103 		orr	r3, r3, #1
 681 0054 84F82430 		strb	r3, [r4, #36]
1006:FreeRTOS-Kernel/timers.c ****                         {
 682              		.loc 1 1006 25 is_stmt 1 view .LVU180
1006:FreeRTOS-Kernel/timers.c ****                         {
 683              		.loc 1 1006 93 is_stmt 0 view .LVU181
 684 0058 029B     		ldr	r3, [sp, #8]
1006:FreeRTOS-Kernel/timers.c ****                         {
 685              		.loc 1 1006 117 view .LVU182
 686 005a A169     		ldr	r1, [r4, #24]
1006:FreeRTOS-Kernel/timers.c ****                         {
 687              		.loc 1 1006 29 view .LVU183
 688 005c 0246     		mov	r2, r0
 689 005e 1944     		add	r1, r1, r3
 690 0060 2046     		mov	r0, r4
 691              	.LVL64:
1006:FreeRTOS-Kernel/timers.c ****                         {
 692              		.loc 1 1006 29 view .LVU184
 693 0062 FFF7FEFF 		bl	prvInsertTimerInActiveList
 694              	.LVL65:
1006:FreeRTOS-Kernel/timers.c ****                         {
 695              		.loc 1 1006 27 view .LVU185
 696 0066 0028     		cmp	r0, #0
 697 0068 D0D0     		beq	.L54
1010:FreeRTOS-Kernel/timers.c ****                             {
 698              		.loc 1 1010 29 is_stmt 1 view .LVU186
1010:FreeRTOS-Kernel/timers.c ****                             {
 699              		.loc 1 1010 42 is_stmt 0 view .LVU187
ARM GAS  /tmp/ccbspmyw.s 			page 35


 700 006a 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
1010:FreeRTOS-Kernel/timers.c ****                             {
 701              		.loc 1 1010 31 view .LVU188
 702 006e 13F0040F 		tst	r3, #4
 703 0072 07D1     		bne	.L71
1016:FreeRTOS-Kernel/timers.c ****                             }
 704              		.loc 1 1016 33 is_stmt 1 view .LVU189
1016:FreeRTOS-Kernel/timers.c ****                             }
 705              		.loc 1 1016 51 is_stmt 0 view .LVU190
 706 0074 23F00103 		bic	r3, r3, #1
 707 0078 84F82430 		strb	r3, [r4, #36]
 708              	.L64:
1020:FreeRTOS-Kernel/timers.c ****                             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 709              		.loc 1 1020 58 is_stmt 1 view .LVU191
1021:FreeRTOS-Kernel/timers.c ****                         }
 710              		.loc 1 1021 29 view .LVU192
1021:FreeRTOS-Kernel/timers.c ****                         }
 711              		.loc 1 1021 36 is_stmt 0 view .LVU193
 712 007c 236A     		ldr	r3, [r4, #32]
1021:FreeRTOS-Kernel/timers.c ****                         }
 713              		.loc 1 1021 29 view .LVU194
 714 007e 2046     		mov	r0, r4
 715 0080 9847     		blx	r3
 716              	.LVL66:
 717 0082 C3E7     		b	.L54
 718              	.L71:
1012:FreeRTOS-Kernel/timers.c ****                             }
 719              		.loc 1 1012 33 is_stmt 1 view .LVU195
1012:FreeRTOS-Kernel/timers.c ****                             }
 720              		.loc 1 1012 109 is_stmt 0 view .LVU196
 721 0084 A369     		ldr	r3, [r4, #24]
1012:FreeRTOS-Kernel/timers.c ****                             }
 722              		.loc 1 1012 33 view .LVU197
 723 0086 2A46     		mov	r2, r5
 724 0088 0299     		ldr	r1, [sp, #8]
 725 008a 1944     		add	r1, r1, r3
 726 008c 2046     		mov	r0, r4
 727 008e FFF7FEFF 		bl	prvReloadTimer
 728              	.LVL67:
 729 0092 F3E7     		b	.L64
 730              	.LVL68:
 731              	.L59:
1033:FreeRTOS-Kernel/timers.c ****                         break;
 732              		.loc 1 1033 25 is_stmt 1 view .LVU198
1033:FreeRTOS-Kernel/timers.c ****                         break;
 733              		.loc 1 1033 32 is_stmt 0 view .LVU199
 734 0094 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
1033:FreeRTOS-Kernel/timers.c ****                         break;
 735              		.loc 1 1033 43 view .LVU200
 736 0098 23F00103 		bic	r3, r3, #1
 737 009c 84F82430 		strb	r3, [r4, #36]
1034:FreeRTOS-Kernel/timers.c **** 
 738              		.loc 1 1034 25 is_stmt 1 view .LVU201
 739 00a0 B4E7     		b	.L54
 740              	.L57:
1038:FreeRTOS-Kernel/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 741              		.loc 1 1038 25 view .LVU202
ARM GAS  /tmp/ccbspmyw.s 			page 36


1038:FreeRTOS-Kernel/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 742              		.loc 1 1038 32 is_stmt 0 view .LVU203
 743 00a2 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
1038:FreeRTOS-Kernel/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 744              		.loc 1 1038 43 view .LVU204
 745 00a6 43F00103 		orr	r3, r3, #1
 746 00aa 84F82430 		strb	r3, [r4, #36]
1039:FreeRTOS-Kernel/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 747              		.loc 1 1039 25 is_stmt 1 view .LVU205
1039:FreeRTOS-Kernel/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 748              		.loc 1 1039 83 is_stmt 0 view .LVU206
 749 00ae 0299     		ldr	r1, [sp, #8]
1039:FreeRTOS-Kernel/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 750              		.loc 1 1039 54 view .LVU207
 751 00b0 A161     		str	r1, [r4, #24]
1040:FreeRTOS-Kernel/timers.c **** 
 752              		.loc 1 1040 25 is_stmt 1 view .LVU208
 753 00b2 31B1     		cbz	r1, .L72
1040:FreeRTOS-Kernel/timers.c **** 
 754              		.loc 1 1040 77 discriminator 2 view .LVU209
1048:FreeRTOS-Kernel/timers.c ****                         break;
 755              		.loc 1 1048 25 discriminator 2 view .LVU210
1048:FreeRTOS-Kernel/timers.c ****                         break;
 756              		.loc 1 1048 34 is_stmt 0 discriminator 2 view .LVU211
 757 00b4 0346     		mov	r3, r0
 758 00b6 0246     		mov	r2, r0
 759 00b8 0144     		add	r1, r1, r0
 760 00ba 2046     		mov	r0, r4
 761              	.LVL69:
1048:FreeRTOS-Kernel/timers.c ****                         break;
 762              		.loc 1 1048 34 discriminator 2 view .LVU212
 763 00bc FFF7FEFF 		bl	prvInsertTimerInActiveList
 764              	.LVL70:
1049:FreeRTOS-Kernel/timers.c **** 
 765              		.loc 1 1049 25 is_stmt 1 discriminator 2 view .LVU213
 766 00c0 A4E7     		b	.L54
 767              	.LVL71:
 768              	.L72:
1040:FreeRTOS-Kernel/timers.c **** 
 769              		.loc 1 1040 25 view .LVU214
 770              	.LBB42:
 771              	.LBI42:
 772              		.file 2 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h"
   1:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V11.1.0
   3:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.
   4:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  *
   7:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  13:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  *
  14:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
ARM GAS  /tmp/ccbspmyw.s 			page 37


  15:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  16:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  *
  17:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  *
  24:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  25:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  26:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  *
  27:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  */
  28:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
  30:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  31:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  32:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
  33:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* *INDENT-OFF* */
  34:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  35:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     extern "C" {
  36:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  37:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* *INDENT-ON* */
  38:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
  39:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  40:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  41:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  43:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  44:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  *
  45:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  46:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  47:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  */
  48:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
  49:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  50:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR          char
  51:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT         float
  52:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE        double
  53:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG          long
  54:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT         short
  55:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE    uint32_t
  56:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE     long
  57:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
  58:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE   StackType_t;
  59:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** typedef long             BaseType_t;
  60:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long    UBaseType_t;
  61:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
  62:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #if ( configTICK_TYPE_WIDTH_IN_BITS == TICK_TYPE_WIDTH_16_BITS )
  63:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     typedef uint16_t     TickType_t;
  64:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #define portMAX_DELAY              ( TickType_t ) 0xffff
  65:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #elif ( configTICK_TYPE_WIDTH_IN_BITS == TICK_TYPE_WIDTH_32_BITS )
  66:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     typedef uint32_t     TickType_t;
  67:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  68:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
  69:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  70:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  71:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_TYPE_IS_ATOMIC    1
ARM GAS  /tmp/ccbspmyw.s 			page 38


  72:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #elif ( configTICK_TYPE_WIDTH_IN_BITS == TICK_TYPE_WIDTH_64_BITS )
  73:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     typedef uint64_t TickType_t;
  74:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #define portMAX_DELAY              ( TickType_t ) 0xffffffffffffffffULL
  75:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #else /* if ( configTICK_TYPE_WIDTH_IN_BITS == TICK_TYPE_WIDTH_16_BITS ) */
  76:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #error configTICK_TYPE_WIDTH_IN_BITS set to unsupported tick type width.
  77:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* if ( configTICK_TYPE_WIDTH_IN_BITS == TICK_TYPE_WIDTH_16_BITS ) */
  78:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  79:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
  80:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  81:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH      ( -1 )
  82:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  83:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT    8
  84:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portDONT_DISCARD      __attribute__( ( used ) )
  85:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  86:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
  87:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  88:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD()                                     \
  89:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  90:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  91:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  92:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  93:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  94:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  95:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  96:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  97:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     }
  98:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
  99:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
 100:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
 101:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) \
 102:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     do                                           \
 103:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     {                                            \
 104:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         if( xSwitchRequired != pdFALSE )         \
 105:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         {                                        \
 106:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****             traceISR_EXIT_TO_SCHEDULER();        \
 107:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****             portYIELD();                         \
 108:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         }                                        \
 109:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         else                                     \
 110:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         {                                        \
 111:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****             traceISR_EXIT();                     \
 112:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         }                                        \
 113:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     } while( 0 )
 114:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x )    portEND_SWITCHING_ISR( x )
 115:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 116:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 117:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
 118:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 119:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
 120:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 121:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 122:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 123:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 124:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()                      vPortEnterCritical()
 125:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()                       vPortExitCritical()
 126:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 128:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccbspmyw.s 			page 39


 129:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 130:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 131:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 132:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParameters )
 133:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParameters )
 134:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 135:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 136:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 137:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 138:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 139:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xExpec
 140:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 141:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 142:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 144:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 145:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 146:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 147:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 148:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 149:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 151:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBi
 152:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     {
 153:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         uint8_t ucReturn;
 154:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 156:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 157:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         return ucReturn;
 158:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     }
 159:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 161:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configMAX_PRIORITIES > 32 )
 162:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITI
 163:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 164:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 166:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities ) |= 
 167:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities ) &= 
 168:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 170:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 171:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 31UL 
 172:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 173:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 174:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 175:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 176:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 178:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     void vPortValidateInterruptPriority( void );
 179:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 180:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 181:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 182:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 183:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 184:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 185:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE              __inline
ARM GAS  /tmp/ccbspmyw.s 			page 40


 186:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 187:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 188:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 189:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 190:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 192:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     uint32_t ulCurrentInterrupt;
 194:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     BaseType_t xReturn;
 195:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 196:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     /* Obtain the number of the currently executing interrupt. */
 197:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 198:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 199:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     if( ulCurrentInterrupt == 0 )
 200:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     {
 201:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         xReturn = pdFALSE;
 202:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     }
 203:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     else
 204:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     {
 205:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****         xReturn = pdTRUE;
 206:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     }
 207:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 208:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     return xReturn;
 209:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** }
 210:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 212:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 773              		.loc 2 213 30 view .LVU215
 774              	.LBB43:
 214:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     uint32_t ulNewBASEPRI;
 775              		.loc 2 215 5 view .LVU216
 216:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 217:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h ****     __asm volatile
 776              		.loc 2 217 5 view .LVU217
 777              		.syntax unified
 778              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 779 00c2 4FF05003 		   mov r3, #80                                              
 780 00c6 83F31188 	   msr basepri, r3                                         
 781 00ca BFF36F8F 	   isb                                                     
 782 00ce BFF34F8F 	   dsb                                                     
 783              	
 784              	@ 0 "" 2
 785              	.LVL72:
 786              		.thumb
 787              		.syntax unified
 788              	.L66:
 789              		.loc 2 217 5 is_stmt 0 view .LVU218
 790              	.LBE43:
 791              	.LBE42:
1040:FreeRTOS-Kernel/timers.c **** 
 792              		.loc 1 1040 25 is_stmt 1 discriminator 1 view .LVU219
1040:FreeRTOS-Kernel/timers.c **** 
 793              		.loc 1 1040 25 discriminator 1 view .LVU220
 794 00d2 FEE7     		b	.L66
 795              	.L61:
ARM GAS  /tmp/ccbspmyw.s 			page 41


1072:FreeRTOS-Kernel/timers.c ****                         }
 796              		.loc 1 1072 29 view .LVU221
1072:FreeRTOS-Kernel/timers.c ****                         }
 797              		.loc 1 1072 36 is_stmt 0 view .LVU222
 798 00d4 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
1072:FreeRTOS-Kernel/timers.c ****                         }
 799              		.loc 1 1072 47 view .LVU223
 800 00d8 23F00103 		bic	r3, r3, #1
 801 00dc 84F82430 		strb	r3, [r4, #36]
1075:FreeRTOS-Kernel/timers.c **** 
 802              		.loc 1 1075 25 is_stmt 1 view .LVU224
 803 00e0 94E7     		b	.L54
 804              	.LVL73:
 805              	.L70:
1083:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 806              		.loc 1 1083 5 is_stmt 0 view .LVU225
 807 00e2 05B0     		add	sp, sp, #20
 808              	.LCFI10:
 809              		.cfi_def_cfa_offset 12
 810              		@ sp needed
 811 00e4 30BD     		pop	{r4, r5, pc}
 812              	.L74:
 813 00e6 00BF     		.align	2
 814              	.L73:
 815 00e8 00000000 		.word	xTimerQueue
 816              		.cfi_endproc
 817              	.LFE25:
 819              		.section	.text.prvTimerTask,"ax",%progbits
 820              		.align	1
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 825              	prvTimerTask:
 826              	.LFB20:
 749:FreeRTOS-Kernel/timers.c ****         TickType_t xNextExpireTime;
 827              		.loc 1 749 5 is_stmt 1 view -0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 8
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              	.LVL74:
 749:FreeRTOS-Kernel/timers.c ****         TickType_t xNextExpireTime;
 832              		.loc 1 749 5 is_stmt 0 view .LVU227
 833 0000 00B5     		push	{lr}
 834              	.LCFI11:
 835              		.cfi_def_cfa_offset 4
 836              		.cfi_offset 14, -4
 837 0002 83B0     		sub	sp, sp, #12
 838              	.LCFI12:
 839              		.cfi_def_cfa_offset 16
 840              	.LVL75:
 841              	.L76:
 750:FreeRTOS-Kernel/timers.c ****         BaseType_t xListWasEmpty;
 842              		.loc 1 750 9 is_stmt 1 discriminator 1 view .LVU228
 751:FreeRTOS-Kernel/timers.c **** 
 843              		.loc 1 751 9 discriminator 1 view .LVU229
 754:FreeRTOS-Kernel/timers.c **** 
 844              		.loc 1 754 9 discriminator 1 view .LVU230
ARM GAS  /tmp/ccbspmyw.s 			page 42


 766:FreeRTOS-Kernel/timers.c ****         {
 845              		.loc 1 766 9 discriminator 1 view .LVU231
 770:FreeRTOS-Kernel/timers.c **** 
 846              		.loc 1 770 13 discriminator 1 view .LVU232
 770:FreeRTOS-Kernel/timers.c **** 
 847              		.loc 1 770 31 is_stmt 0 discriminator 1 view .LVU233
 848 0004 01A8     		add	r0, sp, #4
 849 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 850              	.LVL76:
 774:FreeRTOS-Kernel/timers.c **** 
 851              		.loc 1 774 13 is_stmt 1 discriminator 1 view .LVU234
 852 000a 0199     		ldr	r1, [sp, #4]
 853 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 854              	.LVL77:
 777:FreeRTOS-Kernel/timers.c ****         }
 855              		.loc 1 777 13 discriminator 1 view .LVU235
 856 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 857              	.LVL78:
 766:FreeRTOS-Kernel/timers.c ****         {
 858              		.loc 1 766 9 discriminator 1 view .LVU236
 859 0014 F6E7     		b	.L76
 860              		.cfi_endproc
 861              	.LFE20:
 863              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 864              		.align	2
 865              	.LC0:
 866 0000 546D7251 		.ascii	"TmrQ\000"
 866      00
 867              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 868              		.align	1
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 873              	prvCheckForValidListAndQueue:
 874              	.LFB27:
1109:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
1110:FreeRTOS-Kernel/timers.c **** 
1111:FreeRTOS-Kernel/timers.c ****     static void prvCheckForValidListAndQueue( void )
1112:FreeRTOS-Kernel/timers.c ****     {
 875              		.loc 1 1112 5 view -0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879 0000 30B5     		push	{r4, r5, lr}
 880              	.LCFI13:
 881              		.cfi_def_cfa_offset 12
 882              		.cfi_offset 4, -12
 883              		.cfi_offset 5, -8
 884              		.cfi_offset 14, -4
 885 0002 83B0     		sub	sp, sp, #12
 886              	.LCFI14:
 887              		.cfi_def_cfa_offset 24
1113:FreeRTOS-Kernel/timers.c ****         /* Check that the list from which active timers are referenced, and the
1114:FreeRTOS-Kernel/timers.c ****          * queue used to communicate with the timer service, have been
1115:FreeRTOS-Kernel/timers.c ****          * initialised. */
1116:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 888              		.loc 1 1116 9 view .LVU238
ARM GAS  /tmp/ccbspmyw.s 			page 43


 889 0004 FFF7FEFF 		bl	vPortEnterCritical
 890              	.LVL79:
1117:FreeRTOS-Kernel/timers.c ****         {
1118:FreeRTOS-Kernel/timers.c ****             if( xTimerQueue == NULL )
 891              		.loc 1 1118 13 view .LVU239
 892              		.loc 1 1118 29 is_stmt 0 view .LVU240
 893 0008 114B     		ldr	r3, .L82
 894 000a 1B68     		ldr	r3, [r3]
 895              		.loc 1 1118 15 view .LVU241
 896 000c 1BB1     		cbz	r3, .L81
 897              	.L79:
1119:FreeRTOS-Kernel/timers.c ****             {
1120:FreeRTOS-Kernel/timers.c ****                 vListInitialise( &xActiveTimerList1 );
1121:FreeRTOS-Kernel/timers.c ****                 vListInitialise( &xActiveTimerList2 );
1122:FreeRTOS-Kernel/timers.c ****                 pxCurrentTimerList = &xActiveTimerList1;
1123:FreeRTOS-Kernel/timers.c ****                 pxOverflowTimerList = &xActiveTimerList2;
1124:FreeRTOS-Kernel/timers.c **** 
1125:FreeRTOS-Kernel/timers.c ****                 #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
1126:FreeRTOS-Kernel/timers.c ****                 {
1127:FreeRTOS-Kernel/timers.c ****                     /* The timer queue is allocated statically in case
1128:FreeRTOS-Kernel/timers.c ****                      * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
1129:FreeRTOS-Kernel/timers.c ****                     PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;
1130:FreeRTOS-Kernel/timers.c ****                     PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIME
1131:FreeRTOS-Kernel/timers.c **** 
1132:FreeRTOS-Kernel/timers.c ****                     xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( U
1133:FreeRTOS-Kernel/timers.c ****                 }
1134:FreeRTOS-Kernel/timers.c ****                 #else
1135:FreeRTOS-Kernel/timers.c ****                 {
1136:FreeRTOS-Kernel/timers.c ****                     xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseTy
1137:FreeRTOS-Kernel/timers.c ****                 }
1138:FreeRTOS-Kernel/timers.c ****                 #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
1139:FreeRTOS-Kernel/timers.c **** 
1140:FreeRTOS-Kernel/timers.c ****                 #if ( configQUEUE_REGISTRY_SIZE > 0 )
1141:FreeRTOS-Kernel/timers.c ****                 {
1142:FreeRTOS-Kernel/timers.c ****                     if( xTimerQueue != NULL )
1143:FreeRTOS-Kernel/timers.c ****                     {
1144:FreeRTOS-Kernel/timers.c ****                         vQueueAddToRegistry( xTimerQueue, "TmrQ" );
1145:FreeRTOS-Kernel/timers.c ****                     }
1146:FreeRTOS-Kernel/timers.c ****                     else
1147:FreeRTOS-Kernel/timers.c ****                     {
1148:FreeRTOS-Kernel/timers.c ****                         mtCOVERAGE_TEST_MARKER();
1149:FreeRTOS-Kernel/timers.c ****                     }
1150:FreeRTOS-Kernel/timers.c ****                 }
1151:FreeRTOS-Kernel/timers.c ****                 #endif /* configQUEUE_REGISTRY_SIZE */
1152:FreeRTOS-Kernel/timers.c ****             }
1153:FreeRTOS-Kernel/timers.c ****             else
1154:FreeRTOS-Kernel/timers.c ****             {
1155:FreeRTOS-Kernel/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 898              		.loc 1 1155 41 is_stmt 1 view .LVU242
1156:FreeRTOS-Kernel/timers.c ****             }
1157:FreeRTOS-Kernel/timers.c ****         }
1158:FreeRTOS-Kernel/timers.c ****         taskEXIT_CRITICAL();
 899              		.loc 1 1158 9 view .LVU243
 900 000e FFF7FEFF 		bl	vPortExitCritical
 901              	.LVL80:
1159:FreeRTOS-Kernel/timers.c ****     }
 902              		.loc 1 1159 5 is_stmt 0 view .LVU244
ARM GAS  /tmp/ccbspmyw.s 			page 44


 903 0012 03B0     		add	sp, sp, #12
 904              	.LCFI15:
 905              		.cfi_remember_state
 906              		.cfi_def_cfa_offset 12
 907              		@ sp needed
 908 0014 30BD     		pop	{r4, r5, pc}
 909              	.L81:
 910              	.LCFI16:
 911              		.cfi_restore_state
1120:FreeRTOS-Kernel/timers.c ****                 vListInitialise( &xActiveTimerList2 );
 912              		.loc 1 1120 17 is_stmt 1 view .LVU245
 913 0016 0F4D     		ldr	r5, .L82+4
 914 0018 2846     		mov	r0, r5
 915 001a FFF7FEFF 		bl	vListInitialise
 916              	.LVL81:
1121:FreeRTOS-Kernel/timers.c ****                 pxCurrentTimerList = &xActiveTimerList1;
 917              		.loc 1 1121 17 view .LVU246
 918 001e 0E4C     		ldr	r4, .L82+8
 919 0020 2046     		mov	r0, r4
 920 0022 FFF7FEFF 		bl	vListInitialise
 921              	.LVL82:
1122:FreeRTOS-Kernel/timers.c ****                 pxOverflowTimerList = &xActiveTimerList2;
 922              		.loc 1 1122 17 view .LVU247
1122:FreeRTOS-Kernel/timers.c ****                 pxOverflowTimerList = &xActiveTimerList2;
 923              		.loc 1 1122 36 is_stmt 0 view .LVU248
 924 0026 0D4B     		ldr	r3, .L82+12
 925 0028 1D60     		str	r5, [r3]
1123:FreeRTOS-Kernel/timers.c **** 
 926              		.loc 1 1123 17 is_stmt 1 view .LVU249
1123:FreeRTOS-Kernel/timers.c **** 
 927              		.loc 1 1123 37 is_stmt 0 view .LVU250
 928 002a 0D4B     		ldr	r3, .L82+16
 929 002c 1C60     		str	r4, [r3]
 930              	.LBB44:
1129:FreeRTOS-Kernel/timers.c ****                     PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIME
 931              		.loc 1 1129 37 is_stmt 1 view .LVU251
1130:FreeRTOS-Kernel/timers.c **** 
 932              		.loc 1 1130 37 view .LVU252
1132:FreeRTOS-Kernel/timers.c ****                 }
 933              		.loc 1 1132 21 view .LVU253
1132:FreeRTOS-Kernel/timers.c ****                 }
 934              		.loc 1 1132 35 is_stmt 0 view .LVU254
 935 002e 0023     		movs	r3, #0
 936 0030 0093     		str	r3, [sp]
 937 0032 0C4B     		ldr	r3, .L82+20
 938 0034 0C4A     		ldr	r2, .L82+24
 939 0036 0C21     		movs	r1, #12
 940 0038 0A20     		movs	r0, #10
 941 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 942              	.LVL83:
1132:FreeRTOS-Kernel/timers.c ****                 }
 943              		.loc 1 1132 33 view .LVU255
 944 003e 044B     		ldr	r3, .L82
 945 0040 1860     		str	r0, [r3]
 946              	.LBE44:
1142:FreeRTOS-Kernel/timers.c ****                     {
 947              		.loc 1 1142 21 is_stmt 1 view .LVU256
ARM GAS  /tmp/ccbspmyw.s 			page 45


1142:FreeRTOS-Kernel/timers.c ****                     {
 948              		.loc 1 1142 23 is_stmt 0 view .LVU257
 949 0042 0028     		cmp	r0, #0
 950 0044 E3D0     		beq	.L79
1144:FreeRTOS-Kernel/timers.c ****                     }
 951              		.loc 1 1144 25 is_stmt 1 view .LVU258
 952 0046 0949     		ldr	r1, .L82+28
 953 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 954              	.LVL84:
 955 004c DFE7     		b	.L79
 956              	.L83:
 957 004e 00BF     		.align	2
 958              	.L82:
 959 0050 00000000 		.word	xTimerQueue
 960 0054 00000000 		.word	xActiveTimerList1
 961 0058 00000000 		.word	xActiveTimerList2
 962 005c 00000000 		.word	pxCurrentTimerList
 963 0060 00000000 		.word	pxOverflowTimerList
 964 0064 00000000 		.word	xStaticTimerQueue.0
 965 0068 00000000 		.word	ucStaticTimerQueueStorage.1
 966 006c 00000000 		.word	.LC0
 967              		.cfi_endproc
 968              	.LFE27:
 970              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 971              		.align	1
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 976              	prvInitialiseNewTimer:
 977              	.LVL85:
 978              	.LFB7:
 423:FreeRTOS-Kernel/timers.c ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 979              		.loc 1 423 5 view -0
 980              		.cfi_startproc
 981              		@ args = 8, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 423:FreeRTOS-Kernel/timers.c ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 983              		.loc 1 423 5 is_stmt 0 view .LVU260
 984 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 985              	.LCFI17:
 986              		.cfi_def_cfa_offset 24
 987              		.cfi_offset 4, -24
 988              		.cfi_offset 5, -20
 989              		.cfi_offset 6, -16
 990              		.cfi_offset 7, -12
 991              		.cfi_offset 8, -8
 992              		.cfi_offset 14, -4
 993 0004 079F     		ldr	r7, [sp, #28]
 425:FreeRTOS-Kernel/timers.c **** 
 994              		.loc 1 425 9 is_stmt 1 view .LVU261
 995 0006 41B9     		cbnz	r1, .L85
 425:FreeRTOS-Kernel/timers.c **** 
 996              		.loc 1 425 9 view .LVU262
 997              	.LBB45:
 998              	.LBI45:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 999              		.loc 2 213 30 view .LVU263
ARM GAS  /tmp/ccbspmyw.s 			page 46


 1000              	.LBB46:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1001              		.loc 2 215 5 view .LVU264
 1002              		.loc 2 217 5 view .LVU265
 1003              		.syntax unified
 1004              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1005 0008 4FF05003 		   mov r3, #80                                              
 1006 000c 83F31188 	   msr basepri, r3                                         
 1007 0010 BFF36F8F 	   isb                                                     
 1008 0014 BFF34F8F 	   dsb                                                     
 1009              	
 1010              	@ 0 "" 2
 1011              	.LVL86:
 1012              		.thumb
 1013              		.syntax unified
 1014              	.L86:
 1015              		.loc 2 217 5 is_stmt 0 view .LVU266
 1016              	.LBE46:
 1017              	.LBE45:
 425:FreeRTOS-Kernel/timers.c **** 
 1018              		.loc 1 425 9 is_stmt 1 discriminator 1 view .LVU267
 425:FreeRTOS-Kernel/timers.c **** 
 1019              		.loc 1 425 9 discriminator 1 view .LVU268
 1020 0018 FEE7     		b	.L86
 1021              	.LVL87:
 1022              	.L85:
 425:FreeRTOS-Kernel/timers.c **** 
 1023              		.loc 1 425 9 is_stmt 0 discriminator 1 view .LVU269
 1024 001a 0646     		mov	r6, r0
 1025 001c 1446     		mov	r4, r2
 1026 001e 1D46     		mov	r5, r3
 1027 0020 8846     		mov	r8, r1
 425:FreeRTOS-Kernel/timers.c **** 
 1028              		.loc 1 425 52 is_stmt 1 discriminator 2 view .LVU270
 429:FreeRTOS-Kernel/timers.c **** 
 1029              		.loc 1 429 9 discriminator 2 view .LVU271
 1030 0022 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 1031              	.LVL88:
 433:FreeRTOS-Kernel/timers.c ****         pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 1032              		.loc 1 433 9 discriminator 2 view .LVU272
 433:FreeRTOS-Kernel/timers.c ****         pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 1033              		.loc 1 433 33 is_stmt 0 discriminator 2 view .LVU273
 1034 0026 3E60     		str	r6, [r7]
 434:FreeRTOS-Kernel/timers.c ****         pxNewTimer->pvTimerID = pvTimerID;
 1035              		.loc 1 434 9 is_stmt 1 discriminator 2 view .LVU274
 434:FreeRTOS-Kernel/timers.c ****         pxNewTimer->pvTimerID = pvTimerID;
 1036              		.loc 1 434 41 is_stmt 0 discriminator 2 view .LVU275
 1037 0028 C7F81880 		str	r8, [r7, #24]
 435:FreeRTOS-Kernel/timers.c ****         pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 1038              		.loc 1 435 9 is_stmt 1 discriminator 2 view .LVU276
 435:FreeRTOS-Kernel/timers.c ****         pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 1039              		.loc 1 435 31 is_stmt 0 discriminator 2 view .LVU277
 1040 002c FD61     		str	r5, [r7, #28]
 436:FreeRTOS-Kernel/timers.c ****         vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 1041              		.loc 1 436 9 is_stmt 1 discriminator 2 view .LVU278
 436:FreeRTOS-Kernel/timers.c ****         vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 1042              		.loc 1 436 40 is_stmt 0 discriminator 2 view .LVU279
ARM GAS  /tmp/ccbspmyw.s 			page 47


 1043 002e 069B     		ldr	r3, [sp, #24]
 1044 0030 3B62     		str	r3, [r7, #32]
 437:FreeRTOS-Kernel/timers.c **** 
 1045              		.loc 1 437 9 is_stmt 1 discriminator 2 view .LVU280
 1046 0032 381D     		adds	r0, r7, #4
 1047 0034 FFF7FEFF 		bl	vListInitialiseItem
 1048              	.LVL89:
 439:FreeRTOS-Kernel/timers.c ****         {
 1049              		.loc 1 439 9 discriminator 2 view .LVU281
 439:FreeRTOS-Kernel/timers.c ****         {
 1050              		.loc 1 439 11 is_stmt 0 discriminator 2 view .LVU282
 1051 0038 2CB1     		cbz	r4, .L84
 441:FreeRTOS-Kernel/timers.c ****         }
 1052              		.loc 1 441 13 is_stmt 1 view .LVU283
 441:FreeRTOS-Kernel/timers.c ****         }
 1053              		.loc 1 441 23 is_stmt 0 view .LVU284
 1054 003a 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 441:FreeRTOS-Kernel/timers.c ****         }
 1055              		.loc 1 441 34 view .LVU285
 1056 003e 43F00403 		orr	r3, r3, #4
 1057 0042 87F82430 		strb	r3, [r7, #36]
 444:FreeRTOS-Kernel/timers.c ****     }
 1058              		.loc 1 444 40 is_stmt 1 view .LVU286
 1059              	.L84:
 445:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1060              		.loc 1 445 5 is_stmt 0 view .LVU287
 1061 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 445:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1062              		.loc 1 445 5 view .LVU288
 1063              		.cfi_endproc
 1064              	.LFE7:
 1066              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 1067              		.align	2
 1068              	.LC1:
 1069 0000 546D7220 		.ascii	"Tmr Svc\000"
 1069      53766300 
 1070              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 1071              		.align	1
 1072              		.global	xTimerCreateTimerTask
 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1077              	xTimerCreateTimerTask:
 1078              	.LFB5:
 238:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn = pdFAIL;
 1079              		.loc 1 238 5 is_stmt 1 view -0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 16
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083 0000 10B5     		push	{r4, lr}
 1084              	.LCFI18:
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 4, -8
 1087              		.cfi_offset 14, -4
 1088 0002 88B0     		sub	sp, sp, #32
 1089              	.LCFI19:
 1090              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/ccbspmyw.s 			page 48


 239:FreeRTOS-Kernel/timers.c **** 
 1091              		.loc 1 239 9 view .LVU290
 1092              	.LVL90:
 241:FreeRTOS-Kernel/timers.c **** 
 1093              		.loc 1 241 43 view .LVU291
 247:FreeRTOS-Kernel/timers.c **** 
 1094              		.loc 1 247 9 view .LVU292
 1095 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 1096              	.LVL91:
 249:FreeRTOS-Kernel/timers.c ****         {
 1097              		.loc 1 249 9 view .LVU293
 249:FreeRTOS-Kernel/timers.c ****         {
 1098              		.loc 1 249 25 is_stmt 0 view .LVU294
 1099 0008 124B     		ldr	r3, .L95
 1100 000a 1B68     		ldr	r3, [r3]
 249:FreeRTOS-Kernel/timers.c ****         {
 1101              		.loc 1 249 11 view .LVU295
 1102 000c CBB1     		cbz	r3, .L90
 1103              	.LBB47:
 290:FreeRTOS-Kernel/timers.c ****                     StackType_t * pxTimerTaskStackBuffer = NULL;
 1104              		.loc 1 290 21 is_stmt 1 view .LVU296
 290:FreeRTOS-Kernel/timers.c ****                     StackType_t * pxTimerTaskStackBuffer = NULL;
 1105              		.loc 1 290 36 is_stmt 0 view .LVU297
 1106 000e 0024     		movs	r4, #0
 1107 0010 0594     		str	r4, [sp, #20]
 291:FreeRTOS-Kernel/timers.c ****                     configSTACK_DEPTH_TYPE uxTimerTaskStackSize;
 1108              		.loc 1 291 21 is_stmt 1 view .LVU298
 291:FreeRTOS-Kernel/timers.c ****                     configSTACK_DEPTH_TYPE uxTimerTaskStackSize;
 1109              		.loc 1 291 35 is_stmt 0 view .LVU299
 1110 0012 0694     		str	r4, [sp, #24]
 292:FreeRTOS-Kernel/timers.c **** 
 1111              		.loc 1 292 21 is_stmt 1 view .LVU300
 294:FreeRTOS-Kernel/timers.c ****                     xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 1112              		.loc 1 294 21 view .LVU301
 1113 0014 07AA     		add	r2, sp, #28
 1114 0016 06A9     		add	r1, sp, #24
 1115 0018 05A8     		add	r0, sp, #20
 1116 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 1117              	.LVL92:
 295:FreeRTOS-Kernel/timers.c ****                                                           configTIMER_SERVICE_TASK_NAME,
 1118              		.loc 1 295 21 view .LVU302
 295:FreeRTOS-Kernel/timers.c ****                                                           configTIMER_SERVICE_TASK_NAME,
 1119              		.loc 1 295 40 is_stmt 0 view .LVU303
 1120 001e 059B     		ldr	r3, [sp, #20]
 1121 0020 0293     		str	r3, [sp, #8]
 1122 0022 069B     		ldr	r3, [sp, #24]
 1123 0024 0193     		str	r3, [sp, #4]
 1124 0026 0223     		movs	r3, #2
 1125 0028 0093     		str	r3, [sp]
 1126 002a 2346     		mov	r3, r4
 1127 002c 079A     		ldr	r2, [sp, #28]
 1128 002e 0A49     		ldr	r1, .L95+4
 1129 0030 0A48     		ldr	r0, .L95+8
 1130 0032 FFF7FEFF 		bl	xTaskCreateStatic
 1131              	.LVL93:
 295:FreeRTOS-Kernel/timers.c ****                                                           configTIMER_SERVICE_TASK_NAME,
 1132              		.loc 1 295 38 view .LVU304
ARM GAS  /tmp/ccbspmyw.s 			page 49


 1133 0036 0A4B     		ldr	r3, .L95+12
 1134 0038 1860     		str	r0, [r3]
 303:FreeRTOS-Kernel/timers.c ****                     {
 1135              		.loc 1 303 21 is_stmt 1 view .LVU305
 303:FreeRTOS-Kernel/timers.c ****                     {
 1136              		.loc 1 303 23 is_stmt 0 view .LVU306
 1137 003a 10B1     		cbz	r0, .L90
 1138              	.LBE47:
 331:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1139              		.loc 1 331 5 view .LVU307
 1140 003c 0120     		movs	r0, #1
 1141 003e 08B0     		add	sp, sp, #32
 1142              	.LCFI20:
 1143              		.cfi_remember_state
 1144              		.cfi_def_cfa_offset 8
 1145              		@ sp needed
 1146 0040 10BD     		pop	{r4, pc}
 1147              	.L90:
 1148              	.LCFI21:
 1149              		.cfi_restore_state
 1150              	.LVL94:
 326:FreeRTOS-Kernel/timers.c **** 
 1151              		.loc 1 326 9 is_stmt 1 view .LVU308
 1152              	.LBB48:
 1153              	.LBI48:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 1154              		.loc 2 213 30 view .LVU309
 1155              	.LBB49:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1156              		.loc 2 215 5 view .LVU310
 1157              		.loc 2 217 5 view .LVU311
 1158              		.syntax unified
 1159              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1160 0042 4FF05003 		   mov r3, #80                                              
 1161 0046 83F31188 	   msr basepri, r3                                         
 1162 004a BFF36F8F 	   isb                                                     
 1163 004e BFF34F8F 	   dsb                                                     
 1164              	
 1165              	@ 0 "" 2
 1166              	.LVL95:
 1167              		.thumb
 1168              		.syntax unified
 1169              	.L92:
 1170              		.loc 2 217 5 is_stmt 0 view .LVU312
 1171              	.LBE49:
 1172              	.LBE48:
 326:FreeRTOS-Kernel/timers.c **** 
 1173              		.loc 1 326 9 is_stmt 1 discriminator 1 view .LVU313
 326:FreeRTOS-Kernel/timers.c **** 
 1174              		.loc 1 326 9 discriminator 1 view .LVU314
 1175 0052 FEE7     		b	.L92
 1176              	.L96:
 1177              		.align	2
 1178              	.L95:
 1179 0054 00000000 		.word	xTimerQueue
 1180 0058 00000000 		.word	.LC1
 1181 005c 00000000 		.word	prvTimerTask
ARM GAS  /tmp/ccbspmyw.s 			page 50


 1182 0060 00000000 		.word	xTimerTaskHandle
 1183              		.cfi_endproc
 1184              	.LFE5:
 1186              		.section	.text.xTimerCreateStatic,"ax",%progbits
 1187              		.align	1
 1188              		.global	xTimerCreateStatic
 1189              		.syntax unified
 1190              		.thumb
 1191              		.thumb_func
 1193              	xTimerCreateStatic:
 1194              	.LVL96:
 1195              	.LFB6:
 376:FreeRTOS-Kernel/timers.c ****             Timer_t * pxNewTimer;
 1196              		.loc 1 376 9 view -0
 1197              		.cfi_startproc
 1198              		@ args = 8, pretend = 0, frame = 8
 1199              		@ frame_needed = 0, uses_anonymous_args = 0
 376:FreeRTOS-Kernel/timers.c ****             Timer_t * pxNewTimer;
 1200              		.loc 1 376 9 is_stmt 0 view .LVU316
 1201 0000 10B5     		push	{r4, lr}
 1202              	.LCFI22:
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 4, -8
 1205              		.cfi_offset 14, -4
 1206 0002 84B0     		sub	sp, sp, #16
 1207              	.LCFI23:
 1208              		.cfi_def_cfa_offset 24
 1209 0004 8446     		mov	ip, r0
 377:FreeRTOS-Kernel/timers.c **** 
 1210              		.loc 1 377 13 is_stmt 1 view .LVU317
 379:FreeRTOS-Kernel/timers.c **** 
 1211              		.loc 1 379 137 view .LVU318
 1212              	.LBB50:
 386:FreeRTOS-Kernel/timers.c ****                 configASSERT( xSize == sizeof( Timer_t ) );
 1213              		.loc 1 386 17 view .LVU319
 386:FreeRTOS-Kernel/timers.c ****                 configASSERT( xSize == sizeof( Timer_t ) );
 1214              		.loc 1 386 33 is_stmt 0 view .LVU320
 1215 0006 2820     		movs	r0, #40
 1216              	.LVL97:
 386:FreeRTOS-Kernel/timers.c ****                 configASSERT( xSize == sizeof( Timer_t ) );
 1217              		.loc 1 386 33 view .LVU321
 1218 0008 0390     		str	r0, [sp, #12]
 387:FreeRTOS-Kernel/timers.c ****                 ( void ) xSize; /* Prevent unused variable warning when configASSERT() is not defin
 1219              		.loc 1 387 17 is_stmt 1 view .LVU322
 1220 000a 0398     		ldr	r0, [sp, #12]
 1221 000c 2828     		cmp	r0, #40
 1222 000e 08D0     		beq	.L98
 387:FreeRTOS-Kernel/timers.c ****                 ( void ) xSize; /* Prevent unused variable warning when configASSERT() is not defin
 1223              		.loc 1 387 17 view .LVU323
 1224              	.LBB51:
 1225              	.LBI51:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 1226              		.loc 2 213 30 view .LVU324
 1227              	.LBB52:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1228              		.loc 2 215 5 view .LVU325
 1229              		.loc 2 217 5 view .LVU326
ARM GAS  /tmp/ccbspmyw.s 			page 51


 1230              		.syntax unified
 1231              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1232 0010 4FF05003 		   mov r3, #80                                              
 1233 0014 83F31188 	   msr basepri, r3                                         
 1234 0018 BFF36F8F 	   isb                                                     
 1235 001c BFF34F8F 	   dsb                                                     
 1236              	
 1237              	@ 0 "" 2
 1238              	.LVL98:
 1239              		.thumb
 1240              		.syntax unified
 1241              	.L99:
 1242              		.loc 2 217 5 is_stmt 0 view .LVU327
 1243              	.LBE52:
 1244              	.LBE51:
 387:FreeRTOS-Kernel/timers.c ****                 ( void ) xSize; /* Prevent unused variable warning when configASSERT() is not defin
 1245              		.loc 1 387 17 is_stmt 1 discriminator 1 view .LVU328
 387:FreeRTOS-Kernel/timers.c ****                 ( void ) xSize; /* Prevent unused variable warning when configASSERT() is not defin
 1246              		.loc 1 387 17 discriminator 1 view .LVU329
 1247 0020 FEE7     		b	.L99
 1248              	.LVL99:
 1249              	.L98:
 387:FreeRTOS-Kernel/timers.c ****                 ( void ) xSize; /* Prevent unused variable warning when configASSERT() is not defin
 1250              		.loc 1 387 59 discriminator 2 view .LVU330
 388:FreeRTOS-Kernel/timers.c ****             }
 1251              		.loc 1 388 17 discriminator 2 view .LVU331
 1252 0022 0398     		ldr	r0, [sp, #12]
 1253              	.LBE50:
 393:FreeRTOS-Kernel/timers.c ****             /* MISRA Ref 11.3.1 [Misaligned access] */
 1254              		.loc 1 393 13 discriminator 2 view .LVU332
 1255 0024 0798     		ldr	r0, [sp, #28]
 1256 0026 60B1     		cbz	r0, .L103
 393:FreeRTOS-Kernel/timers.c ****             /* MISRA Ref 11.3.1 [Misaligned access] */
 1257              		.loc 1 393 42 view .LVU333
 397:FreeRTOS-Kernel/timers.c **** 
 1258              		.loc 1 397 13 view .LVU334
 1259              	.LVL100:
 399:FreeRTOS-Kernel/timers.c ****             {
 1260              		.loc 1 399 13 view .LVU335
 404:FreeRTOS-Kernel/timers.c **** 
 1261              		.loc 1 404 17 view .LVU336
 404:FreeRTOS-Kernel/timers.c **** 
 1262              		.loc 1 404 38 is_stmt 0 view .LVU337
 1263 0028 0220     		movs	r0, #2
 1264              	.LVL101:
 404:FreeRTOS-Kernel/timers.c **** 
 1265              		.loc 1 404 38 view .LVU338
 1266 002a 079C     		ldr	r4, [sp, #28]
 1267 002c 84F82400 		strb	r0, [r4, #36]
 406:FreeRTOS-Kernel/timers.c ****             }
 1268              		.loc 1 406 17 is_stmt 1 view .LVU339
 1269 0030 0194     		str	r4, [sp, #4]
 1270 0032 0698     		ldr	r0, [sp, #24]
 1271 0034 0090     		str	r0, [sp]
 1272 0036 6046     		mov	r0, ip
 1273 0038 FFF7FEFF 		bl	prvInitialiseNewTimer
 1274              	.LVL102:
ARM GAS  /tmp/ccbspmyw.s 			page 52


 409:FreeRTOS-Kernel/timers.c **** 
 1275              		.loc 1 409 57 view .LVU340
 411:FreeRTOS-Kernel/timers.c ****         }
 1276              		.loc 1 411 13 view .LVU341
 412:FreeRTOS-Kernel/timers.c **** 
 1277              		.loc 1 412 9 is_stmt 0 view .LVU342
 1278 003c 0798     		ldr	r0, [sp, #28]
 1279 003e 04B0     		add	sp, sp, #16
 1280              	.LCFI24:
 1281              		.cfi_remember_state
 1282              		.cfi_def_cfa_offset 8
 1283              		@ sp needed
 1284 0040 10BD     		pop	{r4, pc}
 1285              	.LVL103:
 1286              	.L103:
 1287              	.LCFI25:
 1288              		.cfi_restore_state
 393:FreeRTOS-Kernel/timers.c ****             /* MISRA Ref 11.3.1 [Misaligned access] */
 1289              		.loc 1 393 13 is_stmt 1 view .LVU343
 1290              	.LBB53:
 1291              	.LBI53:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 1292              		.loc 2 213 30 view .LVU344
 1293              	.LBB54:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1294              		.loc 2 215 5 view .LVU345
 1295              		.loc 2 217 5 view .LVU346
 1296              		.syntax unified
 1297              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1298 0042 4FF05003 		   mov r3, #80                                              
 1299 0046 83F31188 	   msr basepri, r3                                         
 1300 004a BFF36F8F 	   isb                                                     
 1301 004e BFF34F8F 	   dsb                                                     
 1302              	
 1303              	@ 0 "" 2
 1304              	.LVL104:
 1305              		.thumb
 1306              		.syntax unified
 1307              	.L101:
 1308              		.loc 2 217 5 is_stmt 0 view .LVU347
 1309              	.LBE54:
 1310              	.LBE53:
 393:FreeRTOS-Kernel/timers.c ****             /* MISRA Ref 11.3.1 [Misaligned access] */
 1311              		.loc 1 393 13 is_stmt 1 discriminator 2 view .LVU348
 393:FreeRTOS-Kernel/timers.c ****             /* MISRA Ref 11.3.1 [Misaligned access] */
 1312              		.loc 1 393 13 discriminator 2 view .LVU349
 1313 0052 FEE7     		b	.L101
 1314              		.cfi_endproc
 1315              	.LFE6:
 1317              		.section	.text.xTimerGenericCommandFromTask,"ax",%progbits
 1318              		.align	1
 1319              		.global	xTimerGenericCommandFromTask
 1320              		.syntax unified
 1321              		.thumb
 1322              		.thumb_func
 1324              	xTimerGenericCommandFromTask:
 1325              	.LVL105:
ARM GAS  /tmp/ccbspmyw.s 			page 53


 1326              	.LFB8:
 453:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn = pdFAIL;
 1327              		.loc 1 453 5 view -0
 1328              		.cfi_startproc
 1329              		@ args = 4, pretend = 0, frame = 16
 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 454:FreeRTOS-Kernel/timers.c ****         DaemonTaskMessage_t xMessage;
 1331              		.loc 1 454 9 view .LVU351
 455:FreeRTOS-Kernel/timers.c **** 
 1332              		.loc 1 455 9 view .LVU352
 457:FreeRTOS-Kernel/timers.c **** 
 1333              		.loc 1 457 9 view .LVU353
 459:FreeRTOS-Kernel/timers.c **** 
 1334              		.loc 1 459 127 view .LVU354
 461:FreeRTOS-Kernel/timers.c **** 
 1335              		.loc 1 461 9 view .LVU355
 1336 0000 98B1     		cbz	r0, .L116
 1337 0002 0346     		mov	r3, r0
 1338              	.LVL106:
 461:FreeRTOS-Kernel/timers.c **** 
 1339              		.loc 1 461 31 discriminator 2 view .LVU356
 465:FreeRTOS-Kernel/timers.c ****         {
 1340              		.loc 1 465 9 discriminator 2 view .LVU357
 465:FreeRTOS-Kernel/timers.c ****         {
 1341              		.loc 1 465 25 is_stmt 0 discriminator 2 view .LVU358
 1342 0004 1948     		ldr	r0, .L118
 1343              	.LVL107:
 465:FreeRTOS-Kernel/timers.c ****         {
 1344              		.loc 1 465 25 discriminator 2 view .LVU359
 1345 0006 0068     		ldr	r0, [r0]
 465:FreeRTOS-Kernel/timers.c ****         {
 1346              		.loc 1 465 11 discriminator 2 view .LVU360
 1347 0008 70B3     		cbz	r0, .L111
 453:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn = pdFAIL;
 1348              		.loc 1 453 5 view .LVU361
 1349 000a 00B5     		push	{lr}
 1350              	.LCFI26:
 1351              		.cfi_def_cfa_offset 4
 1352              		.cfi_offset 14, -4
 1353 000c 85B0     		sub	sp, sp, #20
 1354              	.LCFI27:
 1355              		.cfi_def_cfa_offset 24
 468:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 1356              		.loc 1 468 13 is_stmt 1 view .LVU362
 468:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 1357              		.loc 1 468 33 is_stmt 0 view .LVU363
 1358 000e 0191     		str	r1, [sp, #4]
 469:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 1359              		.loc 1 469 13 is_stmt 1 view .LVU364
 469:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 1360              		.loc 1 469 55 is_stmt 0 view .LVU365
 1361 0010 0292     		str	r2, [sp, #8]
 470:FreeRTOS-Kernel/timers.c **** 
 1362              		.loc 1 470 13 is_stmt 1 view .LVU366
 470:FreeRTOS-Kernel/timers.c **** 
 1363              		.loc 1 470 49 is_stmt 0 view .LVU367
 1364 0012 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccbspmyw.s 			page 54


 472:FreeRTOS-Kernel/timers.c **** 
 1365              		.loc 1 472 13 is_stmt 1 view .LVU368
 1366 0014 0529     		cmp	r1, #5
 1367 0016 11DD     		ble	.L108
 472:FreeRTOS-Kernel/timers.c **** 
 1368              		.loc 1 472 13 view .LVU369
 1369              	.LBB55:
 1370              	.LBI55:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 1371              		.loc 2 213 30 view .LVU370
 1372              	.LBB56:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1373              		.loc 2 215 5 view .LVU371
 1374              		.loc 2 217 5 view .LVU372
 1375              		.syntax unified
 1376              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1377 0018 4FF05003 		   mov r3, #80                                              
 1378 001c 83F31188 	   msr basepri, r3                                         
 1379 0020 BFF36F8F 	   isb                                                     
 1380 0024 BFF34F8F 	   dsb                                                     
 1381              	
 1382              	@ 0 "" 2
 1383              	.LVL108:
 1384              		.thumb
 1385              		.syntax unified
 1386              	.L109:
 1387              		.loc 2 217 5 is_stmt 0 view .LVU373
 1388              	.LBE56:
 1389              	.LBE55:
 472:FreeRTOS-Kernel/timers.c **** 
 1390              		.loc 1 472 13 is_stmt 1 discriminator 2 view .LVU374
 472:FreeRTOS-Kernel/timers.c **** 
 1391              		.loc 1 472 13 discriminator 2 view .LVU375
 1392 0028 FEE7     		b	.L109
 1393              	.LVL109:
 1394              	.L116:
 1395              	.LCFI28:
 1396              		.cfi_def_cfa_offset 0
 1397              		.cfi_restore 14
 461:FreeRTOS-Kernel/timers.c **** 
 1398              		.loc 1 461 9 view .LVU376
 1399              	.LBB57:
 1400              	.LBI57:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 1401              		.loc 2 213 30 view .LVU377
 1402              	.LBB58:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1403              		.loc 2 215 5 view .LVU378
 1404              		.loc 2 217 5 view .LVU379
 1405              		.syntax unified
 1406              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1407 002a 4FF05003 		   mov r3, #80                                              
 1408 002e 83F31188 	   msr basepri, r3                                         
 1409 0032 BFF36F8F 	   isb                                                     
 1410 0036 BFF34F8F 	   dsb                                                     
 1411              	
 1412              	@ 0 "" 2
ARM GAS  /tmp/ccbspmyw.s 			page 55


 1413              	.LVL110:
 1414              		.thumb
 1415              		.syntax unified
 1416              	.L106:
 1417              		.loc 2 217 5 is_stmt 0 view .LVU380
 1418              	.LBE58:
 1419              	.LBE57:
 461:FreeRTOS-Kernel/timers.c **** 
 1420              		.loc 1 461 9 is_stmt 1 discriminator 1 view .LVU381
 461:FreeRTOS-Kernel/timers.c **** 
 1421              		.loc 1 461 9 discriminator 1 view .LVU382
 1422 003a FEE7     		b	.L106
 1423              	.LVL111:
 1424              	.L108:
 1425              	.LCFI29:
 1426              		.cfi_def_cfa_offset 24
 1427              		.cfi_offset 14, -4
 472:FreeRTOS-Kernel/timers.c **** 
 1428              		.loc 1 472 67 view .LVU383
 474:FreeRTOS-Kernel/timers.c ****             {
 1429              		.loc 1 474 13 view .LVU384
 476:FreeRTOS-Kernel/timers.c ****                 {
 1430              		.loc 1 476 17 view .LVU385
 476:FreeRTOS-Kernel/timers.c ****                 {
 1431              		.loc 1 476 21 is_stmt 0 view .LVU386
 1432 003c FFF7FEFF 		bl	xTaskGetSchedulerState
 1433              	.LVL112:
 476:FreeRTOS-Kernel/timers.c ****                 {
 1434              		.loc 1 476 19 view .LVU387
 1435 0040 0228     		cmp	r0, #2
 1436 0042 09D0     		beq	.L117
 482:FreeRTOS-Kernel/timers.c ****                 }
 1437              		.loc 1 482 21 is_stmt 1 view .LVU388
 482:FreeRTOS-Kernel/timers.c ****                 }
 1438              		.loc 1 482 31 is_stmt 0 view .LVU389
 1439 0044 0023     		movs	r3, #0
 1440 0046 1A46     		mov	r2, r3
 1441 0048 01A9     		add	r1, sp, #4
 1442 004a 0848     		ldr	r0, .L118
 1443 004c 0068     		ldr	r0, [r0]
 1444 004e FFF7FEFF 		bl	xQueueGenericSend
 1445              	.LVL113:
 1446              	.L104:
 496:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1447              		.loc 1 496 5 view .LVU390
 1448 0052 05B0     		add	sp, sp, #20
 1449              	.LCFI30:
 1450              		.cfi_remember_state
 1451              		.cfi_def_cfa_offset 4
 1452              		@ sp needed
 1453 0054 5DF804FB 		ldr	pc, [sp], #4
 1454              	.LVL114:
 1455              	.L117:
 1456              	.LCFI31:
 1457              		.cfi_restore_state
 478:FreeRTOS-Kernel/timers.c ****                 }
 1458              		.loc 1 478 21 is_stmt 1 view .LVU391
ARM GAS  /tmp/ccbspmyw.s 			page 56


 478:FreeRTOS-Kernel/timers.c ****                 }
 1459              		.loc 1 478 31 is_stmt 0 view .LVU392
 1460 0058 0023     		movs	r3, #0
 1461 005a 069A     		ldr	r2, [sp, #24]
 1462 005c 01A9     		add	r1, sp, #4
 1463 005e 0348     		ldr	r0, .L118
 1464 0060 0068     		ldr	r0, [r0]
 1465 0062 FFF7FEFF 		bl	xQueueGenericSend
 1466              	.LVL115:
 478:FreeRTOS-Kernel/timers.c ****                 }
 1467              		.loc 1 478 31 view .LVU393
 1468 0066 F4E7     		b	.L104
 1469              	.LVL116:
 1470              	.L111:
 1471              	.LCFI32:
 1472              		.cfi_def_cfa_offset 0
 1473              		.cfi_restore 14
 454:FreeRTOS-Kernel/timers.c ****         DaemonTaskMessage_t xMessage;
 1474              		.loc 1 454 20 view .LVU394
 1475 0068 0020     		movs	r0, #0
 490:FreeRTOS-Kernel/timers.c ****         }
 1476              		.loc 1 490 37 is_stmt 1 view .LVU395
 493:FreeRTOS-Kernel/timers.c **** 
 1477              		.loc 1 493 60 view .LVU396
 495:FreeRTOS-Kernel/timers.c ****     }
 1478              		.loc 1 495 9 view .LVU397
 496:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1479              		.loc 1 496 5 is_stmt 0 view .LVU398
 1480 006a 7047     		bx	lr
 1481              	.L119:
 1482              		.align	2
 1483              	.L118:
 1484 006c 00000000 		.word	xTimerQueue
 1485              		.cfi_endproc
 1486              	.LFE8:
 1488              		.section	.text.xTimerGenericCommandFromISR,"ax",%progbits
 1489              		.align	1
 1490              		.global	xTimerGenericCommandFromISR
 1491              		.syntax unified
 1492              		.thumb
 1493              		.thumb_func
 1495              	xTimerGenericCommandFromISR:
 1496              	.LVL117:
 1497              	.LFB9:
 504:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn = pdFAIL;
 1498              		.loc 1 504 5 is_stmt 1 view -0
 1499              		.cfi_startproc
 1500              		@ args = 4, pretend = 0, frame = 16
 1501              		@ frame_needed = 0, uses_anonymous_args = 0
 505:FreeRTOS-Kernel/timers.c ****         DaemonTaskMessage_t xMessage;
 1502              		.loc 1 505 9 view .LVU400
 506:FreeRTOS-Kernel/timers.c **** 
 1503              		.loc 1 506 9 view .LVU401
 508:FreeRTOS-Kernel/timers.c **** 
 1504              		.loc 1 508 9 view .LVU402
 510:FreeRTOS-Kernel/timers.c **** 
 1505              		.loc 1 510 126 view .LVU403
ARM GAS  /tmp/ccbspmyw.s 			page 57


 512:FreeRTOS-Kernel/timers.c **** 
 1506              		.loc 1 512 9 view .LVU404
 1507 0000 A0B1     		cbz	r0, .L131
 1508 0002 9C46     		mov	ip, r3
 1509 0004 0346     		mov	r3, r0
 1510              	.LVL118:
 512:FreeRTOS-Kernel/timers.c **** 
 1511              		.loc 1 512 31 discriminator 2 view .LVU405
 516:FreeRTOS-Kernel/timers.c ****         {
 1512              		.loc 1 516 9 discriminator 2 view .LVU406
 516:FreeRTOS-Kernel/timers.c ****         {
 1513              		.loc 1 516 25 is_stmt 0 discriminator 2 view .LVU407
 1514 0006 1348     		ldr	r0, .L132
 1515              	.LVL119:
 516:FreeRTOS-Kernel/timers.c ****         {
 1516              		.loc 1 516 25 discriminator 2 view .LVU408
 1517 0008 0068     		ldr	r0, [r0]
 516:FreeRTOS-Kernel/timers.c ****         {
 1518              		.loc 1 516 11 discriminator 2 view .LVU409
 1519 000a 00B3     		cbz	r0, .L126
 504:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn = pdFAIL;
 1520              		.loc 1 504 5 view .LVU410
 1521 000c 00B5     		push	{lr}
 1522              	.LCFI33:
 1523              		.cfi_def_cfa_offset 4
 1524              		.cfi_offset 14, -4
 1525 000e 85B0     		sub	sp, sp, #20
 1526              	.LCFI34:
 1527              		.cfi_def_cfa_offset 24
 519:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 1528              		.loc 1 519 13 is_stmt 1 view .LVU411
 519:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 1529              		.loc 1 519 33 is_stmt 0 view .LVU412
 1530 0010 0191     		str	r1, [sp, #4]
 520:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 1531              		.loc 1 520 13 is_stmt 1 view .LVU413
 520:FreeRTOS-Kernel/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 1532              		.loc 1 520 55 is_stmt 0 view .LVU414
 1533 0012 0292     		str	r2, [sp, #8]
 521:FreeRTOS-Kernel/timers.c **** 
 1534              		.loc 1 521 13 is_stmt 1 view .LVU415
 521:FreeRTOS-Kernel/timers.c **** 
 1535              		.loc 1 521 49 is_stmt 0 view .LVU416
 1536 0014 0393     		str	r3, [sp, #12]
 523:FreeRTOS-Kernel/timers.c **** 
 1537              		.loc 1 523 13 is_stmt 1 view .LVU417
 1538 0016 0529     		cmp	r1, #5
 1539 0018 11DC     		bgt	.L124
 523:FreeRTOS-Kernel/timers.c **** 
 1540              		.loc 1 523 13 view .LVU418
 1541              	.LBB59:
 1542              	.LBI59:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 1543              		.loc 2 213 30 view .LVU419
 1544              	.LBB60:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1545              		.loc 2 215 5 view .LVU420
ARM GAS  /tmp/ccbspmyw.s 			page 58


 1546              		.loc 2 217 5 view .LVU421
 1547              		.syntax unified
 1548              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1549 001a 4FF05003 		   mov r3, #80                                              
 1550 001e 83F31188 	   msr basepri, r3                                         
 1551 0022 BFF36F8F 	   isb                                                     
 1552 0026 BFF34F8F 	   dsb                                                     
 1553              	
 1554              	@ 0 "" 2
 1555              	.LVL120:
 1556              		.thumb
 1557              		.syntax unified
 1558              	.L125:
 1559              		.loc 2 217 5 is_stmt 0 view .LVU422
 1560              	.LBE60:
 1561              	.LBE59:
 523:FreeRTOS-Kernel/timers.c **** 
 1562              		.loc 1 523 13 is_stmt 1 discriminator 2 view .LVU423
 523:FreeRTOS-Kernel/timers.c **** 
 1563              		.loc 1 523 13 discriminator 2 view .LVU424
 1564 002a FEE7     		b	.L125
 1565              	.LVL121:
 1566              	.L131:
 1567              	.LCFI35:
 1568              		.cfi_def_cfa_offset 0
 1569              		.cfi_restore 14
 512:FreeRTOS-Kernel/timers.c **** 
 1570              		.loc 1 512 9 view .LVU425
 1571              	.LBB61:
 1572              	.LBI61:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 1573              		.loc 2 213 30 view .LVU426
 1574              	.LBB62:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1575              		.loc 2 215 5 view .LVU427
 1576              		.loc 2 217 5 view .LVU428
 1577              		.syntax unified
 1578              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1579 002c 4FF05003 		   mov r3, #80                                              
 1580 0030 83F31188 	   msr basepri, r3                                         
 1581 0034 BFF36F8F 	   isb                                                     
 1582 0038 BFF34F8F 	   dsb                                                     
 1583              	
 1584              	@ 0 "" 2
 1585              	.LVL122:
 1586              		.thumb
 1587              		.syntax unified
 1588              	.L122:
 1589              		.loc 2 217 5 is_stmt 0 view .LVU429
 1590              	.LBE62:
 1591              	.LBE61:
 512:FreeRTOS-Kernel/timers.c **** 
 1592              		.loc 1 512 9 is_stmt 1 discriminator 1 view .LVU430
 512:FreeRTOS-Kernel/timers.c **** 
 1593              		.loc 1 512 9 discriminator 1 view .LVU431
 1594 003c FEE7     		b	.L122
 1595              	.LVL123:
ARM GAS  /tmp/ccbspmyw.s 			page 59


 1596              	.L124:
 1597              	.LCFI36:
 1598              		.cfi_def_cfa_offset 24
 1599              		.cfi_offset 14, -4
 523:FreeRTOS-Kernel/timers.c **** 
 1600              		.loc 1 523 68 view .LVU432
 525:FreeRTOS-Kernel/timers.c ****             {
 1601              		.loc 1 525 13 view .LVU433
 527:FreeRTOS-Kernel/timers.c ****             }
 1602              		.loc 1 527 17 view .LVU434
 527:FreeRTOS-Kernel/timers.c ****             }
 1603              		.loc 1 527 27 is_stmt 0 view .LVU435
 1604 003e 0023     		movs	r3, #0
 1605              	.LVL124:
 527:FreeRTOS-Kernel/timers.c ****             }
 1606              		.loc 1 527 27 view .LVU436
 1607 0040 6246     		mov	r2, ip
 1608              	.LVL125:
 527:FreeRTOS-Kernel/timers.c ****             }
 1609              		.loc 1 527 27 view .LVU437
 1610 0042 01A9     		add	r1, sp, #4
 1611              	.LVL126:
 527:FreeRTOS-Kernel/timers.c ****             }
 1612              		.loc 1 527 27 view .LVU438
 1613 0044 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1614              	.LVL127:
 540:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1615              		.loc 1 540 5 view .LVU439
 1616 0048 05B0     		add	sp, sp, #20
 1617              	.LCFI37:
 1618              		.cfi_def_cfa_offset 4
 1619              		@ sp needed
 1620 004a 5DF804FB 		ldr	pc, [sp], #4
 1621              	.LVL128:
 1622              	.L126:
 1623              	.LCFI38:
 1624              		.cfi_def_cfa_offset 0
 1625              		.cfi_restore 14
 505:FreeRTOS-Kernel/timers.c ****         DaemonTaskMessage_t xMessage;
 1626              		.loc 1 505 20 view .LVU440
 1627 004e 0020     		movs	r0, #0
 534:FreeRTOS-Kernel/timers.c ****         }
 1628              		.loc 1 534 37 is_stmt 1 view .LVU441
 537:FreeRTOS-Kernel/timers.c **** 
 1629              		.loc 1 537 59 view .LVU442
 539:FreeRTOS-Kernel/timers.c ****     }
 1630              		.loc 1 539 9 view .LVU443
 540:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1631              		.loc 1 540 5 is_stmt 0 view .LVU444
 1632 0050 7047     		bx	lr
 1633              	.L133:
 1634 0052 00BF     		.align	2
 1635              	.L132:
 1636 0054 00000000 		.word	xTimerQueue
 1637              		.cfi_endproc
 1638              	.LFE9:
 1640              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
ARM GAS  /tmp/ccbspmyw.s 			page 60


 1641              		.align	1
 1642              		.global	xTimerGetTimerDaemonTaskHandle
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1647              	xTimerGetTimerDaemonTaskHandle:
 1648              	.LFB10:
 544:FreeRTOS-Kernel/timers.c ****         traceENTER_xTimerGetTimerDaemonTaskHandle();
 1649              		.loc 1 544 5 is_stmt 1 view -0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 0
 1652              		@ frame_needed = 0, uses_anonymous_args = 0
 1653              		@ link register save eliminated.
 545:FreeRTOS-Kernel/timers.c **** 
 1654              		.loc 1 545 52 view .LVU446
 549:FreeRTOS-Kernel/timers.c **** 
 1655              		.loc 1 549 9 view .LVU447
 1656 0000 064B     		ldr	r3, .L138
 1657 0002 1868     		ldr	r0, [r3]
 1658 0004 00B1     		cbz	r0, .L137
 554:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1659              		.loc 1 554 5 is_stmt 0 view .LVU448
 1660 0006 7047     		bx	lr
 1661              	.L137:
 549:FreeRTOS-Kernel/timers.c **** 
 1662              		.loc 1 549 9 is_stmt 1 view .LVU449
 1663              	.LBB63:
 1664              	.LBI63:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 1665              		.loc 2 213 30 view .LVU450
 1666              	.LBB64:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1667              		.loc 2 215 5 view .LVU451
 1668              		.loc 2 217 5 view .LVU452
 1669              		.syntax unified
 1670              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1671 0008 4FF05003 		   mov r3, #80                                              
 1672 000c 83F31188 	   msr basepri, r3                                         
 1673 0010 BFF36F8F 	   isb                                                     
 1674 0014 BFF34F8F 	   dsb                                                     
 1675              	
 1676              	@ 0 "" 2
 1677              	.LVL129:
 1678              		.thumb
 1679              		.syntax unified
 1680              	.L136:
 1681              		.loc 2 217 5 is_stmt 0 view .LVU453
 1682              	.LBE64:
 1683              	.LBE63:
 549:FreeRTOS-Kernel/timers.c **** 
 1684              		.loc 1 549 9 is_stmt 1 discriminator 1 view .LVU454
 549:FreeRTOS-Kernel/timers.c **** 
 1685              		.loc 1 549 9 discriminator 1 view .LVU455
 1686 0018 FEE7     		b	.L136
 1687              	.L139:
 1688 001a 00BF     		.align	2
 1689              	.L138:
ARM GAS  /tmp/ccbspmyw.s 			page 61


 1690 001c 00000000 		.word	xTimerTaskHandle
 1691              		.cfi_endproc
 1692              	.LFE10:
 1694              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1695              		.align	1
 1696              		.global	xTimerGetPeriod
 1697              		.syntax unified
 1698              		.thumb
 1699              		.thumb_func
 1701              	xTimerGetPeriod:
 1702              	.LVL130:
 1703              	.LFB11:
 558:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 1704              		.loc 1 558 5 view -0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 0
 1707              		@ frame_needed = 0, uses_anonymous_args = 0
 1708              		@ link register save eliminated.
 559:FreeRTOS-Kernel/timers.c **** 
 1709              		.loc 1 559 9 view .LVU457
 561:FreeRTOS-Kernel/timers.c **** 
 1710              		.loc 1 561 45 view .LVU458
 563:FreeRTOS-Kernel/timers.c **** 
 1711              		.loc 1 563 9 view .LVU459
 1712 0000 08B1     		cbz	r0, .L143
 563:FreeRTOS-Kernel/timers.c **** 
 1713              		.loc 1 563 31 discriminator 2 view .LVU460
 565:FreeRTOS-Kernel/timers.c **** 
 1714              		.loc 1 565 68 discriminator 2 view .LVU461
 567:FreeRTOS-Kernel/timers.c ****     }
 1715              		.loc 1 567 9 discriminator 2 view .LVU462
 568:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1716              		.loc 1 568 5 is_stmt 0 discriminator 2 view .LVU463
 1717 0002 8069     		ldr	r0, [r0, #24]
 1718              	.LVL131:
 568:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1719              		.loc 1 568 5 discriminator 2 view .LVU464
 1720 0004 7047     		bx	lr
 1721              	.LVL132:
 1722              	.L143:
 563:FreeRTOS-Kernel/timers.c **** 
 1723              		.loc 1 563 9 is_stmt 1 view .LVU465
 1724              	.LBB65:
 1725              	.LBI65:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 1726              		.loc 2 213 30 view .LVU466
 1727              	.LBB66:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1728              		.loc 2 215 5 view .LVU467
 1729              		.loc 2 217 5 view .LVU468
 1730              		.syntax unified
 1731              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1732 0006 4FF05003 		   mov r3, #80                                              
 1733 000a 83F31188 	   msr basepri, r3                                         
 1734 000e BFF36F8F 	   isb                                                     
 1735 0012 BFF34F8F 	   dsb                                                     
 1736              	
ARM GAS  /tmp/ccbspmyw.s 			page 62


 1737              	@ 0 "" 2
 1738              	.LVL133:
 1739              		.thumb
 1740              		.syntax unified
 1741              	.L142:
 1742              		.loc 2 217 5 is_stmt 0 view .LVU469
 1743              	.LBE66:
 1744              	.LBE65:
 563:FreeRTOS-Kernel/timers.c **** 
 1745              		.loc 1 563 9 is_stmt 1 discriminator 1 view .LVU470
 563:FreeRTOS-Kernel/timers.c **** 
 1746              		.loc 1 563 9 discriminator 1 view .LVU471
 1747 0016 FEE7     		b	.L142
 1748              		.cfi_endproc
 1749              	.LFE11:
 1751              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 1752              		.align	1
 1753              		.global	vTimerSetReloadMode
 1754              		.syntax unified
 1755              		.thumb
 1756              		.thumb_func
 1758              	vTimerSetReloadMode:
 1759              	.LVL134:
 1760              	.LFB12:
 573:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 1761              		.loc 1 573 5 view -0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 0
 1764              		@ frame_needed = 0, uses_anonymous_args = 0
 573:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 1765              		.loc 1 573 5 is_stmt 0 view .LVU473
 1766 0000 38B5     		push	{r3, r4, r5, lr}
 1767              	.LCFI39:
 1768              		.cfi_def_cfa_offset 16
 1769              		.cfi_offset 3, -16
 1770              		.cfi_offset 4, -12
 1771              		.cfi_offset 5, -8
 1772              		.cfi_offset 14, -4
 574:FreeRTOS-Kernel/timers.c **** 
 1773              		.loc 1 574 9 is_stmt 1 view .LVU474
 1774              	.LVL135:
 576:FreeRTOS-Kernel/timers.c **** 
 1775              		.loc 1 576 62 view .LVU475
 578:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 1776              		.loc 1 578 9 view .LVU476
 1777 0002 68B1     		cbz	r0, .L150
 1778 0004 0C46     		mov	r4, r1
 1779 0006 0546     		mov	r5, r0
 578:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 1780              		.loc 1 578 31 discriminator 2 view .LVU477
 579:FreeRTOS-Kernel/timers.c ****         {
 1781              		.loc 1 579 9 discriminator 2 view .LVU478
 1782 0008 FFF7FEFF 		bl	vPortEnterCritical
 1783              	.LVL136:
 581:FreeRTOS-Kernel/timers.c ****             {
 1784              		.loc 1 581 13 discriminator 2 view .LVU479
 581:FreeRTOS-Kernel/timers.c ****             {
ARM GAS  /tmp/ccbspmyw.s 			page 63


 1785              		.loc 1 581 15 is_stmt 0 discriminator 2 view .LVU480
 1786 000c 8CB1     		cbz	r4, .L147
 583:FreeRTOS-Kernel/timers.c ****             }
 1787              		.loc 1 583 17 is_stmt 1 view .LVU481
 583:FreeRTOS-Kernel/timers.c ****             }
 1788              		.loc 1 583 24 is_stmt 0 view .LVU482
 1789 000e 95F82430 		ldrb	r3, [r5, #36]	@ zero_extendqisi2
 583:FreeRTOS-Kernel/timers.c ****             }
 1790              		.loc 1 583 35 view .LVU483
 1791 0012 43F00403 		orr	r3, r3, #4
 1792 0016 85F82430 		strb	r3, [r5, #36]
 1793              	.L148:
 590:FreeRTOS-Kernel/timers.c **** 
 1794              		.loc 1 590 9 is_stmt 1 view .LVU484
 1795 001a FFF7FEFF 		bl	vPortExitCritical
 1796              	.LVL137:
 592:FreeRTOS-Kernel/timers.c ****     }
 1797              		.loc 1 592 42 view .LVU485
 593:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1798              		.loc 1 593 5 is_stmt 0 view .LVU486
 1799 001e 38BD     		pop	{r3, r4, r5, pc}
 1800              	.LVL138:
 1801              	.L150:
 578:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 1802              		.loc 1 578 9 is_stmt 1 view .LVU487
 1803              	.LBB67:
 1804              	.LBI67:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 1805              		.loc 2 213 30 view .LVU488
 1806              	.LBB68:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1807              		.loc 2 215 5 view .LVU489
 1808              		.loc 2 217 5 view .LVU490
 1809              		.syntax unified
 1810              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1811 0020 4FF05003 		   mov r3, #80                                              
 1812 0024 83F31188 	   msr basepri, r3                                         
 1813 0028 BFF36F8F 	   isb                                                     
 1814 002c BFF34F8F 	   dsb                                                     
 1815              	
 1816              	@ 0 "" 2
 1817              	.LVL139:
 1818              		.thumb
 1819              		.syntax unified
 1820              	.L146:
 1821              		.loc 2 217 5 is_stmt 0 view .LVU491
 1822              	.LBE68:
 1823              	.LBE67:
 578:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 1824              		.loc 1 578 9 is_stmt 1 discriminator 1 view .LVU492
 578:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 1825              		.loc 1 578 9 discriminator 1 view .LVU493
 1826 0030 FEE7     		b	.L146
 1827              	.LVL140:
 1828              	.L147:
 587:FreeRTOS-Kernel/timers.c ****             }
 1829              		.loc 1 587 17 view .LVU494
ARM GAS  /tmp/ccbspmyw.s 			page 64


 587:FreeRTOS-Kernel/timers.c ****             }
 1830              		.loc 1 587 24 is_stmt 0 view .LVU495
 1831 0032 95F82430 		ldrb	r3, [r5, #36]	@ zero_extendqisi2
 587:FreeRTOS-Kernel/timers.c ****             }
 1832              		.loc 1 587 35 view .LVU496
 1833 0036 23F00403 		bic	r3, r3, #4
 1834 003a 85F82430 		strb	r3, [r5, #36]
 1835 003e ECE7     		b	.L148
 1836              		.cfi_endproc
 1837              	.LFE12:
 1839              		.section	.text.xTimerGetReloadMode,"ax",%progbits
 1840              		.align	1
 1841              		.global	xTimerGetReloadMode
 1842              		.syntax unified
 1843              		.thumb
 1844              		.thumb_func
 1846              	xTimerGetReloadMode:
 1847              	.LVL141:
 1848              	.LFB13:
 597:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 1849              		.loc 1 597 5 is_stmt 1 view -0
 1850              		.cfi_startproc
 1851              		@ args = 0, pretend = 0, frame = 0
 1852              		@ frame_needed = 0, uses_anonymous_args = 0
 598:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn;
 1853              		.loc 1 598 9 view .LVU498
 599:FreeRTOS-Kernel/timers.c **** 
 1854              		.loc 1 599 9 view .LVU499
 601:FreeRTOS-Kernel/timers.c **** 
 1855              		.loc 1 601 49 view .LVU500
 603:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 1856              		.loc 1 603 9 view .LVU501
 1857 0000 68B1     		cbz	r0, .L158
 597:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 1858              		.loc 1 597 5 is_stmt 0 discriminator 2 view .LVU502
 1859 0002 10B5     		push	{r4, lr}
 1860              	.LCFI40:
 1861              		.cfi_def_cfa_offset 8
 1862              		.cfi_offset 4, -8
 1863              		.cfi_offset 14, -4
 1864 0004 0446     		mov	r4, r0
 603:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 1865              		.loc 1 603 31 is_stmt 1 discriminator 2 view .LVU503
 604:FreeRTOS-Kernel/timers.c ****         {
 1866              		.loc 1 604 9 discriminator 2 view .LVU504
 1867 0006 FFF7FEFF 		bl	vPortEnterCritical
 1868              	.LVL142:
 606:FreeRTOS-Kernel/timers.c ****             {
 1869              		.loc 1 606 13 discriminator 2 view .LVU505
 606:FreeRTOS-Kernel/timers.c ****             {
 1870              		.loc 1 606 26 is_stmt 0 discriminator 2 view .LVU506
 1871 000a 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 606:FreeRTOS-Kernel/timers.c ****             {
 1872              		.loc 1 606 15 discriminator 2 view .LVU507
 1873 000e 13F0040F 		tst	r3, #4
 1874 0012 0DD1     		bne	.L155
 609:FreeRTOS-Kernel/timers.c ****             }
ARM GAS  /tmp/ccbspmyw.s 			page 65


 1875              		.loc 1 609 25 view .LVU508
 1876 0014 0024     		movs	r4, #0
 1877              	.LVL143:
 1878              	.L154:
 617:FreeRTOS-Kernel/timers.c **** 
 1879              		.loc 1 617 9 is_stmt 1 view .LVU509
 1880 0016 FFF7FEFF 		bl	vPortExitCritical
 1881              	.LVL144:
 619:FreeRTOS-Kernel/timers.c **** 
 1882              		.loc 1 619 51 view .LVU510
 621:FreeRTOS-Kernel/timers.c ****     }
 1883              		.loc 1 621 9 view .LVU511
 622:FreeRTOS-Kernel/timers.c **** 
 1884              		.loc 1 622 5 is_stmt 0 view .LVU512
 1885 001a 2046     		mov	r0, r4
 1886 001c 10BD     		pop	{r4, pc}
 1887              	.LVL145:
 1888              	.L158:
 1889              	.LCFI41:
 1890              		.cfi_def_cfa_offset 0
 1891              		.cfi_restore 4
 1892              		.cfi_restore 14
 603:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 1893              		.loc 1 603 9 is_stmt 1 view .LVU513
 1894              	.LBB69:
 1895              	.LBI69:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 1896              		.loc 2 213 30 view .LVU514
 1897              	.LBB70:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 1898              		.loc 2 215 5 view .LVU515
 1899              		.loc 2 217 5 view .LVU516
 1900              		.syntax unified
 1901              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 1902 001e 4FF05003 		   mov r3, #80                                              
 1903 0022 83F31188 	   msr basepri, r3                                         
 1904 0026 BFF36F8F 	   isb                                                     
 1905 002a BFF34F8F 	   dsb                                                     
 1906              	
 1907              	@ 0 "" 2
 1908              	.LVL146:
 1909              		.thumb
 1910              		.syntax unified
 1911              	.L153:
 1912              		.loc 2 217 5 is_stmt 0 view .LVU517
 1913              	.LBE70:
 1914              	.LBE69:
 603:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 1915              		.loc 1 603 9 is_stmt 1 discriminator 1 view .LVU518
 603:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 1916              		.loc 1 603 9 discriminator 1 view .LVU519
 1917 002e FEE7     		b	.L153
 1918              	.LVL147:
 1919              	.L155:
 1920              	.LCFI42:
 1921              		.cfi_def_cfa_offset 8
 1922              		.cfi_offset 4, -8
ARM GAS  /tmp/ccbspmyw.s 			page 66


 1923              		.cfi_offset 14, -4
 614:FreeRTOS-Kernel/timers.c ****             }
 1924              		.loc 1 614 25 is_stmt 0 view .LVU520
 1925 0030 0124     		movs	r4, #1
 1926              	.LVL148:
 614:FreeRTOS-Kernel/timers.c ****             }
 1927              		.loc 1 614 25 view .LVU521
 1928 0032 F0E7     		b	.L154
 1929              		.cfi_endproc
 1930              	.LFE13:
 1932              		.section	.text.uxTimerGetReloadMode,"ax",%progbits
 1933              		.align	1
 1934              		.global	uxTimerGetReloadMode
 1935              		.syntax unified
 1936              		.thumb
 1937              		.thumb_func
 1939              	uxTimerGetReloadMode:
 1940              	.LVL149:
 1941              	.LFB14:
 625:FreeRTOS-Kernel/timers.c ****         UBaseType_t uxReturn;
 1942              		.loc 1 625 5 is_stmt 1 view -0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 0
 1945              		@ frame_needed = 0, uses_anonymous_args = 0
 625:FreeRTOS-Kernel/timers.c ****         UBaseType_t uxReturn;
 1946              		.loc 1 625 5 is_stmt 0 view .LVU523
 1947 0000 08B5     		push	{r3, lr}
 1948              	.LCFI43:
 1949              		.cfi_def_cfa_offset 8
 1950              		.cfi_offset 3, -8
 1951              		.cfi_offset 14, -4
 626:FreeRTOS-Kernel/timers.c **** 
 1952              		.loc 1 626 9 is_stmt 1 view .LVU524
 628:FreeRTOS-Kernel/timers.c **** 
 1953              		.loc 1 628 50 view .LVU525
 630:FreeRTOS-Kernel/timers.c **** 
 1954              		.loc 1 630 9 view .LVU526
 630:FreeRTOS-Kernel/timers.c **** 
 1955              		.loc 1 630 36 is_stmt 0 view .LVU527
 1956 0002 FFF7FEFF 		bl	xTimerGetReloadMode
 1957              	.LVL150:
 632:FreeRTOS-Kernel/timers.c **** 
 1958              		.loc 1 632 53 is_stmt 1 view .LVU528
 634:FreeRTOS-Kernel/timers.c ****     }
 1959              		.loc 1 634 9 view .LVU529
 635:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1960              		.loc 1 635 5 is_stmt 0 view .LVU530
 1961 0006 08BD     		pop	{r3, pc}
 1962              		.cfi_endproc
 1963              	.LFE14:
 1965              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1966              		.align	1
 1967              		.global	xTimerGetExpiryTime
 1968              		.syntax unified
 1969              		.thumb
 1970              		.thumb_func
 1972              	xTimerGetExpiryTime:
ARM GAS  /tmp/ccbspmyw.s 			page 67


 1973              	.LVL151:
 1974              	.LFB15:
 639:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 1975              		.loc 1 639 5 is_stmt 1 view -0
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 0
 1978              		@ frame_needed = 0, uses_anonymous_args = 0
 1979              		@ link register save eliminated.
 640:FreeRTOS-Kernel/timers.c ****         TickType_t xReturn;
 1980              		.loc 1 640 9 view .LVU532
 641:FreeRTOS-Kernel/timers.c **** 
 1981              		.loc 1 641 9 view .LVU533
 643:FreeRTOS-Kernel/timers.c **** 
 1982              		.loc 1 643 49 view .LVU534
 645:FreeRTOS-Kernel/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1983              		.loc 1 645 9 view .LVU535
 1984 0000 08B1     		cbz	r0, .L164
 645:FreeRTOS-Kernel/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1985              		.loc 1 645 31 discriminator 2 view .LVU536
 646:FreeRTOS-Kernel/timers.c **** 
 1986              		.loc 1 646 9 discriminator 2 view .LVU537
 1987              	.LVL152:
 648:FreeRTOS-Kernel/timers.c **** 
 1988              		.loc 1 648 51 discriminator 2 view .LVU538
 650:FreeRTOS-Kernel/timers.c ****     }
 1989              		.loc 1 650 9 discriminator 2 view .LVU539
 651:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1990              		.loc 1 651 5 is_stmt 0 discriminator 2 view .LVU540
 1991 0002 4068     		ldr	r0, [r0, #4]
 1992              	.LVL153:
 651:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 1993              		.loc 1 651 5 discriminator 2 view .LVU541
 1994 0004 7047     		bx	lr
 1995              	.LVL154:
 1996              	.L164:
 645:FreeRTOS-Kernel/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1997              		.loc 1 645 9 is_stmt 1 view .LVU542
 1998              	.LBB71:
 1999              	.LBI71:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 2000              		.loc 2 213 30 view .LVU543
 2001              	.LBB72:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 2002              		.loc 2 215 5 view .LVU544
 2003              		.loc 2 217 5 view .LVU545
 2004              		.syntax unified
 2005              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 2006 0006 4FF05003 		   mov r3, #80                                              
 2007 000a 83F31188 	   msr basepri, r3                                         
 2008 000e BFF36F8F 	   isb                                                     
 2009 0012 BFF34F8F 	   dsb                                                     
 2010              	
 2011              	@ 0 "" 2
 2012              	.LVL155:
 2013              		.thumb
 2014              		.syntax unified
 2015              	.L163:
ARM GAS  /tmp/ccbspmyw.s 			page 68


 2016              		.loc 2 217 5 is_stmt 0 view .LVU546
 2017              	.LBE72:
 2018              	.LBE71:
 645:FreeRTOS-Kernel/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 2019              		.loc 1 645 9 is_stmt 1 discriminator 1 view .LVU547
 645:FreeRTOS-Kernel/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 2020              		.loc 1 645 9 discriminator 1 view .LVU548
 2021 0016 FEE7     		b	.L163
 2022              		.cfi_endproc
 2023              	.LFE15:
 2025              		.section	.text.xTimerGetStaticBuffer,"ax",%progbits
 2026              		.align	1
 2027              		.global	xTimerGetStaticBuffer
 2028              		.syntax unified
 2029              		.thumb
 2030              		.thumb_func
 2032              	xTimerGetStaticBuffer:
 2033              	.LVL156:
 2034              	.LFB16:
 657:FreeRTOS-Kernel/timers.c ****             BaseType_t xReturn;
 2035              		.loc 1 657 9 view -0
 2036              		.cfi_startproc
 2037              		@ args = 0, pretend = 0, frame = 0
 2038              		@ frame_needed = 0, uses_anonymous_args = 0
 2039              		@ link register save eliminated.
 658:FreeRTOS-Kernel/timers.c ****             Timer_t * pxTimer = xTimer;
 2040              		.loc 1 658 13 view .LVU550
 659:FreeRTOS-Kernel/timers.c **** 
 2041              		.loc 1 659 13 view .LVU551
 661:FreeRTOS-Kernel/timers.c **** 
 2042              		.loc 1 661 71 view .LVU552
 663:FreeRTOS-Kernel/timers.c **** 
 2043              		.loc 1 663 13 view .LVU553
 2044 0000 39B1     		cbz	r1, .L170
 663:FreeRTOS-Kernel/timers.c **** 
 2045              		.loc 1 663 51 discriminator 2 view .LVU554
 665:FreeRTOS-Kernel/timers.c ****             {
 2046              		.loc 1 665 13 discriminator 2 view .LVU555
 665:FreeRTOS-Kernel/timers.c ****             {
 2047              		.loc 1 665 26 is_stmt 0 discriminator 2 view .LVU556
 2048 0002 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 665:FreeRTOS-Kernel/timers.c ****             {
 2049              		.loc 1 665 15 discriminator 2 view .LVU557
 2050 0006 13F0020F 		tst	r3, #2
 2051 000a 0BD0     		beq	.L169
 670:FreeRTOS-Kernel/timers.c ****                 xReturn = pdTRUE;
 2052              		.loc 1 670 17 is_stmt 1 view .LVU558
 670:FreeRTOS-Kernel/timers.c ****                 xReturn = pdTRUE;
 2053              		.loc 1 670 33 is_stmt 0 view .LVU559
 2054 000c 0860     		str	r0, [r1]
 671:FreeRTOS-Kernel/timers.c ****             }
 2055              		.loc 1 671 17 is_stmt 1 view .LVU560
 2056              	.LVL157:
 671:FreeRTOS-Kernel/timers.c ****             }
 2057              		.loc 1 671 25 is_stmt 0 view .LVU561
 2058 000e 0120     		movs	r0, #1
 2059              	.LVL158:
ARM GAS  /tmp/ccbspmyw.s 			page 69


 671:FreeRTOS-Kernel/timers.c ****             }
 2060              		.loc 1 671 25 view .LVU562
 2061 0010 7047     		bx	lr
 2062              	.LVL159:
 2063              	.L170:
 663:FreeRTOS-Kernel/timers.c **** 
 2064              		.loc 1 663 13 is_stmt 1 view .LVU563
 2065              	.LBB73:
 2066              	.LBI73:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 2067              		.loc 2 213 30 view .LVU564
 2068              	.LBB74:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 2069              		.loc 2 215 5 view .LVU565
 2070              		.loc 2 217 5 view .LVU566
 2071              		.syntax unified
 2072              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 2073 0012 4FF05003 		   mov r3, #80                                              
 2074 0016 83F31188 	   msr basepri, r3                                         
 2075 001a BFF36F8F 	   isb                                                     
 2076 001e BFF34F8F 	   dsb                                                     
 2077              	
 2078              	@ 0 "" 2
 2079              	.LVL160:
 2080              		.thumb
 2081              		.syntax unified
 2082              	.L167:
 2083              		.loc 2 217 5 is_stmt 0 view .LVU567
 2084              	.LBE74:
 2085              	.LBE73:
 663:FreeRTOS-Kernel/timers.c **** 
 2086              		.loc 1 663 13 is_stmt 1 discriminator 1 view .LVU568
 663:FreeRTOS-Kernel/timers.c **** 
 2087              		.loc 1 663 13 discriminator 1 view .LVU569
 2088 0022 FEE7     		b	.L167
 2089              	.L169:
 675:FreeRTOS-Kernel/timers.c ****             }
 2090              		.loc 1 675 25 is_stmt 0 view .LVU570
 2091 0024 0020     		movs	r0, #0
 2092              	.LVL161:
 678:FreeRTOS-Kernel/timers.c **** 
 2093              		.loc 1 678 57 is_stmt 1 view .LVU571
 680:FreeRTOS-Kernel/timers.c ****         }
 2094              		.loc 1 680 13 view .LVU572
 681:FreeRTOS-Kernel/timers.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
 2095              		.loc 1 681 9 is_stmt 0 view .LVU573
 2096 0026 7047     		bx	lr
 2097              		.cfi_endproc
 2098              	.LFE16:
 2100              		.section	.text.pcTimerGetName,"ax",%progbits
 2101              		.align	1
 2102              		.global	pcTimerGetName
 2103              		.syntax unified
 2104              		.thumb
 2105              		.thumb_func
 2107              	pcTimerGetName:
 2108              	.LVL162:
ARM GAS  /tmp/ccbspmyw.s 			page 70


 2109              	.LFB17:
 686:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 2110              		.loc 1 686 5 is_stmt 1 view -0
 2111              		.cfi_startproc
 2112              		@ args = 0, pretend = 0, frame = 0
 2113              		@ frame_needed = 0, uses_anonymous_args = 0
 2114              		@ link register save eliminated.
 687:FreeRTOS-Kernel/timers.c **** 
 2115              		.loc 1 687 9 view .LVU575
 689:FreeRTOS-Kernel/timers.c **** 
 2116              		.loc 1 689 44 view .LVU576
 691:FreeRTOS-Kernel/timers.c **** 
 2117              		.loc 1 691 9 view .LVU577
 2118 0000 08B1     		cbz	r0, .L174
 691:FreeRTOS-Kernel/timers.c **** 
 2119              		.loc 1 691 31 discriminator 2 view .LVU578
 693:FreeRTOS-Kernel/timers.c **** 
 2120              		.loc 1 693 59 discriminator 2 view .LVU579
 695:FreeRTOS-Kernel/timers.c ****     }
 2121              		.loc 1 695 9 discriminator 2 view .LVU580
 696:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 2122              		.loc 1 696 5 is_stmt 0 discriminator 2 view .LVU581
 2123 0002 0068     		ldr	r0, [r0]
 2124              	.LVL163:
 696:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
 2125              		.loc 1 696 5 discriminator 2 view .LVU582
 2126 0004 7047     		bx	lr
 2127              	.LVL164:
 2128              	.L174:
 691:FreeRTOS-Kernel/timers.c **** 
 2129              		.loc 1 691 9 is_stmt 1 view .LVU583
 2130              	.LBB75:
 2131              	.LBI75:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 2132              		.loc 2 213 30 view .LVU584
 2133              	.LBB76:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 2134              		.loc 2 215 5 view .LVU585
 2135              		.loc 2 217 5 view .LVU586
 2136              		.syntax unified
 2137              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 2138 0006 4FF05003 		   mov r3, #80                                              
 2139 000a 83F31188 	   msr basepri, r3                                         
 2140 000e BFF36F8F 	   isb                                                     
 2141 0012 BFF34F8F 	   dsb                                                     
 2142              	
 2143              	@ 0 "" 2
 2144              	.LVL165:
 2145              		.thumb
 2146              		.syntax unified
 2147              	.L173:
 2148              		.loc 2 217 5 is_stmt 0 view .LVU587
 2149              	.LBE76:
 2150              	.LBE75:
 691:FreeRTOS-Kernel/timers.c **** 
 2151              		.loc 1 691 9 is_stmt 1 discriminator 1 view .LVU588
 691:FreeRTOS-Kernel/timers.c **** 
ARM GAS  /tmp/ccbspmyw.s 			page 71


 2152              		.loc 1 691 9 discriminator 1 view .LVU589
 2153 0016 FEE7     		b	.L173
 2154              		.cfi_endproc
 2155              	.LFE17:
 2157              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 2158              		.align	1
 2159              		.global	xTimerIsTimerActive
 2160              		.syntax unified
 2161              		.thumb
 2162              		.thumb_func
 2164              	xTimerIsTimerActive:
 2165              	.LVL166:
 2166              	.LFB28:
1160:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
1161:FreeRTOS-Kernel/timers.c **** 
1162:FreeRTOS-Kernel/timers.c ****     BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
1163:FreeRTOS-Kernel/timers.c ****     {
 2167              		.loc 1 1163 5 view -0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 0
 2170              		@ frame_needed = 0, uses_anonymous_args = 0
1164:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn;
 2171              		.loc 1 1164 9 view .LVU591
1165:FreeRTOS-Kernel/timers.c ****         Timer_t * pxTimer = xTimer;
 2172              		.loc 1 1165 9 view .LVU592
1166:FreeRTOS-Kernel/timers.c **** 
1167:FreeRTOS-Kernel/timers.c ****         traceENTER_xTimerIsTimerActive( xTimer );
 2173              		.loc 1 1167 49 view .LVU593
1168:FreeRTOS-Kernel/timers.c **** 
1169:FreeRTOS-Kernel/timers.c ****         configASSERT( xTimer );
 2174              		.loc 1 1169 9 view .LVU594
 2175 0000 68B1     		cbz	r0, .L182
1163:FreeRTOS-Kernel/timers.c ****         BaseType_t xReturn;
 2176              		.loc 1 1163 5 is_stmt 0 discriminator 2 view .LVU595
 2177 0002 10B5     		push	{r4, lr}
 2178              	.LCFI44:
 2179              		.cfi_def_cfa_offset 8
 2180              		.cfi_offset 4, -8
 2181              		.cfi_offset 14, -4
 2182 0004 0446     		mov	r4, r0
 2183              		.loc 1 1169 31 is_stmt 1 discriminator 2 view .LVU596
1170:FreeRTOS-Kernel/timers.c **** 
1171:FreeRTOS-Kernel/timers.c ****         /* Is the timer in the list of active timers? */
1172:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 2184              		.loc 1 1172 9 discriminator 2 view .LVU597
 2185 0006 FFF7FEFF 		bl	vPortEnterCritical
 2186              	.LVL167:
1173:FreeRTOS-Kernel/timers.c ****         {
1174:FreeRTOS-Kernel/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0U )
 2187              		.loc 1 1174 13 discriminator 2 view .LVU598
 2188              		.loc 1 1174 26 is_stmt 0 discriminator 2 view .LVU599
 2189 000a 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 2190              		.loc 1 1174 15 discriminator 2 view .LVU600
 2191 000e 13F0010F 		tst	r3, #1
 2192 0012 0DD1     		bne	.L179
1175:FreeRTOS-Kernel/timers.c ****             {
1176:FreeRTOS-Kernel/timers.c ****                 xReturn = pdFALSE;
ARM GAS  /tmp/ccbspmyw.s 			page 72


 2193              		.loc 1 1176 25 view .LVU601
 2194 0014 0024     		movs	r4, #0
 2195              	.LVL168:
 2196              	.L178:
1177:FreeRTOS-Kernel/timers.c ****             }
1178:FreeRTOS-Kernel/timers.c ****             else
1179:FreeRTOS-Kernel/timers.c ****             {
1180:FreeRTOS-Kernel/timers.c ****                 xReturn = pdTRUE;
1181:FreeRTOS-Kernel/timers.c ****             }
1182:FreeRTOS-Kernel/timers.c ****         }
1183:FreeRTOS-Kernel/timers.c ****         taskEXIT_CRITICAL();
 2197              		.loc 1 1183 9 is_stmt 1 view .LVU602
 2198 0016 FFF7FEFF 		bl	vPortExitCritical
 2199              	.LVL169:
1184:FreeRTOS-Kernel/timers.c **** 
1185:FreeRTOS-Kernel/timers.c ****         traceRETURN_xTimerIsTimerActive( xReturn );
 2200              		.loc 1 1185 51 view .LVU603
1186:FreeRTOS-Kernel/timers.c **** 
1187:FreeRTOS-Kernel/timers.c ****         return xReturn;
 2201              		.loc 1 1187 9 view .LVU604
1188:FreeRTOS-Kernel/timers.c ****     }
 2202              		.loc 1 1188 5 is_stmt 0 view .LVU605
 2203 001a 2046     		mov	r0, r4
 2204 001c 10BD     		pop	{r4, pc}
 2205              	.LVL170:
 2206              	.L182:
 2207              	.LCFI45:
 2208              		.cfi_def_cfa_offset 0
 2209              		.cfi_restore 4
 2210              		.cfi_restore 14
1169:FreeRTOS-Kernel/timers.c **** 
 2211              		.loc 1 1169 9 is_stmt 1 view .LVU606
 2212              	.LBB77:
 2213              	.LBI77:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 2214              		.loc 2 213 30 view .LVU607
 2215              	.LBB78:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 2216              		.loc 2 215 5 view .LVU608
 2217              		.loc 2 217 5 view .LVU609
 2218              		.syntax unified
 2219              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 2220 001e 4FF05003 		   mov r3, #80                                              
 2221 0022 83F31188 	   msr basepri, r3                                         
 2222 0026 BFF36F8F 	   isb                                                     
 2223 002a BFF34F8F 	   dsb                                                     
 2224              	
 2225              	@ 0 "" 2
 2226              	.LVL171:
 2227              		.thumb
 2228              		.syntax unified
 2229              	.L177:
 2230              		.loc 2 217 5 is_stmt 0 view .LVU610
 2231              	.LBE78:
 2232              	.LBE77:
1169:FreeRTOS-Kernel/timers.c **** 
 2233              		.loc 1 1169 9 is_stmt 1 discriminator 1 view .LVU611
ARM GAS  /tmp/ccbspmyw.s 			page 73


1169:FreeRTOS-Kernel/timers.c **** 
 2234              		.loc 1 1169 9 discriminator 1 view .LVU612
 2235 002e FEE7     		b	.L177
 2236              	.LVL172:
 2237              	.L179:
 2238              	.LCFI46:
 2239              		.cfi_def_cfa_offset 8
 2240              		.cfi_offset 4, -8
 2241              		.cfi_offset 14, -4
1180:FreeRTOS-Kernel/timers.c ****             }
 2242              		.loc 1 1180 25 is_stmt 0 view .LVU613
 2243 0030 0124     		movs	r4, #1
 2244              	.LVL173:
1180:FreeRTOS-Kernel/timers.c ****             }
 2245              		.loc 1 1180 25 view .LVU614
 2246 0032 F0E7     		b	.L178
 2247              		.cfi_endproc
 2248              	.LFE28:
 2250              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 2251              		.align	1
 2252              		.global	pvTimerGetTimerID
 2253              		.syntax unified
 2254              		.thumb
 2255              		.thumb_func
 2257              	pvTimerGetTimerID:
 2258              	.LVL174:
 2259              	.LFB29:
1189:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
1190:FreeRTOS-Kernel/timers.c **** 
1191:FreeRTOS-Kernel/timers.c ****     void * pvTimerGetTimerID( const TimerHandle_t xTimer )
1192:FreeRTOS-Kernel/timers.c ****     {
 2260              		.loc 1 1192 5 is_stmt 1 view -0
 2261              		.cfi_startproc
 2262              		@ args = 0, pretend = 0, frame = 0
 2263              		@ frame_needed = 0, uses_anonymous_args = 0
1193:FreeRTOS-Kernel/timers.c ****         Timer_t * const pxTimer = xTimer;
 2264              		.loc 1 1193 9 view .LVU616
1194:FreeRTOS-Kernel/timers.c ****         void * pvReturn;
 2265              		.loc 1 1194 9 view .LVU617
1195:FreeRTOS-Kernel/timers.c **** 
1196:FreeRTOS-Kernel/timers.c ****         traceENTER_pvTimerGetTimerID( xTimer );
 2266              		.loc 1 1196 47 view .LVU618
1197:FreeRTOS-Kernel/timers.c **** 
1198:FreeRTOS-Kernel/timers.c ****         configASSERT( xTimer );
 2267              		.loc 1 1198 9 view .LVU619
 2268 0000 40B1     		cbz	r0, .L188
1192:FreeRTOS-Kernel/timers.c ****         Timer_t * const pxTimer = xTimer;
 2269              		.loc 1 1192 5 is_stmt 0 discriminator 2 view .LVU620
 2270 0002 10B5     		push	{r4, lr}
 2271              	.LCFI47:
 2272              		.cfi_def_cfa_offset 8
 2273              		.cfi_offset 4, -8
 2274              		.cfi_offset 14, -4
 2275 0004 0446     		mov	r4, r0
 2276              		.loc 1 1198 31 is_stmt 1 discriminator 2 view .LVU621
1199:FreeRTOS-Kernel/timers.c **** 
1200:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
ARM GAS  /tmp/ccbspmyw.s 			page 74


 2277              		.loc 1 1200 9 discriminator 2 view .LVU622
 2278 0006 FFF7FEFF 		bl	vPortEnterCritical
 2279              	.LVL175:
1201:FreeRTOS-Kernel/timers.c ****         {
1202:FreeRTOS-Kernel/timers.c ****             pvReturn = pxTimer->pvTimerID;
 2280              		.loc 1 1202 13 discriminator 2 view .LVU623
 2281              		.loc 1 1202 22 is_stmt 0 discriminator 2 view .LVU624
 2282 000a E469     		ldr	r4, [r4, #28]
 2283              	.LVL176:
1203:FreeRTOS-Kernel/timers.c ****         }
1204:FreeRTOS-Kernel/timers.c ****         taskEXIT_CRITICAL();
 2284              		.loc 1 1204 9 is_stmt 1 discriminator 2 view .LVU625
 2285 000c FFF7FEFF 		bl	vPortExitCritical
 2286              	.LVL177:
1205:FreeRTOS-Kernel/timers.c **** 
1206:FreeRTOS-Kernel/timers.c ****         traceRETURN_pvTimerGetTimerID( pvReturn );
 2287              		.loc 1 1206 50 discriminator 2 view .LVU626
1207:FreeRTOS-Kernel/timers.c **** 
1208:FreeRTOS-Kernel/timers.c ****         return pvReturn;
 2288              		.loc 1 1208 9 discriminator 2 view .LVU627
1209:FreeRTOS-Kernel/timers.c ****     }
 2289              		.loc 1 1209 5 is_stmt 0 discriminator 2 view .LVU628
 2290 0010 2046     		mov	r0, r4
 2291 0012 10BD     		pop	{r4, pc}
 2292              	.LVL178:
 2293              	.L188:
 2294              	.LCFI48:
 2295              		.cfi_def_cfa_offset 0
 2296              		.cfi_restore 4
 2297              		.cfi_restore 14
1198:FreeRTOS-Kernel/timers.c **** 
 2298              		.loc 1 1198 9 is_stmt 1 view .LVU629
 2299              	.LBB79:
 2300              	.LBI79:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 2301              		.loc 2 213 30 view .LVU630
 2302              	.LBB80:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 2303              		.loc 2 215 5 view .LVU631
 2304              		.loc 2 217 5 view .LVU632
 2305              		.syntax unified
 2306              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 2307 0014 4FF05003 		   mov r3, #80                                              
 2308 0018 83F31188 	   msr basepri, r3                                         
 2309 001c BFF36F8F 	   isb                                                     
 2310 0020 BFF34F8F 	   dsb                                                     
 2311              	
 2312              	@ 0 "" 2
 2313              	.LVL179:
 2314              		.thumb
 2315              		.syntax unified
 2316              	.L185:
 2317              		.loc 2 217 5 is_stmt 0 view .LVU633
 2318              	.LBE80:
 2319              	.LBE79:
1198:FreeRTOS-Kernel/timers.c **** 
 2320              		.loc 1 1198 9 is_stmt 1 discriminator 1 view .LVU634
ARM GAS  /tmp/ccbspmyw.s 			page 75


1198:FreeRTOS-Kernel/timers.c **** 
 2321              		.loc 1 1198 9 discriminator 1 view .LVU635
 2322 0024 FEE7     		b	.L185
 2323              		.cfi_endproc
 2324              	.LFE29:
 2326              		.section	.text.vTimerSetTimerID,"ax",%progbits
 2327              		.align	1
 2328              		.global	vTimerSetTimerID
 2329              		.syntax unified
 2330              		.thumb
 2331              		.thumb_func
 2333              	vTimerSetTimerID:
 2334              	.LVL180:
 2335              	.LFB30:
1210:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
1211:FreeRTOS-Kernel/timers.c **** 
1212:FreeRTOS-Kernel/timers.c ****     void vTimerSetTimerID( TimerHandle_t xTimer,
1213:FreeRTOS-Kernel/timers.c ****                            void * pvNewID )
1214:FreeRTOS-Kernel/timers.c ****     {
 2336              		.loc 1 1214 5 view -0
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 0, uses_anonymous_args = 0
 2340              		.loc 1 1214 5 is_stmt 0 view .LVU637
 2341 0000 38B5     		push	{r3, r4, r5, lr}
 2342              	.LCFI49:
 2343              		.cfi_def_cfa_offset 16
 2344              		.cfi_offset 3, -16
 2345              		.cfi_offset 4, -12
 2346              		.cfi_offset 5, -8
 2347              		.cfi_offset 14, -4
1215:FreeRTOS-Kernel/timers.c ****         Timer_t * const pxTimer = xTimer;
 2348              		.loc 1 1215 9 is_stmt 1 view .LVU638
 2349              	.LVL181:
1216:FreeRTOS-Kernel/timers.c **** 
1217:FreeRTOS-Kernel/timers.c ****         traceENTER_vTimerSetTimerID( xTimer, pvNewID );
 2350              		.loc 1 1217 55 view .LVU639
1218:FreeRTOS-Kernel/timers.c **** 
1219:FreeRTOS-Kernel/timers.c ****         configASSERT( xTimer );
 2351              		.loc 1 1219 9 view .LVU640
 2352 0002 38B1     		cbz	r0, .L193
 2353 0004 0C46     		mov	r4, r1
 2354 0006 0546     		mov	r5, r0
 2355              		.loc 1 1219 31 discriminator 2 view .LVU641
1220:FreeRTOS-Kernel/timers.c **** 
1221:FreeRTOS-Kernel/timers.c ****         taskENTER_CRITICAL();
 2356              		.loc 1 1221 9 discriminator 2 view .LVU642
 2357 0008 FFF7FEFF 		bl	vPortEnterCritical
 2358              	.LVL182:
1222:FreeRTOS-Kernel/timers.c ****         {
1223:FreeRTOS-Kernel/timers.c ****             pxTimer->pvTimerID = pvNewID;
 2359              		.loc 1 1223 13 discriminator 2 view .LVU643
 2360              		.loc 1 1223 32 is_stmt 0 discriminator 2 view .LVU644
 2361 000c EC61     		str	r4, [r5, #28]
1224:FreeRTOS-Kernel/timers.c ****         }
1225:FreeRTOS-Kernel/timers.c ****         taskEXIT_CRITICAL();
 2362              		.loc 1 1225 9 is_stmt 1 discriminator 2 view .LVU645
ARM GAS  /tmp/ccbspmyw.s 			page 76


 2363 000e FFF7FEFF 		bl	vPortExitCritical
 2364              	.LVL183:
1226:FreeRTOS-Kernel/timers.c **** 
1227:FreeRTOS-Kernel/timers.c ****         traceRETURN_vTimerSetTimerID();
 2365              		.loc 1 1227 39 discriminator 2 view .LVU646
1228:FreeRTOS-Kernel/timers.c ****     }
 2366              		.loc 1 1228 5 is_stmt 0 discriminator 2 view .LVU647
 2367 0012 38BD     		pop	{r3, r4, r5, pc}
 2368              	.LVL184:
 2369              	.L193:
1219:FreeRTOS-Kernel/timers.c **** 
 2370              		.loc 1 1219 9 is_stmt 1 view .LVU648
 2371              	.LBB81:
 2372              	.LBI81:
 213:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** {
 2373              		.loc 2 213 30 view .LVU649
 2374              	.LBB82:
 215:FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h **** 
 2375              		.loc 2 215 5 view .LVU650
 2376              		.loc 2 217 5 view .LVU651
 2377              		.syntax unified
 2378              	@ 217 "FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h" 1
 2379 0014 4FF05003 		   mov r3, #80                                              
 2380 0018 83F31188 	   msr basepri, r3                                         
 2381 001c BFF36F8F 	   isb                                                     
 2382 0020 BFF34F8F 	   dsb                                                     
 2383              	
 2384              	@ 0 "" 2
 2385              	.LVL185:
 2386              		.thumb
 2387              		.syntax unified
 2388              	.L191:
 2389              		.loc 2 217 5 is_stmt 0 view .LVU652
 2390              	.LBE82:
 2391              	.LBE81:
1219:FreeRTOS-Kernel/timers.c **** 
 2392              		.loc 1 1219 9 is_stmt 1 discriminator 1 view .LVU653
1219:FreeRTOS-Kernel/timers.c **** 
 2393              		.loc 1 1219 9 discriminator 1 view .LVU654
 2394 0024 FEE7     		b	.L191
 2395              		.cfi_endproc
 2396              	.LFE30:
 2398              		.section	.text.vTimerResetState,"ax",%progbits
 2399              		.align	1
 2400              		.global	vTimerResetState
 2401              		.syntax unified
 2402              		.thumb
 2403              		.thumb_func
 2405              	vTimerResetState:
 2406              	.LFB31:
1229:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
1230:FreeRTOS-Kernel/timers.c **** 
1231:FreeRTOS-Kernel/timers.c ****     #if ( INCLUDE_xTimerPendFunctionCall == 1 )
1232:FreeRTOS-Kernel/timers.c **** 
1233:FreeRTOS-Kernel/timers.c ****         BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend,
1234:FreeRTOS-Kernel/timers.c ****                                                   void * pvParameter1,
1235:FreeRTOS-Kernel/timers.c ****                                                   uint32_t ulParameter2,
ARM GAS  /tmp/ccbspmyw.s 			page 77


1236:FreeRTOS-Kernel/timers.c ****                                                   BaseType_t * pxHigherPriorityTaskWoken )
1237:FreeRTOS-Kernel/timers.c ****         {
1238:FreeRTOS-Kernel/timers.c ****             DaemonTaskMessage_t xMessage;
1239:FreeRTOS-Kernel/timers.c ****             BaseType_t xReturn;
1240:FreeRTOS-Kernel/timers.c **** 
1241:FreeRTOS-Kernel/timers.c ****             traceENTER_xTimerPendFunctionCallFromISR( xFunctionToPend, pvParameter1, ulParameter2, 
1242:FreeRTOS-Kernel/timers.c **** 
1243:FreeRTOS-Kernel/timers.c ****             /* Complete the message with the function parameters and post it to the
1244:FreeRTOS-Kernel/timers.c ****              * daemon task. */
1245:FreeRTOS-Kernel/timers.c ****             xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
1246:FreeRTOS-Kernel/timers.c ****             xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1247:FreeRTOS-Kernel/timers.c ****             xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1248:FreeRTOS-Kernel/timers.c ****             xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1249:FreeRTOS-Kernel/timers.c **** 
1250:FreeRTOS-Kernel/timers.c ****             xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
1251:FreeRTOS-Kernel/timers.c **** 
1252:FreeRTOS-Kernel/timers.c ****             tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1253:FreeRTOS-Kernel/timers.c ****             traceRETURN_xTimerPendFunctionCallFromISR( xReturn );
1254:FreeRTOS-Kernel/timers.c **** 
1255:FreeRTOS-Kernel/timers.c ****             return xReturn;
1256:FreeRTOS-Kernel/timers.c ****         }
1257:FreeRTOS-Kernel/timers.c **** 
1258:FreeRTOS-Kernel/timers.c ****     #endif /* INCLUDE_xTimerPendFunctionCall */
1259:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
1260:FreeRTOS-Kernel/timers.c **** 
1261:FreeRTOS-Kernel/timers.c ****     #if ( INCLUDE_xTimerPendFunctionCall == 1 )
1262:FreeRTOS-Kernel/timers.c **** 
1263:FreeRTOS-Kernel/timers.c ****         BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend,
1264:FreeRTOS-Kernel/timers.c ****                                            void * pvParameter1,
1265:FreeRTOS-Kernel/timers.c ****                                            uint32_t ulParameter2,
1266:FreeRTOS-Kernel/timers.c ****                                            TickType_t xTicksToWait )
1267:FreeRTOS-Kernel/timers.c ****         {
1268:FreeRTOS-Kernel/timers.c ****             DaemonTaskMessage_t xMessage;
1269:FreeRTOS-Kernel/timers.c ****             BaseType_t xReturn;
1270:FreeRTOS-Kernel/timers.c **** 
1271:FreeRTOS-Kernel/timers.c ****             traceENTER_xTimerPendFunctionCall( xFunctionToPend, pvParameter1, ulParameter2, xTicksT
1272:FreeRTOS-Kernel/timers.c **** 
1273:FreeRTOS-Kernel/timers.c ****             /* This function can only be called after a timer has been created or
1274:FreeRTOS-Kernel/timers.c ****              * after the scheduler has been started because, until then, the timer
1275:FreeRTOS-Kernel/timers.c ****              * queue does not exist. */
1276:FreeRTOS-Kernel/timers.c ****             configASSERT( xTimerQueue );
1277:FreeRTOS-Kernel/timers.c **** 
1278:FreeRTOS-Kernel/timers.c ****             /* Complete the message with the function parameters and post it to the
1279:FreeRTOS-Kernel/timers.c ****              * daemon task. */
1280:FreeRTOS-Kernel/timers.c ****             xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
1281:FreeRTOS-Kernel/timers.c ****             xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1282:FreeRTOS-Kernel/timers.c ****             xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1283:FreeRTOS-Kernel/timers.c ****             xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1284:FreeRTOS-Kernel/timers.c **** 
1285:FreeRTOS-Kernel/timers.c ****             xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
1286:FreeRTOS-Kernel/timers.c **** 
1287:FreeRTOS-Kernel/timers.c ****             tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1288:FreeRTOS-Kernel/timers.c ****             traceRETURN_xTimerPendFunctionCall( xReturn );
1289:FreeRTOS-Kernel/timers.c **** 
1290:FreeRTOS-Kernel/timers.c ****             return xReturn;
1291:FreeRTOS-Kernel/timers.c ****         }
1292:FreeRTOS-Kernel/timers.c **** 
ARM GAS  /tmp/ccbspmyw.s 			page 78


1293:FreeRTOS-Kernel/timers.c ****     #endif /* INCLUDE_xTimerPendFunctionCall */
1294:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
1295:FreeRTOS-Kernel/timers.c **** 
1296:FreeRTOS-Kernel/timers.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
1297:FreeRTOS-Kernel/timers.c **** 
1298:FreeRTOS-Kernel/timers.c ****         UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1299:FreeRTOS-Kernel/timers.c ****         {
1300:FreeRTOS-Kernel/timers.c ****             traceENTER_uxTimerGetTimerNumber( xTimer );
1301:FreeRTOS-Kernel/timers.c **** 
1302:FreeRTOS-Kernel/timers.c ****             traceRETURN_uxTimerGetTimerNumber( ( ( Timer_t * ) xTimer )->uxTimerNumber );
1303:FreeRTOS-Kernel/timers.c **** 
1304:FreeRTOS-Kernel/timers.c ****             return ( ( Timer_t * ) xTimer )->uxTimerNumber;
1305:FreeRTOS-Kernel/timers.c ****         }
1306:FreeRTOS-Kernel/timers.c **** 
1307:FreeRTOS-Kernel/timers.c ****     #endif /* configUSE_TRACE_FACILITY */
1308:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
1309:FreeRTOS-Kernel/timers.c **** 
1310:FreeRTOS-Kernel/timers.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
1311:FreeRTOS-Kernel/timers.c **** 
1312:FreeRTOS-Kernel/timers.c ****         void vTimerSetTimerNumber( TimerHandle_t xTimer,
1313:FreeRTOS-Kernel/timers.c ****                                    UBaseType_t uxTimerNumber )
1314:FreeRTOS-Kernel/timers.c ****         {
1315:FreeRTOS-Kernel/timers.c ****             traceENTER_vTimerSetTimerNumber( xTimer, uxTimerNumber );
1316:FreeRTOS-Kernel/timers.c **** 
1317:FreeRTOS-Kernel/timers.c ****             ( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
1318:FreeRTOS-Kernel/timers.c **** 
1319:FreeRTOS-Kernel/timers.c ****             traceRETURN_vTimerSetTimerNumber();
1320:FreeRTOS-Kernel/timers.c ****         }
1321:FreeRTOS-Kernel/timers.c **** 
1322:FreeRTOS-Kernel/timers.c ****     #endif /* configUSE_TRACE_FACILITY */
1323:FreeRTOS-Kernel/timers.c **** /*-----------------------------------------------------------*/
1324:FreeRTOS-Kernel/timers.c **** 
1325:FreeRTOS-Kernel/timers.c **** /*
1326:FreeRTOS-Kernel/timers.c ****  * Reset the state in this file. This state is normally initialized at start up.
1327:FreeRTOS-Kernel/timers.c ****  * This function must be called by the application before restarting the
1328:FreeRTOS-Kernel/timers.c ****  * scheduler.
1329:FreeRTOS-Kernel/timers.c ****  */
1330:FreeRTOS-Kernel/timers.c ****     void vTimerResetState( void )
1331:FreeRTOS-Kernel/timers.c ****     {
 2407              		.loc 1 1331 5 view -0
 2408              		.cfi_startproc
 2409              		@ args = 0, pretend = 0, frame = 0
 2410              		@ frame_needed = 0, uses_anonymous_args = 0
 2411              		@ link register save eliminated.
1332:FreeRTOS-Kernel/timers.c ****         xTimerQueue = NULL;
 2412              		.loc 1 1332 9 view .LVU656
 2413              		.loc 1 1332 21 is_stmt 0 view .LVU657
 2414 0000 0023     		movs	r3, #0
 2415 0002 024A     		ldr	r2, .L195
 2416 0004 1360     		str	r3, [r2]
1333:FreeRTOS-Kernel/timers.c ****         xTimerTaskHandle = NULL;
 2417              		.loc 1 1333 9 is_stmt 1 view .LVU658
 2418              		.loc 1 1333 26 is_stmt 0 view .LVU659
 2419 0006 024A     		ldr	r2, .L195+4
 2420 0008 1360     		str	r3, [r2]
1334:FreeRTOS-Kernel/timers.c ****     }
 2421              		.loc 1 1334 5 view .LVU660
ARM GAS  /tmp/ccbspmyw.s 			page 79


 2422 000a 7047     		bx	lr
 2423              	.L196:
 2424              		.align	2
 2425              	.L195:
 2426 000c 00000000 		.word	xTimerQueue
 2427 0010 00000000 		.word	xTimerTaskHandle
 2428              		.cfi_endproc
 2429              	.LFE31:
 2431              		.section	.bss.xStaticTimerQueue.0,"aw",%nobits
 2432              		.align	2
 2435              	xStaticTimerQueue.0:
 2436 0000 00000000 		.space	72
 2436      00000000 
 2436      00000000 
 2436      00000000 
 2436      00000000 
 2437              		.section	.bss.ucStaticTimerQueueStorage.1,"aw",%nobits
 2438              		.align	2
 2441              	ucStaticTimerQueueStorage.1:
 2442 0000 00000000 		.space	120
 2442      00000000 
 2442      00000000 
 2442      00000000 
 2442      00000000 
 2443              		.section	.bss.xLastTime.2,"aw",%nobits
 2444              		.align	2
 2447              	xLastTime.2:
 2448 0000 00000000 		.space	4
 2449              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 2450              		.align	2
 2453              	xTimerTaskHandle:
 2454 0000 00000000 		.space	4
 2455              		.section	.bss.xTimerQueue,"aw",%nobits
 2456              		.align	2
 2459              	xTimerQueue:
 2460 0000 00000000 		.space	4
 2461              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 2462              		.align	2
 2465              	pxOverflowTimerList:
 2466 0000 00000000 		.space	4
 2467              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 2468              		.align	2
 2471              	pxCurrentTimerList:
 2472 0000 00000000 		.space	4
 2473              		.section	.bss.xActiveTimerList2,"aw",%nobits
 2474              		.align	2
 2477              	xActiveTimerList2:
 2478 0000 00000000 		.space	20
 2478      00000000 
 2478      00000000 
 2478      00000000 
 2478      00000000 
 2479              		.section	.bss.xActiveTimerList1,"aw",%nobits
 2480              		.align	2
 2483              	xActiveTimerList1:
 2484 0000 00000000 		.space	20
 2484      00000000 
ARM GAS  /tmp/ccbspmyw.s 			page 80


 2484      00000000 
 2484      00000000 
 2484      00000000 
 2485              		.text
 2486              	.Letext0:
 2487              		.file 3 "/usr/share/arm-gnu-toolchain/lib/gcc/arm-none-eabi/12.2.1/include/stddef.h"
 2488              		.file 4 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/machine/_default_types.h"
 2489              		.file 5 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/sys/_stdint.h"
 2490              		.file 6 "FreeRTOS-Kernel/include/projdefs.h"
 2491              		.file 7 "FreeRTOS-Kernel/include/FreeRTOS.h"
 2492              		.file 8 "FreeRTOS-Kernel/include/list.h"
 2493              		.file 9 "FreeRTOS-Kernel/include/task.h"
 2494              		.file 10 "FreeRTOS-Kernel/include/queue.h"
 2495              		.file 11 "FreeRTOS-Kernel/include/timers.h"
ARM GAS  /tmp/ccbspmyw.s 			page 81


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/ccbspmyw.s:21     .text.prvGetNextExpireTime:0000000000000000 $t
     /tmp/ccbspmyw.s:26     .text.prvGetNextExpireTime:0000000000000000 prvGetNextExpireTime
     /tmp/ccbspmyw.s:71     .text.prvGetNextExpireTime:000000000000001c $d
     /tmp/ccbspmyw.s:2471   .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
     /tmp/ccbspmyw.s:76     .text.prvInsertTimerInActiveList:0000000000000000 $t
     /tmp/ccbspmyw.s:81     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
     /tmp/ccbspmyw.s:171    .text.prvInsertTimerInActiveList:0000000000000040 $d
     /tmp/ccbspmyw.s:2465   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
     /tmp/ccbspmyw.s:177    .text.prvReloadTimer:0000000000000000 $t
     /tmp/ccbspmyw.s:182    .text.prvReloadTimer:0000000000000000 prvReloadTimer
     /tmp/ccbspmyw.s:240    .text.prvProcessExpiredTimer:0000000000000000 $t
     /tmp/ccbspmyw.s:245    .text.prvProcessExpiredTimer:0000000000000000 prvProcessExpiredTimer
     /tmp/ccbspmyw.s:310    .text.prvProcessExpiredTimer:000000000000003c $d
     /tmp/ccbspmyw.s:315    .text.prvSwitchTimerLists:0000000000000000 $t
     /tmp/ccbspmyw.s:320    .text.prvSwitchTimerLists:0000000000000000 prvSwitchTimerLists
     /tmp/ccbspmyw.s:373    .text.prvSwitchTimerLists:0000000000000028 $d
     /tmp/ccbspmyw.s:379    .text.prvSampleTimeNow:0000000000000000 $t
     /tmp/ccbspmyw.s:384    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
     /tmp/ccbspmyw.s:443    .text.prvSampleTimeNow:0000000000000028 $d
     /tmp/ccbspmyw.s:2447   .bss.xLastTime.2:0000000000000000 xLastTime.2
     /tmp/ccbspmyw.s:448    .text.prvProcessTimerOrBlockTask:0000000000000000 $t
     /tmp/ccbspmyw.s:453    .text.prvProcessTimerOrBlockTask:0000000000000000 prvProcessTimerOrBlockTask
     /tmp/ccbspmyw.s:578    .text.prvProcessTimerOrBlockTask:000000000000006c $d
     /tmp/ccbspmyw.s:2459   .bss.xTimerQueue:0000000000000000 xTimerQueue
     /tmp/ccbspmyw.s:584    .text.prvProcessReceivedCommands:0000000000000000 $t
     /tmp/ccbspmyw.s:589    .text.prvProcessReceivedCommands:0000000000000000 prvProcessReceivedCommands
     /tmp/ccbspmyw.s:665    .text.prvProcessReceivedCommands:0000000000000042 $d
     /tmp/ccbspmyw.s:815    .text.prvProcessReceivedCommands:00000000000000e8 $d
     /tmp/ccbspmyw.s:820    .text.prvTimerTask:0000000000000000 $t
     /tmp/ccbspmyw.s:825    .text.prvTimerTask:0000000000000000 prvTimerTask
     /tmp/ccbspmyw.s:864    .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
     /tmp/ccbspmyw.s:868    .text.prvCheckForValidListAndQueue:0000000000000000 $t
     /tmp/ccbspmyw.s:873    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
     /tmp/ccbspmyw.s:959    .text.prvCheckForValidListAndQueue:0000000000000050 $d
     /tmp/ccbspmyw.s:2483   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
     /tmp/ccbspmyw.s:2477   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
     /tmp/ccbspmyw.s:2435   .bss.xStaticTimerQueue.0:0000000000000000 xStaticTimerQueue.0
     /tmp/ccbspmyw.s:2441   .bss.ucStaticTimerQueueStorage.1:0000000000000000 ucStaticTimerQueueStorage.1
     /tmp/ccbspmyw.s:971    .text.prvInitialiseNewTimer:0000000000000000 $t
     /tmp/ccbspmyw.s:976    .text.prvInitialiseNewTimer:0000000000000000 prvInitialiseNewTimer
     /tmp/ccbspmyw.s:1067   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d
     /tmp/ccbspmyw.s:1071   .text.xTimerCreateTimerTask:0000000000000000 $t
     /tmp/ccbspmyw.s:1077   .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
     /tmp/ccbspmyw.s:1179   .text.xTimerCreateTimerTask:0000000000000054 $d
     /tmp/ccbspmyw.s:2453   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
     /tmp/ccbspmyw.s:1187   .text.xTimerCreateStatic:0000000000000000 $t
     /tmp/ccbspmyw.s:1193   .text.xTimerCreateStatic:0000000000000000 xTimerCreateStatic
     /tmp/ccbspmyw.s:1318   .text.xTimerGenericCommandFromTask:0000000000000000 $t
     /tmp/ccbspmyw.s:1324   .text.xTimerGenericCommandFromTask:0000000000000000 xTimerGenericCommandFromTask
     /tmp/ccbspmyw.s:1484   .text.xTimerGenericCommandFromTask:000000000000006c $d
     /tmp/ccbspmyw.s:1489   .text.xTimerGenericCommandFromISR:0000000000000000 $t
     /tmp/ccbspmyw.s:1495   .text.xTimerGenericCommandFromISR:0000000000000000 xTimerGenericCommandFromISR
     /tmp/ccbspmyw.s:1636   .text.xTimerGenericCommandFromISR:0000000000000054 $d
     /tmp/ccbspmyw.s:1641   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
     /tmp/ccbspmyw.s:1647   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
ARM GAS  /tmp/ccbspmyw.s 			page 82


     /tmp/ccbspmyw.s:1690   .text.xTimerGetTimerDaemonTaskHandle:000000000000001c $d
     /tmp/ccbspmyw.s:1695   .text.xTimerGetPeriod:0000000000000000 $t
     /tmp/ccbspmyw.s:1701   .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
     /tmp/ccbspmyw.s:1752   .text.vTimerSetReloadMode:0000000000000000 $t
     /tmp/ccbspmyw.s:1758   .text.vTimerSetReloadMode:0000000000000000 vTimerSetReloadMode
     /tmp/ccbspmyw.s:1840   .text.xTimerGetReloadMode:0000000000000000 $t
     /tmp/ccbspmyw.s:1846   .text.xTimerGetReloadMode:0000000000000000 xTimerGetReloadMode
     /tmp/ccbspmyw.s:1933   .text.uxTimerGetReloadMode:0000000000000000 $t
     /tmp/ccbspmyw.s:1939   .text.uxTimerGetReloadMode:0000000000000000 uxTimerGetReloadMode
     /tmp/ccbspmyw.s:1966   .text.xTimerGetExpiryTime:0000000000000000 $t
     /tmp/ccbspmyw.s:1972   .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
     /tmp/ccbspmyw.s:2026   .text.xTimerGetStaticBuffer:0000000000000000 $t
     /tmp/ccbspmyw.s:2032   .text.xTimerGetStaticBuffer:0000000000000000 xTimerGetStaticBuffer
     /tmp/ccbspmyw.s:2101   .text.pcTimerGetName:0000000000000000 $t
     /tmp/ccbspmyw.s:2107   .text.pcTimerGetName:0000000000000000 pcTimerGetName
     /tmp/ccbspmyw.s:2158   .text.xTimerIsTimerActive:0000000000000000 $t
     /tmp/ccbspmyw.s:2164   .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
     /tmp/ccbspmyw.s:2251   .text.pvTimerGetTimerID:0000000000000000 $t
     /tmp/ccbspmyw.s:2257   .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
     /tmp/ccbspmyw.s:2327   .text.vTimerSetTimerID:0000000000000000 $t
     /tmp/ccbspmyw.s:2333   .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
     /tmp/ccbspmyw.s:2399   .text.vTimerResetState:0000000000000000 $t
     /tmp/ccbspmyw.s:2405   .text.vTimerResetState:0000000000000000 vTimerResetState
     /tmp/ccbspmyw.s:2426   .text.vTimerResetState:000000000000000c $d
     /tmp/ccbspmyw.s:2432   .bss.xStaticTimerQueue.0:0000000000000000 $d
     /tmp/ccbspmyw.s:2438   .bss.ucStaticTimerQueueStorage.1:0000000000000000 $d
     /tmp/ccbspmyw.s:2444   .bss.xLastTime.2:0000000000000000 $d
     /tmp/ccbspmyw.s:2450   .bss.xTimerTaskHandle:0000000000000000 $d
     /tmp/ccbspmyw.s:2456   .bss.xTimerQueue:0000000000000000 $d
     /tmp/ccbspmyw.s:2462   .bss.pxOverflowTimerList:0000000000000000 $d
     /tmp/ccbspmyw.s:2468   .bss.pxCurrentTimerList:0000000000000000 $d
     /tmp/ccbspmyw.s:2474   .bss.xActiveTimerList2:0000000000000000 $d
     /tmp/ccbspmyw.s:2480   .bss.xActiveTimerList1:0000000000000000 $d
     /tmp/ccbspmyw.s:674    .text.prvProcessReceivedCommands:000000000000004b $d
     /tmp/ccbspmyw.s:674    .text.prvProcessReceivedCommands:000000000000004c $t

UNDEFINED SYMBOLS
vListInsert
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
