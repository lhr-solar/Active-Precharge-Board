ARM GAS  /tmp/ccKFAqlt.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_timebase_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c"
  20              		.section	.text.HAL_InitTick,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_InitTick
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_InitTick:
  28              	.LVL0:
  29              	.LFB288:
   1:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** #include "stm32l4xx_hal.h"
   2:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
   3:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** TIM_HandleTypeDef htim1;
   4:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
   5:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** /**
   6:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM1 as a time base source.
   7:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
   8:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
   9:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  10:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  11:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  12:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @retval HAL status
  13:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   */
  14:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  15:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** {
  30              		.loc 1 15 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 32
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 15 1 is_stmt 0 view .LVU1
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 89B0     		sub	sp, sp, #36
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 48
ARM GAS  /tmp/ccKFAqlt.s 			page 2


  44 0004 0446     		mov	r4, r0
  16:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  45              		.loc 1 16 3 is_stmt 1 view .LVU2
  17:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   uint32_t              uwTimclock;
  46              		.loc 1 17 3 view .LVU3
  18:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
  19:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue;
  47              		.loc 1 19 3 view .LVU4
  20:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  48              		.loc 1 20 3 view .LVU5
  21:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   HAL_StatusTypeDef     status = HAL_OK;
  49              		.loc 1 21 3 view .LVU6
  50              	.LVL1:
  22:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
  23:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   /* Enable TIM1 clock */
  24:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   __HAL_RCC_TIM1_CLK_ENABLE();
  51              		.loc 1 24 3 view .LVU7
  52              	.LBB2:
  53              		.loc 1 24 3 view .LVU8
  54              		.loc 1 24 3 view .LVU9
  55 0006 1E4B     		ldr	r3, .L7
  56 0008 1A6E     		ldr	r2, [r3, #96]
  57 000a 42F40062 		orr	r2, r2, #2048
  58 000e 1A66     		str	r2, [r3, #96]
  59              		.loc 1 24 3 view .LVU10
  60 0010 1B6E     		ldr	r3, [r3, #96]
  61 0012 03F40063 		and	r3, r3, #2048
  62 0016 0193     		str	r3, [sp, #4]
  63              		.loc 1 24 3 view .LVU11
  64 0018 019B     		ldr	r3, [sp, #4]
  65              	.LBE2:
  66              		.loc 1 24 3 view .LVU12
  25:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   /* Get clock configuration */
  26:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  67              		.loc 1 26 3 view .LVU13
  68 001a 02A9     		add	r1, sp, #8
  69 001c 03A8     		add	r0, sp, #12
  70              	.LVL2:
  71              		.loc 1 26 3 is_stmt 0 view .LVU14
  72 001e FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  73              	.LVL3:
  27:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   /* Compute TIM1 clock */
  28:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       uwTimclock = HAL_RCC_GetPCLK2Freq();
  74              		.loc 1 28 7 is_stmt 1 view .LVU15
  75              		.loc 1 28 20 is_stmt 0 view .LVU16
  76 0022 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
  77              	.LVL4:
  29:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
  30:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  31:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  78              		.loc 1 31 3 is_stmt 1 view .LVU17
  79              		.loc 1 31 46 is_stmt 0 view .LVU18
  80 0026 174A     		ldr	r2, .L7+4
  81 0028 A2FB0023 		umull	r2, r3, r2, r0
  82              	.LVL5:
  83              		.loc 1 31 46 view .LVU19
  84 002c 9B0C     		lsrs	r3, r3, #18
ARM GAS  /tmp/ccKFAqlt.s 			page 3


  85              		.loc 1 31 20 view .LVU20
  86 002e 013B     		subs	r3, r3, #1
  87              	.LVL6:
  32:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
  33:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   /* Initialize TIM1 */
  34:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   htim1.Instance = TIM1;
  88              		.loc 1 34 3 is_stmt 1 view .LVU21
  89              		.loc 1 34 18 is_stmt 0 view .LVU22
  90 0030 1548     		ldr	r0, .L7+8
  91 0032 164A     		ldr	r2, .L7+12
  92 0034 0260     		str	r2, [r0]
  35:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
  36:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  37:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
  38:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
  39:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  40:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   + ClockDivision = 0
  41:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   + Counter direction = Up
  42:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   */
  43:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   htim1.Init.Period = (1000000U / 1000U) - 1U;
  93              		.loc 1 43 3 is_stmt 1 view .LVU23
  94              		.loc 1 43 21 is_stmt 0 view .LVU24
  95 0036 40F2E732 		movw	r2, #999
  96 003a C260     		str	r2, [r0, #12]
  44:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   htim1.Init.Prescaler = uwPrescalerValue;
  97              		.loc 1 44 3 is_stmt 1 view .LVU25
  98              		.loc 1 44 24 is_stmt 0 view .LVU26
  99 003c 4360     		str	r3, [r0, #4]
  45:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   htim1.Init.ClockDivision = 0;
 100              		.loc 1 45 3 is_stmt 1 view .LVU27
 101              		.loc 1 45 28 is_stmt 0 view .LVU28
 102 003e 0023     		movs	r3, #0
 103              	.LVL7:
 104              		.loc 1 45 28 view .LVU29
 105 0040 0361     		str	r3, [r0, #16]
  46:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 106              		.loc 1 46 3 is_stmt 1 view .LVU30
 107              		.loc 1 46 26 is_stmt 0 view .LVU31
 108 0042 8360     		str	r3, [r0, #8]
  47:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 109              		.loc 1 47 3 is_stmt 1 view .LVU32
 110              		.loc 1 47 32 is_stmt 0 view .LVU33
 111 0044 8361     		str	r3, [r0, #24]
  48:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
  49:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   status = HAL_TIM_Base_Init(&htim1);
 112              		.loc 1 49 3 is_stmt 1 view .LVU34
 113              		.loc 1 49 12 is_stmt 0 view .LVU35
 114 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 115              	.LVL8:
  50:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   if (status == HAL_OK)
 116              		.loc 1 50 3 is_stmt 1 view .LVU36
 117              		.loc 1 50 6 is_stmt 0 view .LVU37
 118 004a 0546     		mov	r5, r0
 119 004c 10B1     		cbz	r0, .L5
 120              	.LVL9:
 121              	.L2:
  51:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   {
ARM GAS  /tmp/ccKFAqlt.s 			page 4


  52:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  53:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     status = HAL_TIM_Base_Start_IT(&htim1);
  54:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     if (status == HAL_OK)
  55:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     {
  56:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     /* Enable the TIM1 global Interrupt */
  57:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****         HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
  58:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
  59:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
  60:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       {
  61:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****         /* Configure the TIM IRQ priority */
  62:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****         HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority, 0U);
  63:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****         uwTickPrio = TickPriority;
  64:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       }
  65:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       else
  66:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       {
  67:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****         status = HAL_ERROR;
  68:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       }
  69:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     }
  70:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   }
  71:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
  72:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****  /* Return function status */
  73:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   return status;
 122              		.loc 1 73 3 is_stmt 1 view .LVU38
  74:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** }
 123              		.loc 1 74 1 is_stmt 0 view .LVU39
 124 004e 2846     		mov	r0, r5
 125 0050 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_remember_state
 128              		.cfi_def_cfa_offset 12
 129              		@ sp needed
 130 0052 30BD     		pop	{r4, r5, pc}
 131              	.LVL10:
 132              	.L5:
 133              	.LCFI3:
 134              		.cfi_restore_state
  53:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     if (status == HAL_OK)
 135              		.loc 1 53 5 is_stmt 1 view .LVU40
  53:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     if (status == HAL_OK)
 136              		.loc 1 53 14 is_stmt 0 view .LVU41
 137 0054 0C48     		ldr	r0, .L7+8
 138              	.LVL11:
  53:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     if (status == HAL_OK)
 139              		.loc 1 53 14 view .LVU42
 140 0056 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 141              	.LVL12:
  54:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     {
 142              		.loc 1 54 5 is_stmt 1 view .LVU43
  54:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     {
 143              		.loc 1 54 8 is_stmt 0 view .LVU44
 144 005a 0546     		mov	r5, r0
 145 005c 0028     		cmp	r0, #0
 146 005e F6D1     		bne	.L2
  57:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
 147              		.loc 1 57 9 is_stmt 1 view .LVU45
 148 0060 1920     		movs	r0, #25
 149              	.LVL13:
ARM GAS  /tmp/ccKFAqlt.s 			page 5


  57:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
 150              		.loc 1 57 9 is_stmt 0 view .LVU46
 151 0062 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 152              	.LVL14:
  59:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       {
 153              		.loc 1 59 7 is_stmt 1 view .LVU47
  59:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       {
 154              		.loc 1 59 10 is_stmt 0 view .LVU48
 155 0066 0F2C     		cmp	r4, #15
 156 0068 01D9     		bls	.L6
  67:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       }
 157              		.loc 1 67 16 view .LVU49
 158 006a 0125     		movs	r5, #1
 159 006c EFE7     		b	.L2
 160              	.L6:
  62:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****         uwTickPrio = TickPriority;
 161              		.loc 1 62 9 is_stmt 1 view .LVU50
 162 006e 0022     		movs	r2, #0
 163 0070 2146     		mov	r1, r4
 164 0072 1920     		movs	r0, #25
 165 0074 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 166              	.LVL15:
  63:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       }
 167              		.loc 1 63 9 view .LVU51
  63:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****       }
 168              		.loc 1 63 20 is_stmt 0 view .LVU52
 169 0078 054B     		ldr	r3, .L7+16
 170 007a 1C60     		str	r4, [r3]
 171 007c E7E7     		b	.L2
 172              	.L8:
 173 007e 00BF     		.align	2
 174              	.L7:
 175 0080 00100240 		.word	1073876992
 176 0084 83DE1B43 		.word	1125899907
 177 0088 00000000 		.word	htim1
 178 008c 002C0140 		.word	1073818624
 179 0090 00000000 		.word	uwTickPrio
 180              		.cfi_endproc
 181              	.LFE288:
 183              		.section	.text.HAL_SuspendTick,"ax",%progbits
 184              		.align	1
 185              		.global	HAL_SuspendTick
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	HAL_SuspendTick:
 191              	.LFB289:
  75:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
  76:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** /**
  77:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
  78:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM1 update interrupt.
  79:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @param  None
  80:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @retval None
  81:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   */
  82:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
  83:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** {
 192              		.loc 1 83 1 is_stmt 1 view -0
ARM GAS  /tmp/ccKFAqlt.s 			page 6


 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
  84:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   /* Disable TIM1 update Interrupt */
  85:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim1, TIM_IT_UPDATE);
 197              		.loc 1 85 3 view .LVU54
 198 0000 034B     		ldr	r3, .L10
 199 0002 1A68     		ldr	r2, [r3]
 200 0004 D368     		ldr	r3, [r2, #12]
 201 0006 23F00103 		bic	r3, r3, #1
 202 000a D360     		str	r3, [r2, #12]
  86:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** }
 203              		.loc 1 86 1 is_stmt 0 view .LVU55
 204 000c 7047     		bx	lr
 205              	.L11:
 206 000e 00BF     		.align	2
 207              	.L10:
 208 0010 00000000 		.word	htim1
 209              		.cfi_endproc
 210              	.LFE289:
 212              		.section	.text.HAL_ResumeTick,"ax",%progbits
 213              		.align	1
 214              		.global	HAL_ResumeTick
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 219              	HAL_ResumeTick:
 220              	.LFB290:
  87:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
  88:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** /**
  89:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
  90:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM1 update interrupt.
  91:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @param  None
  92:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @retval None
  93:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   */
  94:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
  95:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** {
 221              		.loc 1 95 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
  96:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   /* Enable TIM1 Update interrupt */
  97:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim1, TIM_IT_UPDATE);
 226              		.loc 1 97 3 view .LVU57
 227 0000 034B     		ldr	r3, .L13
 228 0002 1A68     		ldr	r2, [r3]
 229 0004 D368     		ldr	r3, [r2, #12]
 230 0006 43F00103 		orr	r3, r3, #1
 231 000a D360     		str	r3, [r2, #12]
  98:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** }
 232              		.loc 1 98 1 is_stmt 0 view .LVU58
 233 000c 7047     		bx	lr
 234              	.L14:
 235 000e 00BF     		.align	2
 236              	.L13:
ARM GAS  /tmp/ccKFAqlt.s 			page 7


 237 0010 00000000 		.word	htim1
 238              		.cfi_endproc
 239              	.LFE290:
 241              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 242              		.align	1
 243              		.global	HAL_TIM_PeriodElapsedCallback
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 248              	HAL_TIM_PeriodElapsedCallback:
 249              	.LVL16:
 250              	.LFB291:
  99:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
 100:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** /**
 101:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @brief  Period elapsed callback in non blocking mode
 102:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 103:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 104:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * a global variable "uwTick" used as application time base.
 105:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @param  htim : TIM handle
 106:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @retval None
 107:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   */
 108:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 109:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** {
 251              		.loc 1 109 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		.loc 1 109 1 is_stmt 0 view .LVU60
 256 0000 08B5     		push	{r3, lr}
 257              	.LCFI4:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 3, -8
 260              		.cfi_offset 14, -4
 110:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   if (htim->Instance == TIM1) {
 261              		.loc 1 110 3 is_stmt 1 view .LVU61
 262              		.loc 1 110 11 is_stmt 0 view .LVU62
 263 0002 0268     		ldr	r2, [r0]
 264              		.loc 1 110 6 view .LVU63
 265 0004 034B     		ldr	r3, .L19
 266 0006 9A42     		cmp	r2, r3
 267 0008 00D0     		beq	.L18
 268              	.LVL17:
 269              	.L15:
 111:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     HAL_IncTick();
 112:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   }
 113:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** }
 270              		.loc 1 113 1 view .LVU64
 271 000a 08BD     		pop	{r3, pc}
 272              	.LVL18:
 273              	.L18:
 111:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****     HAL_IncTick();
 274              		.loc 1 111 5 is_stmt 1 view .LVU65
 275 000c FFF7FEFF 		bl	HAL_IncTick
 276              	.LVL19:
 277              		.loc 1 113 1 is_stmt 0 view .LVU66
 278 0010 FBE7     		b	.L15
 279              	.L20:
ARM GAS  /tmp/ccKFAqlt.s 			page 8


 280 0012 00BF     		.align	2
 281              	.L19:
 282 0014 002C0140 		.word	1073818624
 283              		.cfi_endproc
 284              	.LFE291:
 286              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 287              		.align	1
 288              		.global	TIM1_UP_TIM16_IRQHandler
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 293              	TIM1_UP_TIM16_IRQHandler:
 294              	.LFB292:
 114:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** 
 115:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** /**
 116:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   * @brief This function handles TIM1 update interrupt and TIM16 global interrupt.
 117:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   */
 118:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** void TIM1_UP_TIM16_IRQHandler(void)
 119:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** {
 295              		.loc 1 119 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299 0000 08B5     		push	{r3, lr}
 300              	.LCFI5:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 3, -8
 303              		.cfi_offset 14, -4
 120:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c ****   HAL_TIM_IRQHandler(&htim1);
 304              		.loc 1 120 3 view .LVU68
 305 0002 0248     		ldr	r0, .L23
 306 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 307              	.LVL20:
 121:stm/stm32l4xx/stm32l4xx_hal_timebase_tim.c **** }
 308              		.loc 1 121 1 is_stmt 0 view .LVU69
 309 0008 08BD     		pop	{r3, pc}
 310              	.L24:
 311 000a 00BF     		.align	2
 312              	.L23:
 313 000c 00000000 		.word	htim1
 314              		.cfi_endproc
 315              	.LFE292:
 317              		.global	htim1
 318              		.section	.bss.htim1,"aw",%nobits
 319              		.align	2
 322              	htim1:
 323 0000 00000000 		.space	76
 323      00000000 
 323      00000000 
 323      00000000 
 323      00000000 
 324              		.text
 325              	.Letext0:
 326              		.file 2 "stm/stm32l4xx/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 327              		.file 3 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/machine/_default_types.h"
 328              		.file 4 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/sys/_stdint.h"
 329              		.file 5 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
ARM GAS  /tmp/ccKFAqlt.s 			page 9


 330              		.file 6 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 331              		.file 7 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 332              		.file 8 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 333              		.file 9 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 334              		.file 10 "stm/stm32l4xx/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
ARM GAS  /tmp/ccKFAqlt.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_timebase_tim.c
     /tmp/ccKFAqlt.s:21     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccKFAqlt.s:27     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccKFAqlt.s:175    .text.HAL_InitTick:0000000000000080 $d
     /tmp/ccKFAqlt.s:322    .bss.htim1:0000000000000000 htim1
     /tmp/ccKFAqlt.s:184    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccKFAqlt.s:190    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccKFAqlt.s:208    .text.HAL_SuspendTick:0000000000000010 $d
     /tmp/ccKFAqlt.s:213    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccKFAqlt.s:219    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccKFAqlt.s:237    .text.HAL_ResumeTick:0000000000000010 $d
     /tmp/ccKFAqlt.s:242    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccKFAqlt.s:248    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccKFAqlt.s:282    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccKFAqlt.s:287    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 $t
     /tmp/ccKFAqlt.s:293    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 TIM1_UP_TIM16_IRQHandler
     /tmp/ccKFAqlt.s:313    .text.TIM1_UP_TIM16_IRQHandler:000000000000000c $d
     /tmp/ccKFAqlt.s:319    .bss.htim1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK2Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
HAL_NVIC_EnableIRQ
HAL_NVIC_SetPriority
uwTickPrio
HAL_IncTick
HAL_TIM_IRQHandler
